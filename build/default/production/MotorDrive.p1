Version 4.0 HI-TECH Software Intermediate Code
"583 MotorDrive.c
[; ;MotorDrive.c: 583: static const UB TblM0PulseChangePosition[ ( 5 + 10 * 2 ) ] = {
[c E3980 1 6 10 11 14 15 18 19 22 23 26 27 30 31 34 35 38 39 42 43 46 47 50 56 72 91 .. ]
[n E3980 PULSE_CHANGE_POSITION PULSE_CHANGE_START_P0 PULSE_CHANGE_STOP_P0 PULSE_CHANGE_START_WAITE PULSE_CHANGE_START_SPK_ON_1 PULSE_CHANGE_START_SPK_OFF_1 PULSE_CHANGE_START_SPK_ON_2 PULSE_CHANGE_START_SPK_OFF_2 PULSE_CHANGE_START_SPK_ON_3 PULSE_CHANGE_START_SPK_OFF_3 PULSE_CHANGE_START_SPK_ON_4 PULSE_CHANGE_START_SPK_OFF_4 PULSE_CHANGE_START_SPK_ON_5 PULSE_CHANGE_START_SPK_OFF_5 PULSE_CHANGE_START_SPK_ON_6 PULSE_CHANGE_START_SPK_OFF_6 PULSE_CHANGE_START_SPK_ON_7 PULSE_CHANGE_START_SPK_OFF_7 PULSE_CHANGE_START_SPK_ON_8 PULSE_CHANGE_START_SPK_OFF_8 PULSE_CHANGE_START_SPK_ON_9 PULSE_CHANGE_START_SPK_OFF_9 PULSE_CHANGE_START_SPK_ON_10 PULSE_CHANGE_START_SPK_OFF_10 PULSE_CHANGE_START_P1 PULSE_CHANGE_START_P2 PULSE_CHANGE_OFF  ]
[v F4149 `(v ~T0 @X0 0 tf ]
[v F4150 `(v ~T0 @X0 0 tf ]
[v F4152 `(v ~T0 @X0 0 tf ]
[v F4153 `(v ~T0 @X0 0 tf ]
[v F4167 `(v ~T0 @X0 0 tf ]
[v F4168 `(v ~T0 @X0 0 tf ]
[v F4181 `(v ~T0 @X0 0 tf1`uc ]
[v F4227 `(v ~T0 @X0 0 tf1`uc ]
"1041 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1041: extern volatile unsigned char TRISA __attribute__((address(0x08C)));
[v _TRISA `Vuc ~T0 @X0 0 e@140 ]
"1091
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1091: extern volatile unsigned char TRISB __attribute__((address(0x08D)));
[v _TRISB `Vuc ~T0 @X0 0 e@141 ]
"1130
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1130: extern volatile unsigned char TRISC __attribute__((address(0x08E)));
[v _TRISC `Vuc ~T0 @X0 0 e@142 ]
"1866
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1866: extern volatile unsigned char LATA __attribute__((address(0x10C)));
[v _LATA `Vuc ~T0 @X0 0 e@268 ]
"1911
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1911: extern volatile unsigned char LATB __attribute__((address(0x10D)));
[v _LATB `Vuc ~T0 @X0 0 e@269 ]
"1950
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1950: extern volatile unsigned char LATC __attribute__((address(0x10E)));
[v _LATC `Vuc ~T0 @X0 0 e@270 ]
"550 MotorDrive.c
[; ;MotorDrive.c: 550: void VrsCheck(UB motor_no);
[v _VrsCheck `(v ~T0 @X0 0 ef1`uc ]
"549
[; ;MotorDrive.c: 549: void ComparatorOn(UB motor_no);
[v _ComparatorOn `(v ~T0 @X0 0 ef1`uc ]
"548
[; ;MotorDrive.c: 548: void ComparatorOff(UB motor_no);
[v _ComparatorOff `(v ~T0 @X0 0 ef1`uc ]
"967
[; ;MotorDrive.c: 967:             if (m0PulseOutStep >= ID_PULSE_OUT_STEP_MAX) {
[c E4007 0 1 2 22 23 24 25 26 .. ]
[n E4007 ID_PULSE_OUT_STEP ID_PULSE_OUT_STEP_P0 ID_PULSE_OUT_STEP_P0_OFF ID_PULSE_OUT_STEP_SPK ID_PULSE_OUT_STEP_P1 ID_PULSE_OUT_STEP_P2 ID_PULSE_OUT_STEP_OFF ID_PULSE_OUT_STEP_WAIT ID_PULSE_OUT_STEP_MAX  ]
[v F4234 `(v ~T0 @X0 0 tf ]
[v F4235 `(v ~T0 @X0 0 tf ]
"164 mcc_generated_files/tmr2.h
[; ;mcc_generated_files/tmr2.h: 164: void TMR2_StopTimer(void);
[v _TMR2_StopTimer `(v ~T0 @X0 0 ef ]
"643 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 643:     struct {
[s S42 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S42 . . NCO1IF BCL1IF . C1IF C2IF OSFIF ]
"642
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 642: typedef union {
[u S41 `S42 1 ]
[n S41 . . ]
"653
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 653: extern volatile PIR2bits_t PIR2bits __attribute__((address(0x012)));
[v _PIR2bits `VS41 ~T0 @X0 0 e@18 ]
"570 MotorDrive.c
[; ;MotorDrive.c: 570: void SpkVrsCheck(void);
[v _SpkVrsCheck `(v ~T0 @X0 0 ef ]
"573
[; ;MotorDrive.c: 573: void SetDataTRISxWork_SPK_OPEN(void);
[v _SetDataTRISxWork_SPK_OPEN `(v ~T0 @X0 0 ef ]
[v F4239 `(v ~T0 @X0 0 tf ]
[v F4242 `(v ~T0 @X0 0 tf1`uc ]
[v F4256 `(v ~T0 @X0 0 tf1`uc ]
[v F4272 `(v ~T0 @X0 0 tf1`uc ]
[v F4288 `(v ~T0 @X0 0 tf1`uc ]
[v F4304 `(v ~T0 @X0 0 tf1`uc ]
[v F4320 `(v ~T0 @X0 0 tf1`uc ]
[v F4336 `(v ~T0 @X0 0 tf1`uc ]
[v F4352 `(v ~T0 @X0 0 tf1`uc ]
[v F4368 `(v ~T0 @X0 0 tf1`uc ]
"357 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 357:     struct {
[s S31 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S31 . IOCIF INTF TMR0IF IOCIE INTE TMR0IE PEIE GIE ]
"367
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 367:     struct {
[s S32 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S32 . . T0IF . T0IE ]
"356
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 356: typedef union {
[u S30 `S31 1 `S32 1 ]
[n S30 . . . ]
"374
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 374: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS30 ~T0 @X0 0 e@11 ]
"534 MotorDrive.c
[; ;MotorDrive.c: 534: void SetPulseOutLATxWork_M0_SHAKE_POL1_P0(void);
[v _SetPulseOutLATxWork_M0_SHAKE_POL1_P0 `(v ~T0 @X0 0 ef ]
"530
[; ;MotorDrive.c: 530: void SetPulseOutLATxWork_M0_SHAKE_POL0_P0(void);
[v _SetPulseOutLATxWork_M0_SHAKE_POL0_P0 `(v ~T0 @X0 0 ef ]
"507
[; ;MotorDrive.c: 507: void SetPulseOutLATxWork_M0_FWD_POL1_P1(void);
[v _SetPulseOutLATxWork_M0_FWD_POL1_P1 `(v ~T0 @X0 0 ef ]
"504
[; ;MotorDrive.c: 504: void SetPulseOutLATxWork_M0_FWD_POL0_P1(void);
[v _SetPulseOutLATxWork_M0_FWD_POL0_P1 `(v ~T0 @X0 0 ef ]
"513
[; ;MotorDrive.c: 513: void SetPulseOutLATxWork_M0_REV_POL1_P1(void);
[v _SetPulseOutLATxWork_M0_REV_POL1_P1 `(v ~T0 @X0 0 ef ]
"510
[; ;MotorDrive.c: 510: void SetPulseOutLATxWork_M0_REV_POL0_P1(void);
[v _SetPulseOutLATxWork_M0_REV_POL0_P1 `(v ~T0 @X0 0 ef ]
"132 mcc_generated_files/tmr2.h
[; ;mcc_generated_files/tmr2.h: 132: void TMR2_StartTimer(void);
[v _TMR2_StartTimer `(v ~T0 @X0 0 ef ]
"543 MotorDrive.c
[; ;MotorDrive.c: 543: void SetPulseOutLATxWork_M1_SHAKE_POL1_P0(void);
[v _SetPulseOutLATxWork_M1_SHAKE_POL1_P0 `(v ~T0 @X0 0 ef ]
"539
[; ;MotorDrive.c: 539: void SetPulseOutLATxWork_M1_SHAKE_POL0_P0(void);
[v _SetPulseOutLATxWork_M1_SHAKE_POL0_P0 `(v ~T0 @X0 0 ef ]
"520
[; ;MotorDrive.c: 520: void SetPulseOutLATxWork_M1_FWD_POL1_P1(void);
[v _SetPulseOutLATxWork_M1_FWD_POL1_P1 `(v ~T0 @X0 0 ef ]
"517
[; ;MotorDrive.c: 517: void SetPulseOutLATxWork_M1_FWD_POL0_P1(void);
[v _SetPulseOutLATxWork_M1_FWD_POL0_P1 `(v ~T0 @X0 0 ef ]
"526
[; ;MotorDrive.c: 526: void SetPulseOutLATxWork_M1_REV_POL1_P1(void);
[v _SetPulseOutLATxWork_M1_REV_POL1_P1 `(v ~T0 @X0 0 ef ]
"523
[; ;MotorDrive.c: 523: void SetPulseOutLATxWork_M1_REV_POL0_P1(void);
[v _SetPulseOutLATxWork_M1_REV_POL0_P1 `(v ~T0 @X0 0 ef ]
[v F3854 `(v ~T0 @X0 0 tf ]
"343 mcc_generated_files/tmr2.h
[; ;mcc_generated_files/tmr2.h: 343:  void TMR2_SetInterruptHandler(void (* InterruptHandler)(void));
[v _TMR2_SetInterruptHandler `(v ~T0 @X0 0 ef1`*F3854 ]
"586 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 586:     struct {
[s S40 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S40 . TMR1IF TMR2IF . SSP1IF TXIF RCIF ADIF TMR1GIF ]
"585
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 585: typedef union {
[u S39 `S40 1 ]
[n S39 . . ]
"597
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 597: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x011)));
[v _PIR1bits `VS39 ~T0 @X0 0 e@17 ]
"569 MotorDrive.c
[; ;MotorDrive.c: 569: void SpkComparatorOn(void);
[v _SpkComparatorOn `(v ~T0 @X0 0 ef ]
"574
[; ;MotorDrive.c: 574: void SetDataTRISxWork_SPK_SHORT(void);
[v _SetDataTRISxWork_SPK_SHORT `(v ~T0 @X0 0 ef ]
"576
[; ;MotorDrive.c: 576: void SetExcitatingOutOffData(void);
[v _SetExcitatingOutOffData `(v ~T0 @X0 0 ef ]
"568
[; ;MotorDrive.c: 568: void SpkComparatorOff(void);
[v _SpkComparatorOff `(v ~T0 @X0 0 ef ]
"1597
[; ;MotorDrive.c: 1597:     };
[c E3889 0 1 2 3 4 5 .. ]
[n E3889 DRIVE_TYPE DRIVE_SIMPLE DRIVE_SEARCH_BASE_POSITION DRIVE_CHECK_POSITION DRIVE_CORRECT_BASE_POSITION DRIVE_ACT_CORRECT_POSITION DRIVE_SEARCH_1008_POSITION  ]
[v F4418 `(v ~T0 @X0 0 tf1`uc ]
[v F4422 `(v ~T0 @X0 0 tf1`uc ]
[v F4433 `(v ~T0 @X0 0 tf1`uc ]
[v F4437 `(v ~T0 @X0 0 tf1`uc ]
"560
[; ;MotorDrive.c: 560: void PriorUpdateCorrentPosition(UB motor_no);
[v _PriorUpdateCorrentPosition `(v ~T0 @X0 0 ef1`uc ]
"563
[; ;MotorDrive.c: 563: void CorrectPosition(H *pos, H max);
[v _CorrectPosition `(v ~T0 @X0 0 ef2`*s`s ]
"1823
[; ;MotorDrive.c: 1823:     if (FREQ_SET_SELF_CONTROL_NORMAL == type) {
[c E3896 0 1 2 .. ]
[n E3896 FREQ_SETTING_TYPE FREQ_SET_SELF_CONTROL_NORMAL FREQ_SET_SELF_CONTROL_SHAKE FREQ_SET_EXTERNAL_CONTROL  ]
"552
[; ;MotorDrive.c: 552: void InitPositionSearch(UB motor_no);
[v _InitPositionSearch `(v ~T0 @X0 0 ef1`uc ]
"553
[; ;MotorDrive.c: 553: void AfterDetectedLoadPosition(UB motor_no);
[v _AfterDetectedLoadPosition `(v ~T0 @X0 0 ef1`uc ]
"1937
[; ;MotorDrive.c: 1937:     positionSearchStat[ motor_no ] = ID_SEARCH_FINE_POS_1ST;
[c E4016 0 1 2 .. ]
[n E4016 ID_SEARCH_STAT ID_SEARCH_FINE_POS_1ST ID_SEARCH_FINE_ROUGH_POS ID_SEARCH_MAX  ]
"1938
[; ;MotorDrive.c: 1938:     detectLoadType[ motor_no ] = ID_DETECT_LOAD_NULL;
[c E4027 0 1 2 11 12 13 .. ]
[n E4027 ID_DETECT_LOAD_TYPE ID_DETECT_LOAD_NULL ID_DETECT_LOAD_FINE ID_DETECT_LOAD_ROUGH ID_DETECT_LOAD_FINE_CONT ID_DETECT_LOAD_ROUGH_CONT ID_DETECT_LOAD_MAX  ]
"2049
[; ;MotorDrive.c: 2049:     UB res = ID_SEARCH_RESULT_NULL;
[c E4020 0 1 2 3 4 5 .. ]
[n E4020 ID_SEARCH_RESULT ID_SEARCH_RESULT_NULL ID_SEARCH_RESULT_NEW_POS ID_SEARCH_RESULT_CONT ID_SEARCH_RESULT_RETRY ID_SEARCH_RESULT_SUCCESS ID_SEARCH_RESULT_ERR  ]
"164 ./MotorDrive.h
[; ;./MotorDrive.h: 164: extern void SetMotorBitMotorNo( UB motor_no );
[v _SetMotorBitMotorNo `(v ~T0 @X0 0 ef1`uc ]
"556 MotorDrive.c
[; ;MotorDrive.c: 556: void DetermineBasePosition(UB motor_no);
[v _DetermineBasePosition `(v ~T0 @X0 0 ef1`uc ]
"557
[; ;MotorDrive.c: 557: void UpdataHandPosition(UB motor_no);
[v _UpdataHandPosition `(v ~T0 @X0 0 ef1`uc ]
"559
[; ;MotorDrive.c: 559: void SaveLoadPosition(UB motor_no);
[v _SaveLoadPosition `(v ~T0 @X0 0 ef1`uc ]
"554
[; ;MotorDrive.c: 554: void ActivateHandPosition(UB motor_no);
[v _ActivateHandPosition `(v ~T0 @X0 0 ef1`uc ]
"19 ./spi_control.h
[; ;./spi_control.h: 19: extern void SPIControl_SetNotification( UB motor_no );
[v _SPIControl_SetNotification `(v ~T0 @X0 0 ef1`uc ]
"555 MotorDrive.c
[; ;MotorDrive.c: 555: void MoveTargetPosition(UB motor_no);
[v _MoveTargetPosition `(v ~T0 @X0 0 ef1`uc ]
"565
[; ;MotorDrive.c: 565: void UpdateCurrentPositionByFinePosition(UB motor_no);
[v _UpdateCurrentPositionByFinePosition `(v ~T0 @X0 0 ef1`uc ]
"2012 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2012: extern volatile unsigned char CM1CON0 __attribute__((address(0x111)));
[v _CM1CON0 `Vuc ~T0 @X0 0 e@273 ]
"2069
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2069: extern volatile unsigned char CM1CON1 __attribute__((address(0x112)));
[v _CM1CON1 `Vuc ~T0 @X0 0 e@274 ]
"2141
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2141: extern volatile unsigned char CM2CON0 __attribute__((address(0x113)));
[v _CM2CON0 `Vuc ~T0 @X0 0 e@275 ]
"2198
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2198: extern volatile unsigned char CM2CON1 __attribute__((address(0x114)));
[v _CM2CON1 `Vuc ~T0 @X0 0 e@276 ]
"572 MotorDrive.c
[; ;MotorDrive.c: 572: void ExcitatingOutOn(void);
[v _ExcitatingOutOn `(v ~T0 @X0 0 ef ]
"571
[; ;MotorDrive.c: 571: void ExcitatingOutOff(void);
[v _ExcitatingOutOff `(v ~T0 @X0 0 ef ]
"575
[; ;MotorDrive.c: 575: void SetOutPutLATX(void);
[v _SetOutPutLATX `(v ~T0 @X0 0 ef ]
"505
[; ;MotorDrive.c: 505: void SetPulseOutLATxWork_M0_FWD_POL0_P2(void);
[v _SetPulseOutLATxWork_M0_FWD_POL0_P2 `(v ~T0 @X0 0 ef ]
"506
[; ;MotorDrive.c: 506: void SetPulseOutLATxWork_M0_FWD_POL0_OFF(void);
[v _SetPulseOutLATxWork_M0_FWD_POL0_OFF `(v ~T0 @X0 0 ef ]
"508
[; ;MotorDrive.c: 508: void SetPulseOutLATxWork_M0_FWD_POL1_P2(void);
[v _SetPulseOutLATxWork_M0_FWD_POL1_P2 `(v ~T0 @X0 0 ef ]
"509
[; ;MotorDrive.c: 509: void SetPulseOutLATxWork_M0_FWD_POL1_OFF(void);
[v _SetPulseOutLATxWork_M0_FWD_POL1_OFF `(v ~T0 @X0 0 ef ]
"511
[; ;MotorDrive.c: 511: void SetPulseOutLATxWork_M0_REV_POL0_P2(void);
[v _SetPulseOutLATxWork_M0_REV_POL0_P2 `(v ~T0 @X0 0 ef ]
"512
[; ;MotorDrive.c: 512: void SetPulseOutLATxWork_M0_REV_POL0_OFF(void);
[v _SetPulseOutLATxWork_M0_REV_POL0_OFF `(v ~T0 @X0 0 ef ]
"514
[; ;MotorDrive.c: 514: void SetPulseOutLATxWork_M0_REV_POL1_P2(void);
[v _SetPulseOutLATxWork_M0_REV_POL1_P2 `(v ~T0 @X0 0 ef ]
"515
[; ;MotorDrive.c: 515: void SetPulseOutLATxWork_M0_REV_POL1_OFF(void);
[v _SetPulseOutLATxWork_M0_REV_POL1_OFF `(v ~T0 @X0 0 ef ]
"518
[; ;MotorDrive.c: 518: void SetPulseOutLATxWork_M1_FWD_POL0_P2(void);
[v _SetPulseOutLATxWork_M1_FWD_POL0_P2 `(v ~T0 @X0 0 ef ]
"519
[; ;MotorDrive.c: 519: void SetPulseOutLATxWork_M1_FWD_POL0_OFF(void);
[v _SetPulseOutLATxWork_M1_FWD_POL0_OFF `(v ~T0 @X0 0 ef ]
"521
[; ;MotorDrive.c: 521: void SetPulseOutLATxWork_M1_FWD_POL1_P2(void);
[v _SetPulseOutLATxWork_M1_FWD_POL1_P2 `(v ~T0 @X0 0 ef ]
"522
[; ;MotorDrive.c: 522: void SetPulseOutLATxWork_M1_FWD_POL1_OFF(void);
[v _SetPulseOutLATxWork_M1_FWD_POL1_OFF `(v ~T0 @X0 0 ef ]
"524
[; ;MotorDrive.c: 524: void SetPulseOutLATxWork_M1_REV_POL0_P2(void);
[v _SetPulseOutLATxWork_M1_REV_POL0_P2 `(v ~T0 @X0 0 ef ]
"525
[; ;MotorDrive.c: 525: void SetPulseOutLATxWork_M1_REV_POL0_OFF(void);
[v _SetPulseOutLATxWork_M1_REV_POL0_OFF `(v ~T0 @X0 0 ef ]
"527
[; ;MotorDrive.c: 527: void SetPulseOutLATxWork_M1_REV_POL1_P2(void);
[v _SetPulseOutLATxWork_M1_REV_POL1_P2 `(v ~T0 @X0 0 ef ]
"528
[; ;MotorDrive.c: 528: void SetPulseOutLATxWork_M1_REV_POL1_OFF(void);
[v _SetPulseOutLATxWork_M1_REV_POL1_OFF `(v ~T0 @X0 0 ef ]
"531
[; ;MotorDrive.c: 531: void SetPulseOutLATxWork_M0_SHAKE_POL0_OFF(void);
[v _SetPulseOutLATxWork_M0_SHAKE_POL0_OFF `(v ~T0 @X0 0 ef ]
"533
[; ;MotorDrive.c: 533: void SetDataTRISxWork_M0_SPK_POL0_OPEN(void);
[v _SetDataTRISxWork_M0_SPK_POL0_OPEN `(v ~T0 @X0 0 ef ]
"532
[; ;MotorDrive.c: 532: void SetDataTRISxWork_M0_SPK_POL0_SHORT(void);
[v _SetDataTRISxWork_M0_SPK_POL0_SHORT `(v ~T0 @X0 0 ef ]
"535
[; ;MotorDrive.c: 535: void SetPulseOutLATxWork_M0_SHAKE_POL1_OFF(void);
[v _SetPulseOutLATxWork_M0_SHAKE_POL1_OFF `(v ~T0 @X0 0 ef ]
"537
[; ;MotorDrive.c: 537: void SetDataTRISxWork_M0_SPK_POL1_OPEN(void);
[v _SetDataTRISxWork_M0_SPK_POL1_OPEN `(v ~T0 @X0 0 ef ]
"536
[; ;MotorDrive.c: 536: void SetDataTRISxWork_M0_SPK_POL1_SHORT(void);
[v _SetDataTRISxWork_M0_SPK_POL1_SHORT `(v ~T0 @X0 0 ef ]
"540
[; ;MotorDrive.c: 540: void SetPulseOutLATxWork_M1_SHAKE_POL0_OFF(void);
[v _SetPulseOutLATxWork_M1_SHAKE_POL0_OFF `(v ~T0 @X0 0 ef ]
"542
[; ;MotorDrive.c: 542: void SetDataTRISxWork_M1_SPK_POL0_OPEN(void);
[v _SetDataTRISxWork_M1_SPK_POL0_OPEN `(v ~T0 @X0 0 ef ]
"541
[; ;MotorDrive.c: 541: void SetDataTRISxWork_M1_SPK_POL0_SHORT(void);
[v _SetDataTRISxWork_M1_SPK_POL0_SHORT `(v ~T0 @X0 0 ef ]
"544
[; ;MotorDrive.c: 544: void SetPulseOutLATxWork_M1_SHAKE_POL1_OFF(void);
[v _SetPulseOutLATxWork_M1_SHAKE_POL1_OFF `(v ~T0 @X0 0 ef ]
"546
[; ;MotorDrive.c: 546: void SetDataTRISxWork_M1_SPK_POL1_OPEN(void);
[v _SetDataTRISxWork_M1_SPK_POL1_OPEN `(v ~T0 @X0 0 ef ]
"545
[; ;MotorDrive.c: 545: void SetDataTRISxWork_M1_SPK_POL1_SHORT(void);
[v _SetDataTRISxWork_M1_SPK_POL1_SHORT `(v ~T0 @X0 0 ef ]
"54 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 54: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"74
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 74: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"94
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 94: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"114
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 114: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"177
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 177: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"197
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 197: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"221
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 221: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"241
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 241: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"261
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 261: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"313
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 313: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"333
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 333: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"353
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 353: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"431
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 431: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"481
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 481: __asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
"520
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 520: __asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
"582
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 582: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"639
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 639: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"685
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 685: __asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
"723
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 723: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"743
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 743: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"750
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 750: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"770
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 770: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"790
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 790: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"862
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 862: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"932
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 932: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"952
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 952: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"972
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 972: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1043
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1043: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1093
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1093: __asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
"1132
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1132: __asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
"1194
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1194: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1251
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1251: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1297
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1297: __asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
"1335
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1335: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1418
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1418: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1475
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1475: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1534
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1534: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"1600
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1600: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"1646
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1646: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"1653
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1653: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"1673
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1673: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"1693
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1693: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"1773
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1773: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"1820
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1820: __asm("ADCON2 equ 09Fh");
[; <" ADCON2 equ 09Fh ;# ">
"1868
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1868: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"1913
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1913: __asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
"1952
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 1952: __asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
"2014
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2014: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2071
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2071: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2143
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2143: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2200
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2200: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2272
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2272: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2298
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2298: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2331
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2331: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"2407
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2407: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"2448
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2448: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"2500
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2500: __asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
"2539
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2539: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"2586
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2586: __asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
"2622
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2622: __asm("ANSELC equ 018Eh");
[; <" ANSELC equ 018Eh ;# ">
"2681
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2681: __asm("PMADR equ 0191h");
[; <" PMADR equ 0191h ;# ">
"2688
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2688: __asm("PMADRL equ 0191h");
[; <" PMADRL equ 0191h ;# ">
"2708
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2708: __asm("PMADRH equ 0192h");
[; <" PMADRH equ 0192h ;# ">
"2728
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2728: __asm("PMDAT equ 0193h");
[; <" PMDAT equ 0193h ;# ">
"2735
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2735: __asm("PMDATL equ 0193h");
[; <" PMDATL equ 0193h ;# ">
"2755
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2755: __asm("PMDATH equ 0194h");
[; <" PMDATH equ 0194h ;# ">
"2775
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2775: __asm("PMCON1 equ 0195h");
[; <" PMCON1 equ 0195h ;# ">
"2831
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2831: __asm("PMCON2 equ 0196h");
[; <" PMCON2 equ 0196h ;# ">
"2851
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2851: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"2871
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2871: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"2891
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2891: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"2898
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2898: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"2918
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2918: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"2938
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 2938: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3000
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3000: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"3062
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3062: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"3114
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3114: __asm("WPUA equ 020Ch");
[; <" WPUA equ 020Ch ;# ">
"3172
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3172: __asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
"3220
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3220: __asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
"3225
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3225: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"3258
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3258: __asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
"3263
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3263: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"3296
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3296: __asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
"3301
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3301: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"3334
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3334: __asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
"3339
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3339: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"3456
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3456: __asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
"3461
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3461: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"3465
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3465: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"3660
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3660: __asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
"3665
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3665: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"3782
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3782: __asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
"3787
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3787: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"3904
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3904: __asm("IOCAP equ 0391h");
[; <" IOCAP equ 0391h ;# ">
"3962
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 3962: __asm("IOCAN equ 0392h");
[; <" IOCAN equ 0392h ;# ">
"4020
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4020: __asm("IOCAF equ 0393h");
[; <" IOCAF equ 0393h ;# ">
"4078
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4078: __asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
"4126
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4126: __asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
"4174
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4174: __asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
"4224
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4224: __asm("NCO1ACC equ 0498h");
[; <" NCO1ACC equ 0498h ;# ">
"4231
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4231: __asm("NCO1ACCL equ 0498h");
[; <" NCO1ACCL equ 0498h ;# ">
"4293
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4293: __asm("NCO1ACCH equ 0499h");
[; <" NCO1ACCH equ 0499h ;# ">
"4355
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4355: __asm("NCO1ACCU equ 049Ah");
[; <" NCO1ACCU equ 049Ah ;# ">
"4395
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4395: __asm("NCO1INC equ 049Bh");
[; <" NCO1INC equ 049Bh ;# ">
"4402
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4402: __asm("NCO1INCL equ 049Bh");
[; <" NCO1INCL equ 049Bh ;# ">
"4464
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4464: __asm("NCO1INCH equ 049Ch");
[; <" NCO1INCH equ 049Ch ;# ">
"4526
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4526: __asm("NCO1INCU equ 049Dh");
[; <" NCO1INCU equ 049Dh ;# ">
"4533
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4533: __asm("NCO1CON equ 049Eh");
[; <" NCO1CON equ 049Eh ;# ">
"4578
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4578: __asm("NCO1CLK equ 049Fh");
[; <" NCO1CLK equ 049Fh ;# ">
"4638
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4638: __asm("PWM1DCL equ 0611h");
[; <" PWM1DCL equ 0611h ;# ">
"4674
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4674: __asm("PWM1DCH equ 0612h");
[; <" PWM1DCH equ 0612h ;# ">
"4744
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4744: __asm("PWM1CON equ 0613h");
[; <" PWM1CON equ 0613h ;# ">
"4749
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4749: __asm("PWM1CON0 equ 0613h");
[; <" PWM1CON0 equ 0613h ;# ">
"4820
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4820: __asm("PWM2DCL equ 0614h");
[; <" PWM2DCL equ 0614h ;# ">
"4856
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4856: __asm("PWM2DCH equ 0615h");
[; <" PWM2DCH equ 0615h ;# ">
"4926
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4926: __asm("PWM2CON equ 0616h");
[; <" PWM2CON equ 0616h ;# ">
"4931
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 4931: __asm("PWM2CON0 equ 0616h");
[; <" PWM2CON0 equ 0616h ;# ">
"5002
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5002: __asm("PWM3DCL equ 0617h");
[; <" PWM3DCL equ 0617h ;# ">
"5038
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5038: __asm("PWM3DCH equ 0618h");
[; <" PWM3DCH equ 0618h ;# ">
"5108
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5108: __asm("PWM3CON equ 0619h");
[; <" PWM3CON equ 0619h ;# ">
"5113
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5113: __asm("PWM3CON0 equ 0619h");
[; <" PWM3CON0 equ 0619h ;# ">
"5184
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5184: __asm("PWM4DCL equ 061Ah");
[; <" PWM4DCL equ 061Ah ;# ">
"5220
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5220: __asm("PWM4DCH equ 061Bh");
[; <" PWM4DCH equ 061Bh ;# ">
"5290
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5290: __asm("PWM4CON equ 061Ch");
[; <" PWM4CON equ 061Ch ;# ">
"5295
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5295: __asm("PWM4CON0 equ 061Ch");
[; <" PWM4CON0 equ 061Ch ;# ">
"5366
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5366: __asm("CWG1DBR equ 0691h");
[; <" CWG1DBR equ 0691h ;# ">
"5424
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5424: __asm("CWG1DBF equ 0692h");
[; <" CWG1DBF equ 0692h ;# ">
"5482
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5482: __asm("CWG1CON0 equ 0693h");
[; <" CWG1CON0 equ 0693h ;# ">
"5541
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5541: __asm("CWG1CON1 equ 0694h");
[; <" CWG1CON1 equ 0694h ;# ">
"5618
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5618: __asm("CWG1CON2 equ 0695h");
[; <" CWG1CON2 equ 0695h ;# ">
"5669
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5669: __asm("CLCDATA equ 0F0Fh");
[; <" CLCDATA equ 0F0Fh ;# ">
"5707
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5707: __asm("CLC1CON equ 0F10h");
[; <" CLC1CON equ 0F10h ;# ">
"5827
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5827: __asm("CLC1POL equ 0F11h");
[; <" CLC1POL equ 0F11h ;# ">
"5905
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 5905: __asm("CLC1SEL0 equ 0F12h");
[; <" CLC1SEL0 equ 0F12h ;# ">
"6010
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6010: __asm("CLC1SEL1 equ 0F13h");
[; <" CLC1SEL1 equ 0F13h ;# ">
"6115
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6115: __asm("CLC1GLS0 equ 0F14h");
[; <" CLC1GLS0 equ 0F14h ;# ">
"6227
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6227: __asm("CLC1GLS1 equ 0F15h");
[; <" CLC1GLS1 equ 0F15h ;# ">
"6339
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6339: __asm("CLC1GLS2 equ 0F16h");
[; <" CLC1GLS2 equ 0F16h ;# ">
"6451
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6451: __asm("CLC1GLS3 equ 0F17h");
[; <" CLC1GLS3 equ 0F17h ;# ">
"6563
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6563: __asm("CLC2CON equ 0F18h");
[; <" CLC2CON equ 0F18h ;# ">
"6683
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6683: __asm("CLC2POL equ 0F19h");
[; <" CLC2POL equ 0F19h ;# ">
"6761
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6761: __asm("CLC2SEL0 equ 0F1Ah");
[; <" CLC2SEL0 equ 0F1Ah ;# ">
"6866
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6866: __asm("CLC2SEL1 equ 0F1Bh");
[; <" CLC2SEL1 equ 0F1Bh ;# ">
"6971
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 6971: __asm("CLC2GLS0 equ 0F1Ch");
[; <" CLC2GLS0 equ 0F1Ch ;# ">
"7083
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7083: __asm("CLC2GLS1 equ 0F1Dh");
[; <" CLC2GLS1 equ 0F1Dh ;# ">
"7195
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7195: __asm("CLC2GLS2 equ 0F1Eh");
[; <" CLC2GLS2 equ 0F1Eh ;# ">
"7307
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7307: __asm("CLC2GLS3 equ 0F1Fh");
[; <" CLC2GLS3 equ 0F1Fh ;# ">
"7419
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7419: __asm("CLC3CON equ 0F20h");
[; <" CLC3CON equ 0F20h ;# ">
"7539
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7539: __asm("CLC3POL equ 0F21h");
[; <" CLC3POL equ 0F21h ;# ">
"7617
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7617: __asm("CLC3SEL0 equ 0F22h");
[; <" CLC3SEL0 equ 0F22h ;# ">
"7722
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7722: __asm("CLC3SEL1 equ 0F23h");
[; <" CLC3SEL1 equ 0F23h ;# ">
"7827
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7827: __asm("CLC3GLS0 equ 0F24h");
[; <" CLC3GLS0 equ 0F24h ;# ">
"7939
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 7939: __asm("CLC3GLS1 equ 0F25h");
[; <" CLC3GLS1 equ 0F25h ;# ">
"8051
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8051: __asm("CLC3GLS2 equ 0F26h");
[; <" CLC3GLS2 equ 0F26h ;# ">
"8163
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8163: __asm("CLC3GLS3 equ 0F27h");
[; <" CLC3GLS3 equ 0F27h ;# ">
"8275
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8275: __asm("CLC4CON equ 0F28h");
[; <" CLC4CON equ 0F28h ;# ">
"8395
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8395: __asm("CLC4POL equ 0F29h");
[; <" CLC4POL equ 0F29h ;# ">
"8473
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8473: __asm("CLC4SEL0 equ 0F2Ah");
[; <" CLC4SEL0 equ 0F2Ah ;# ">
"8578
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8578: __asm("CLC4SEL1 equ 0F2Bh");
[; <" CLC4SEL1 equ 0F2Bh ;# ">
"8683
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8683: __asm("CLC4GLS0 equ 0F2Ch");
[; <" CLC4GLS0 equ 0F2Ch ;# ">
"8795
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8795: __asm("CLC4GLS1 equ 0F2Dh");
[; <" CLC4GLS1 equ 0F2Dh ;# ">
"8907
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 8907: __asm("CLC4GLS2 equ 0F2Eh");
[; <" CLC4GLS2 equ 0F2Eh ;# ">
"9019
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9019: __asm("CLC4GLS3 equ 0F2Fh");
[; <" CLC4GLS3 equ 0F2Fh ;# ">
"9131
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9131: __asm("ICDIO equ 0F8Ch");
[; <" ICDIO equ 0F8Ch ;# ">
"9182
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9182: __asm("ICDCON0 equ 0F8Dh");
[; <" ICDCON0 equ 0F8Dh ;# ">
"9228
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9228: __asm("ICDSTAT equ 0F91h");
[; <" ICDSTAT equ 0F91h ;# ">
"9262
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9262: __asm("DEVSEL equ 0F95h");
[; <" DEVSEL equ 0F95h ;# ">
"9294
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9294: __asm("ICDINSTL equ 0F96h");
[; <" ICDINSTL equ 0F96h ;# ">
"9356
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9356: __asm("ICDINSTH equ 0F97h");
[; <" ICDINSTH equ 0F97h ;# ">
"9406
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9406: __asm("ICDBK0CON equ 0F9Ch");
[; <" ICDBK0CON equ 0F9Ch ;# ">
"9433
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9433: __asm("ICDBK0L equ 0F9Dh");
[; <" ICDBK0L equ 0F9Dh ;# ">
"9495
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9495: __asm("ICDBK0H equ 0F9Eh");
[; <" ICDBK0H equ 0F9Eh ;# ">
"9551
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9551: __asm("BSRICDSHAD equ 0FE3h");
[; <" BSRICDSHAD equ 0FE3h ;# ">
"9571
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9571: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"9603
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9603: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"9623
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9623: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"9643
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9643: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"9663
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9663: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"9683
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9683: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"9703
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9703: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"9723
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9723: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"9743
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9743: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"9763
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9763: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"9783
[; ;C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC12-16F1xxx_DFP/1.2.63/xc8\pic\include\proc\pic16lf1509.h: 9783: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"474 MotorDrive.c
[; ;MotorDrive.c: 474: static const H TblMaxSteps[ 2 ] = {
[v _TblMaxSteps `Cs ~T0 @X0 -> 2 `i s ]
[i _TblMaxSteps
:U ..
-> -> 360 `i `s
-> -> 360 `i `s
..
]
"479
[; ;MotorDrive.c: 479: static const H TblMaxSearchSteps[ 2 ] = {
[v _TblMaxSearchSteps `Cs ~T0 @X0 -> 2 `i s ]
[i _TblMaxSearchSteps
:U ..
-> * -> 360 `i -> 3 `i `s
-> * -> 360 `i -> 3 `i `s
..
]
"583
[; ;MotorDrive.c: 583: static const UB TblM0PulseChangePosition[ ( 5 + 10 * 2 ) ] = {
[v _TblM0PulseChangePosition `Cuc ~T0 @X0 -> 25 `i s ]
[i _TblM0PulseChangePosition
:U ..
-> . `E3980 0 `uc
-> . `E3980 1 `uc
-> . `E3980 2 `uc
-> . `E3980 3 `uc
-> . `E3980 4 `uc
-> . `E3980 5 `uc
-> . `E3980 6 `uc
-> . `E3980 7 `uc
-> . `E3980 8 `uc
-> . `E3980 9 `uc
-> . `E3980 10 `uc
-> . `E3980 11 `uc
-> . `E3980 12 `uc
-> . `E3980 13 `uc
-> . `E3980 14 `uc
-> . `E3980 15 `uc
-> . `E3980 16 `uc
-> . `E3980 17 `uc
-> . `E3980 18 `uc
-> . `E3980 19 `uc
-> . `E3980 20 `uc
-> . `E3980 21 `uc
-> . `E3980 22 `uc
-> . `E3980 23 `uc
-> . `E3980 24 `uc
..
]
"611
[; ;MotorDrive.c: 611: static const UB TblM1PulseChangePosition[ ( 5 + 10 * 2 ) ] = {
[v _TblM1PulseChangePosition `Cuc ~T0 @X0 -> 25 `i s ]
[i _TblM1PulseChangePosition
:U ..
-> . `E3980 0 `uc
-> . `E3980 1 `uc
-> . `E3980 2 `uc
-> . `E3980 3 `uc
-> . `E3980 4 `uc
-> . `E3980 5 `uc
-> . `E3980 6 `uc
-> . `E3980 7 `uc
-> . `E3980 8 `uc
-> . `E3980 9 `uc
-> . `E3980 10 `uc
-> . `E3980 11 `uc
-> . `E3980 12 `uc
-> . `E3980 13 `uc
-> . `E3980 14 `uc
-> . `E3980 15 `uc
-> . `E3980 16 `uc
-> . `E3980 17 `uc
-> . `E3980 18 `uc
-> . `E3980 19 `uc
-> . `E3980 20 `uc
-> . `E3980 21 `uc
-> . `E3980 22 `uc
-> . `E3980 23 `uc
-> . `E3980 24 `uc
..
]
"641
[; ;MotorDrive.c: 641: UB motorBitOperation;
[v _motorBitOperation `uc ~T0 @X0 1 e ]
"642
[; ;MotorDrive.c: 642: UB motorNoOperation;
[v _motorNoOperation `uc ~T0 @X0 1 e ]
"644
[; ;MotorDrive.c: 644: static UB TblM0PulseChangePositionLast;
[v _TblM0PulseChangePositionLast `uc ~T0 @X0 1 s ]
"645
[; ;MotorDrive.c: 645: static UB TblM1PulseChangePositionLast;
[v _TblM1PulseChangePositionLast `uc ~T0 @X0 1 s ]
"647
[; ;MotorDrive.c: 647: static UB pulseOutLATA;
[v _pulseOutLATA `uc ~T0 @X0 1 s ]
"648
[; ;MotorDrive.c: 648: static UB pulseOutLATB;
[v _pulseOutLATB `uc ~T0 @X0 1 s ]
"649
[; ;MotorDrive.c: 649: static UB pulseOutLATC;
[v _pulseOutLATC `uc ~T0 @X0 1 s ]
"651
[; ;MotorDrive.c: 651: static UB pulseOutLATAWork_M0;
[v _pulseOutLATAWork_M0 `uc ~T0 @X0 1 s ]
"652
[; ;MotorDrive.c: 652: static UB pulseOutLATBWork_M0;
[v _pulseOutLATBWork_M0 `uc ~T0 @X0 1 s ]
"653
[; ;MotorDrive.c: 653: static UB pulseOutLATCWork_M0;
[v _pulseOutLATCWork_M0 `uc ~T0 @X0 1 s ]
"655
[; ;MotorDrive.c: 655: static UB pulseOutLATAWork_M1;
[v _pulseOutLATAWork_M1 `uc ~T0 @X0 1 s ]
"656
[; ;MotorDrive.c: 656: static UB pulseOutLATBWork_M1;
[v _pulseOutLATBWork_M1 `uc ~T0 @X0 1 s ]
"657
[; ;MotorDrive.c: 657: static UB pulseOutLATCWork_M1;
[v _pulseOutLATCWork_M1 `uc ~T0 @X0 1 s ]
"659
[; ;MotorDrive.c: 659: static UB dataTRISA;
[v _dataTRISA `uc ~T0 @X0 1 s ]
"660
[; ;MotorDrive.c: 660: static UB dataTRISB;
[v _dataTRISB `uc ~T0 @X0 1 s ]
"661
[; ;MotorDrive.c: 661: static UB dataTRISC;
[v _dataTRISC `uc ~T0 @X0 1 s ]
"663
[; ;MotorDrive.c: 663: static UB dataTRISAWork_M0;
[v _dataTRISAWork_M0 `uc ~T0 @X0 1 s ]
"664
[; ;MotorDrive.c: 664: static UB dataTRISBWork_M0;
[v _dataTRISBWork_M0 `uc ~T0 @X0 1 s ]
"665
[; ;MotorDrive.c: 665: static UB dataTRISCWork_M0;
[v _dataTRISCWork_M0 `uc ~T0 @X0 1 s ]
"667
[; ;MotorDrive.c: 667: static UB dataTRISAWork_M1;
[v _dataTRISAWork_M1 `uc ~T0 @X0 1 s ]
"668
[; ;MotorDrive.c: 668: static UB dataTRISBWork_M1;
[v _dataTRISBWork_M1 `uc ~T0 @X0 1 s ]
"669
[; ;MotorDrive.c: 669: static UB dataTRISCWork_M1;
[v _dataTRISCWork_M1 `uc ~T0 @X0 1 s ]
"671
[; ;MotorDrive.c: 671: static UB m0PulsePositionCt;
[v _m0PulsePositionCt `uc ~T0 @X0 1 s ]
"672
[; ;MotorDrive.c: 672: static UB m1PulsePositionCt;
[v _m1PulsePositionCt `uc ~T0 @X0 1 s ]
"674
[; ;MotorDrive.c: 674: static UB m0PulsePositionCtWork;
[v _m0PulsePositionCtWork `uc ~T0 @X0 1 s ]
"675
[; ;MotorDrive.c: 675: static UB m1PulsePositionCtWork;
[v _m1PulsePositionCtWork `uc ~T0 @X0 1 s ]
"677
[; ;MotorDrive.c: 677: static UB m0PulseChangePosition;
[v _m0PulseChangePosition `uc ~T0 @X0 1 s ]
"678
[; ;MotorDrive.c: 678: static UB m1PulseChangePosition;
[v _m1PulseChangePosition `uc ~T0 @X0 1 s ]
"680
[; ;MotorDrive.c: 680: static void ( *m0PulseOutChangeFunc)(void) = ((void*)0);
[v _m0PulseOutChangeFunc `*F4149 ~T0 @X0 1 s ]
[i _m0PulseOutChangeFunc
-> -> -> 0 `i `*v `*F4150
]
"681
[; ;MotorDrive.c: 681: static void ( *m1PulseOutChangeFunc)(void) = ((void*)0);
[v _m1PulseOutChangeFunc `*F4152 ~T0 @X0 1 s ]
[i _m1PulseOutChangeFunc
-> -> -> 0 `i `*v `*F4153
]
"683
[; ;MotorDrive.c: 683: static UB m0PulseOutStep;
[v _m0PulseOutStep `uc ~T0 @X0 1 s ]
"684
[; ;MotorDrive.c: 684: static UB m1PulseOutStep;
[v _m1PulseOutStep `uc ~T0 @X0 1 s ]
"686
[; ;MotorDrive.c: 686: static UB m0PulseOutStepWork;
[v _m0PulseOutStepWork `uc ~T0 @X0 1 s ]
"687
[; ;MotorDrive.c: 687: static UB m1PulseOutStepWork;
[v _m1PulseOutStepWork `uc ~T0 @X0 1 s ]
"689
[; ;MotorDrive.c: 689: static UB finishPositionCtSet[ 2 ];
[v _finishPositionCtSet `uc ~T0 @X0 -> 2 `i s ]
"691
[; ;MotorDrive.c: 691: static UB polarityBit;
[v _polarityBit `uc ~T0 @X0 1 s ]
"695
[; ;MotorDrive.c: 695: static UB excitatingEnableBit;
[v _excitatingEnableBit `uc ~T0 @X0 1 s ]
"696
[; ;MotorDrive.c: 696: static UH excitatingTime;
[v _excitatingTime `us ~T0 @X0 1 s ]
"697
[; ;MotorDrive.c: 697: static UB excitatingOffMaskTime;
[v _excitatingOffMaskTime `uc ~T0 @X0 1 s ]
"698
[; ;MotorDrive.c: 698: static UB detectSpkTurnBit;
[v _detectSpkTurnBit `uc ~T0 @X0 1 s ]
"700
[; ;MotorDrive.c: 700: static UB spkPositionCt;
[v _spkPositionCt `uc ~T0 @X0 1 s ]
"701
[; ;MotorDrive.c: 701: static UB spkChangePosition;
[v _spkChangePosition `uc ~T0 @X0 1 s ]
"702
[; ;MotorDrive.c: 702: static void ( *spkOutChangeFunc)(void) = ((void*)0);
[v _spkOutChangeFunc `*F4167 ~T0 @X0 1 s ]
[i _spkOutChangeFunc
-> -> -> 0 `i `*v `*F4168
]
"704
[; ;MotorDrive.c: 704: static UB spkOutTrisRequestFlug;
[v _spkOutTrisRequestFlug `uc ~T0 @X0 1 s ]
"705
[; ;MotorDrive.c: 705: static UB spkReqVrsCheckBit;
[v _spkReqVrsCheckBit `uc ~T0 @X0 1 s ]
"706
[; ;MotorDrive.c: 706: static UB spkReqVrsCheckWait;
[v _spkReqVrsCheckWait `uc ~T0 @X0 1 s ]
"708
[; ;MotorDrive.c: 708: static UB spkStopStatus;
[v _spkStopStatus `uc ~T0 @X0 1 s ]
"709
[; ;MotorDrive.c: 709: static UB excitatingStatusOn;
[v _excitatingStatusOn `uc ~T0 @X0 1 s ]
"714
[; ;MotorDrive.c: 714: static UB driveType[ 2 ];
[v _driveType `uc ~T0 @X0 -> 2 `i s ]
"715
[; ;MotorDrive.c: 715: static UB driveDirectionBit;
[v _driveDirectionBit `uc ~T0 @X0 1 s ]
"716
[; ;MotorDrive.c: 716: static UB addShakePulseBit;
[v _addShakePulseBit `uc ~T0 @X0 1 s ]
"717
[; ;MotorDrive.c: 717: static UB reqAfterMotorStopFuncBit;
[v _reqAfterMotorStopFuncBit `uc ~T0 @X0 1 s ]
"718
[; ;MotorDrive.c: 718: static UB reqStopMotorBit;
[v _reqStopMotorBit `uc ~T0 @X0 1 s ]
"720
[; ;MotorDrive.c: 720: static UB motorActiveBit;
[v _motorActiveBit `uc ~T0 @X0 1 s ]
"722
[; ;MotorDrive.c: 722: static void ( * cbAfterMotorStopFunc[ 2 ])(UB motor_no);
[v _cbAfterMotorStopFunc `*F4181 ~T0 @X0 -> 2 `i s ]
"724
[; ;MotorDrive.c: 724: static H motorStepCounterSet[ 2 ];
[v _motorStepCounterSet `s ~T0 @X0 -> 2 `i s ]
"725
[; ;MotorDrive.c: 725: static H motorM0StepCounter;
[v _motorM0StepCounter `s ~T0 @X0 1 s ]
"726
[; ;MotorDrive.c: 726: static H motorM1StepCounter;
[v _motorM1StepCounter `s ~T0 @X0 1 s ]
"728
[; ;MotorDrive.c: 728: static UB correctDriveSteps[ 2 ];
[v _correctDriveSteps `uc ~T0 @X0 -> 2 `i s ]
"729
[; ;MotorDrive.c: 729: static UB correctDriveDirectionBit;
[v _correctDriveDirectionBit `uc ~T0 @X0 1 s ]
"730
[; ;MotorDrive.c: 730: static UB correctDriveFinishPositionCtSet[ 2 ];
[v _correctDriveFinishPositionCtSet `uc ~T0 @X0 -> 2 `i s ]
"733
[; ;MotorDrive.c: 733: static UB OutRequestFlug;
[v _OutRequestFlug `uc ~T0 @X0 1 s ]
"734
[; ;MotorDrive.c: 734: static UB OutTrisRequestFlug;
[v _OutTrisRequestFlug `uc ~T0 @X0 1 s ]
"736
[; ;MotorDrive.c: 736: static UB vrsCountValue[ 2 ];
[v _vrsCountValue `uc ~T0 @X0 -> 2 `i s ]
"738
[; ;MotorDrive.c: 738: static UB reqComparatorOnBit;
[v _reqComparatorOnBit `uc ~T0 @X0 1 s ]
"739
[; ;MotorDrive.c: 739: static UB reqComparatorOffBit;
[v _reqComparatorOffBit `uc ~T0 @X0 1 s ]
"740
[; ;MotorDrive.c: 740: static UB reqVrsCheckBit;
[v _reqVrsCheckBit `uc ~T0 @X0 1 s ]
"743
[; ;MotorDrive.c: 743: UB handPositionActiveBit;
[v _handPositionActiveBit `uc ~T0 @X0 1 e ]
"744
[; ;MotorDrive.c: 744: static UB reqAfterDetectLoadFuncBit;
[v _reqAfterDetectLoadFuncBit `uc ~T0 @X0 1 s ]
"746
[; ;MotorDrive.c: 746: static UB reqSearchBasePosBit;
[v _reqSearchBasePosBit `uc ~T0 @X0 1 s ]
"747
[; ;MotorDrive.c: 747: UB reqCorrectBasePosBit;
[v _reqCorrectBasePosBit `uc ~T0 @X0 1 e ]
"748
[; ;MotorDrive.c: 748: UB reqCorrectFinePoBit;
[v _reqCorrectFinePoBit `uc ~T0 @X0 1 e ]
"749
[; ;MotorDrive.c: 749: static UB reqCheckLoadPosBit;
[v _reqCheckLoadPosBit `uc ~T0 @X0 1 s ]
"751
[; ;MotorDrive.c: 751: static H positionSearchCt[ 2 ];
[v _positionSearchCt `s ~T0 @X0 -> 2 `i s ]
"753
[; ;MotorDrive.c: 753: UB actCorrectDriveBit;
[v _actCorrectDriveBit `uc ~T0 @X0 1 e ]
"755
[; ;MotorDrive.c: 755: static H currentPosition[ 2 ];
[v _currentPosition `s ~T0 @X0 -> 2 `i s ]
"756
[; ;MotorDrive.c: 756: static H targetPosition[ 2 ];
[v _targetPosition `s ~T0 @X0 -> 2 `i s ]
"758
[; ;MotorDrive.c: 758: static UB detectLoadPositionIndex[ 2 ];
[v _detectLoadPositionIndex `uc ~T0 @X0 -> 2 `i s ]
[v F4207 `s ~T0 @X0 -> 23 `i t ]
"760
[; ;MotorDrive.c: 760: static H detectLoadPosition[ 2 ][ ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ) ];
[v _detectLoadPosition `F4207 ~T0 @X0 -> 2 `i s ]
[v F4209 `uc ~T0 @X0 -> 23 `i t ]
"761
[; ;MotorDrive.c: 761: static UB detectLoadPositionType[ 2 ][ ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ) ];
[v _detectLoadPositionType `F4209 ~T0 @X0 -> 2 `i s ]
"762
[; ;MotorDrive.c: 762: static H *detectLoadPositionPtr[ 2 ];
[v _detectLoadPositionPtr `*s ~T0 @X0 -> 2 `i s ]
"763
[; ;MotorDrive.c: 763: static UB *detectLoadPositionTypePtr[ 2 ];
[v _detectLoadPositionTypePtr `*uc ~T0 @X0 -> 2 `i s ]
"765
[; ;MotorDrive.c: 765: static H detectBasePosition[ 2 ];
[v _detectBasePosition `s ~T0 @X0 -> 2 `i s ]
"767
[; ;MotorDrive.c: 767: static UB loadPositionIndex[ 2 ];
[v _loadPositionIndex `uc ~T0 @X0 -> 2 `i s ]
[v F4215 `s ~T0 @X0 -> 23 `i t ]
"768
[; ;MotorDrive.c: 768: static H loadPosition[ 2 ][ ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ) ];
[v _loadPosition `F4215 ~T0 @X0 -> 2 `i s ]
[v F4217 `uc ~T0 @X0 -> 23 `i t ]
"769
[; ;MotorDrive.c: 769: static UB loadPositionType[ 2 ][ ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ) ];
[v _loadPositionType `F4217 ~T0 @X0 -> 2 `i s ]
"771
[; ;MotorDrive.c: 771: static UB detectFinePosCt[ 2 ];
[v _detectFinePosCt `uc ~T0 @X0 -> 2 `i s ]
"772
[; ;MotorDrive.c: 772: static UB detectRoughPosCt[ 2 ];
[v _detectRoughPosCt `uc ~T0 @X0 -> 2 `i s ]
"773
[; ;MotorDrive.c: 773: static UB detectLoadType[ 2 ];
[v _detectLoadType `uc ~T0 @X0 -> 2 `i s ]
"774
[; ;MotorDrive.c: 774: static UB detectLoadCont[ 2 ];
[v _detectLoadCont `uc ~T0 @X0 -> 2 `i s ]
"775
[; ;MotorDrive.c: 775: static UB positionSearchStat[ 2 ];
[v _positionSearchStat `uc ~T0 @X0 -> 2 `i s ]
"777
[; ;MotorDrive.c: 777: static H searchTotalSteps[ 2 ];
[v _searchTotalSteps `s ~T0 @X0 -> 2 `i s ]
"779
[; ;MotorDrive.c: 779: static H detectRoughTotalMove[ 2 ];
[v _detectRoughTotalMove `s ~T0 @X0 -> 2 `i s ]
"780
[; ;MotorDrive.c: 780: static const H offsetBasePosition[ 2 ] = {
[v _offsetBasePosition `Cs ~T0 @X0 -> 2 `i s ]
[i _offsetBasePosition
:U ..
-> -U -> 24 `i `s
-> -U -> 16 `i `s
..
]
"785
[; ;MotorDrive.c: 785: static void ( * cbAfterDetectLoadFunc[ 2 ])(UB motor_no);
[v _cbAfterDetectLoadFunc `*F4227 ~T0 @X0 -> 2 `i s ]
"787
[; ;MotorDrive.c: 787: static UB doubleInterval;
[v _doubleInterval `uc ~T0 @X0 1 s ]
"788
[; ;MotorDrive.c: 788: static H missingDetectFinePosition;
[v _missingDetectFinePosition `s ~T0 @X0 1 s ]
"799
[; ;MotorDrive.c: 799: void InitPulsePositionTable(UB motor_no)
[v _InitPulsePositionTable `(v ~T0 @X0 1 ef1`uc ]
"800
[; ;MotorDrive.c: 800: {
{
[e :U _InitPulsePositionTable ]
"799
[; ;MotorDrive.c: 799: void InitPulsePositionTable(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"800
[; ;MotorDrive.c: 800: {
[f ]
"801
[; ;MotorDrive.c: 801:     if (0 == motor_no) {
[e $ ! == -> 0 `i -> _motor_no `i 451  ]
{
"802
[; ;MotorDrive.c: 802:         TblM0PulseChangePositionLast = PULSE_CHANGE_OFF;
[e = _TblM0PulseChangePositionLast -> . `E3980 25 `uc ]
"803
[; ;MotorDrive.c: 803:     } else {
}
[e $U 452  ]
[e :U 451 ]
{
"804
[; ;MotorDrive.c: 804:         TblM1PulseChangePositionLast = PULSE_CHANGE_OFF;
[e = _TblM1PulseChangePositionLast -> . `E3980 25 `uc ]
"805
[; ;MotorDrive.c: 805:     }
}
[e :U 452 ]
"856
[; ;MotorDrive.c: 856: }
[e :UE 450 ]
}
"867
[; ;MotorDrive.c: 867: void TMR2_Interrupt(void)
[v _TMR2_Interrupt `(v ~T0 @X0 1 ef ]
"868
[; ;MotorDrive.c: 868: {
{
[e :U _TMR2_Interrupt ]
[f ]
"873
[; ;MotorDrive.c: 873:     if (OutTrisRequestFlug == 1) {
[e $ ! == -> _OutTrisRequestFlug `i -> 1 `i 454  ]
{
"874
[; ;MotorDrive.c: 874:         OutTrisRequestFlug = 0;
[e = _OutTrisRequestFlug -> -> 0 `i `uc ]
"878
[; ;MotorDrive.c: 878:         dataTRISA = TRISA;
[e = _dataTRISA _TRISA ]
"879
[; ;MotorDrive.c: 879:         dataTRISB = TRISB;
[e = _dataTRISB _TRISB ]
"880
[; ;MotorDrive.c: 880:         dataTRISC = TRISC;
[e = _dataTRISC _TRISC ]
"883
[; ;MotorDrive.c: 883:         dataTRISA &= (UB) (~(0x02 | 0x00));
[e =& _dataTRISA -> -> ~ | -> 2 `i -> 0 `i `uc `uc ]
"884
[; ;MotorDrive.c: 884:         dataTRISB &= (UB) (~(0x00 | 0x00));
[e =& _dataTRISB -> -> ~ | -> 0 `i -> 0 `i `uc `uc ]
"885
[; ;MotorDrive.c: 885:         dataTRISC &= (UB) (~(0x22 | 0x1C));
[e =& _dataTRISC -> -> ~ | -> 34 `i -> 28 `i `uc `uc ]
"888
[; ;MotorDrive.c: 888:         dataTRISA |= (UB) (dataTRISAWork_M0 | dataTRISAWork_M1);
[e =| _dataTRISA -> -> | -> _dataTRISAWork_M0 `i -> _dataTRISAWork_M1 `i `uc `uc ]
"889
[; ;MotorDrive.c: 889:         dataTRISB |= (UB) (dataTRISBWork_M0 | dataTRISBWork_M1);
[e =| _dataTRISB -> -> | -> _dataTRISBWork_M0 `i -> _dataTRISBWork_M1 `i `uc `uc ]
"890
[; ;MotorDrive.c: 890:         dataTRISC |= (UB) (dataTRISCWork_M0 | dataTRISCWork_M1);
[e =| _dataTRISC -> -> | -> _dataTRISCWork_M0 `i -> _dataTRISCWork_M1 `i `uc `uc ]
"893
[; ;MotorDrive.c: 893:         TRISA = dataTRISA;
[e = _TRISA _dataTRISA ]
"894
[; ;MotorDrive.c: 894:         TRISB = dataTRISB;
[e = _TRISB _dataTRISB ]
"895
[; ;MotorDrive.c: 895:         TRISC = dataTRISC;
[e = _TRISC _dataTRISC ]
"897
[; ;MotorDrive.c: 897:     }
}
[e :U 454 ]
"898
[; ;MotorDrive.c: 898:     if (OutRequestFlug == 1) {
[e $ ! == -> _OutRequestFlug `i -> 1 `i 455  ]
{
"899
[; ;MotorDrive.c: 899:         OutRequestFlug = 0;
[e = _OutRequestFlug -> -> 0 `i `uc ]
"903
[; ;MotorDrive.c: 903:         pulseOutLATA = LATA;
[e = _pulseOutLATA _LATA ]
"904
[; ;MotorDrive.c: 904:         pulseOutLATB = LATB;
[e = _pulseOutLATB _LATB ]
"905
[; ;MotorDrive.c: 905:         pulseOutLATC = LATC;
[e = _pulseOutLATC _LATC ]
"908
[; ;MotorDrive.c: 908:         pulseOutLATA &= (UB) (~(0x32 | 0x00));
[e =& _pulseOutLATA -> -> ~ | -> 50 `i -> 0 `i `uc `uc ]
"909
[; ;MotorDrive.c: 909:         pulseOutLATB &= (UB) (~(0x00 | 0xA0));
[e =& _pulseOutLATB -> -> ~ | -> 0 `i -> 160 `i `uc `uc ]
"910
[; ;MotorDrive.c: 910:         pulseOutLATC &= (UB) (~(0x02 | 0x0C));
[e =& _pulseOutLATC -> -> ~ | -> 2 `i -> 12 `i `uc `uc ]
"913
[; ;MotorDrive.c: 913:         pulseOutLATA |= (UB) (pulseOutLATAWork_M0 | pulseOutLATAWork_M1);
[e =| _pulseOutLATA -> -> | -> _pulseOutLATAWork_M0 `i -> _pulseOutLATAWork_M1 `i `uc `uc ]
"914
[; ;MotorDrive.c: 914:         pulseOutLATB |= (UB) (pulseOutLATBWork_M0 | pulseOutLATBWork_M1);
[e =| _pulseOutLATB -> -> | -> _pulseOutLATBWork_M0 `i -> _pulseOutLATBWork_M1 `i `uc `uc ]
"915
[; ;MotorDrive.c: 915:         pulseOutLATC |= (UB) (pulseOutLATCWork_M0 | pulseOutLATCWork_M1);
[e =| _pulseOutLATC -> -> | -> _pulseOutLATCWork_M0 `i -> _pulseOutLATCWork_M1 `i `uc `uc ]
"918
[; ;MotorDrive.c: 918:         LATA = pulseOutLATA;
[e = _LATA _pulseOutLATA ]
"919
[; ;MotorDrive.c: 919:         LATB = pulseOutLATB;
[e = _LATB _pulseOutLATB ]
"920
[; ;MotorDrive.c: 920:         LATC = pulseOutLATC;
[e = _LATC _pulseOutLATC ]
"921
[; ;MotorDrive.c: 921:     }
}
[e :U 455 ]
"928
[; ;MotorDrive.c: 928:     if (reqVrsCheckBit & 0x01) {
[e $ ! != & -> _reqVrsCheckBit `i -> 1 `i -> 0 `i 456  ]
{
"929
[; ;MotorDrive.c: 929:         reqVrsCheckBit &= ~0x01;
[e =& _reqVrsCheckBit -> ~ -> 1 `i `uc ]
"930
[; ;MotorDrive.c: 930:         VrsCheck(0);
[e ( _VrsCheck (1 -> -> 0 `i `uc ]
"931
[; ;MotorDrive.c: 931:     }
}
[e :U 456 ]
"932
[; ;MotorDrive.c: 932:     if (reqVrsCheckBit & 0x02) {
[e $ ! != & -> _reqVrsCheckBit `i -> 2 `i -> 0 `i 457  ]
{
"933
[; ;MotorDrive.c: 933:         reqVrsCheckBit &= ~0x02;
[e =& _reqVrsCheckBit -> ~ -> 2 `i `uc ]
"934
[; ;MotorDrive.c: 934:         VrsCheck(1);
[e ( _VrsCheck (1 -> -> 1 `i `uc ]
"935
[; ;MotorDrive.c: 935:     }
}
[e :U 457 ]
"937
[; ;MotorDrive.c: 937:     if (reqComparatorOnBit & 0x01) {
[e $ ! != & -> _reqComparatorOnBit `i -> 1 `i -> 0 `i 458  ]
{
"938
[; ;MotorDrive.c: 938:         reqComparatorOnBit &= ~0x01;
[e =& _reqComparatorOnBit -> ~ -> 1 `i `uc ]
"939
[; ;MotorDrive.c: 939:         ComparatorOn(0);
[e ( _ComparatorOn (1 -> -> 0 `i `uc ]
"940
[; ;MotorDrive.c: 940:     }
}
[e :U 458 ]
"941
[; ;MotorDrive.c: 941:     if (reqComparatorOnBit & 0x02) {
[e $ ! != & -> _reqComparatorOnBit `i -> 2 `i -> 0 `i 459  ]
{
"942
[; ;MotorDrive.c: 942:         reqComparatorOnBit &= ~0x02;
[e =& _reqComparatorOnBit -> ~ -> 2 `i `uc ]
"943
[; ;MotorDrive.c: 943:         ComparatorOn(1);
[e ( _ComparatorOn (1 -> -> 1 `i `uc ]
"944
[; ;MotorDrive.c: 944:     }
}
[e :U 459 ]
"946
[; ;MotorDrive.c: 946:     if (reqComparatorOffBit & 0x01) {
[e $ ! != & -> _reqComparatorOffBit `i -> 1 `i -> 0 `i 460  ]
{
"947
[; ;MotorDrive.c: 947:         reqComparatorOffBit &= ~0x01;
[e =& _reqComparatorOffBit -> ~ -> 1 `i `uc ]
"948
[; ;MotorDrive.c: 948:         ComparatorOff(0);
[e ( _ComparatorOff (1 -> -> 0 `i `uc ]
"949
[; ;MotorDrive.c: 949:     }
}
[e :U 460 ]
"950
[; ;MotorDrive.c: 950:     if (reqComparatorOffBit & 0x02) {
[e $ ! != & -> _reqComparatorOffBit `i -> 2 `i -> 0 `i 461  ]
{
"951
[; ;MotorDrive.c: 951:         reqComparatorOffBit &= ~0x02;
[e =& _reqComparatorOffBit -> ~ -> 2 `i `uc ]
"952
[; ;MotorDrive.c: 952:         ComparatorOff(1);
[e ( _ComparatorOff (1 -> -> 1 `i `uc ]
"953
[; ;MotorDrive.c: 953:     }
}
[e :U 461 ]
"955
[; ;MotorDrive.c: 955:     if (motorActiveBit & 0x01) {
[e $ ! != & -> _motorActiveBit `i -> 1 `i -> 0 `i 462  ]
{
"961
[; ;MotorDrive.c: 961:         m0PulsePositionCt++;
[e ++ _m0PulsePositionCt -> -> 1 `i `uc ]
"962
[; ;MotorDrive.c: 962:         if (m0PulsePositionCt == m0PulseChangePosition) {
[e $ ! == -> _m0PulsePositionCt `i -> _m0PulseChangePosition `i 463  ]
{
"965
[; ;MotorDrive.c: 965:             m0PulseOutStep++;
[e ++ _m0PulseOutStep -> -> 1 `i `uc ]
"967
[; ;MotorDrive.c: 967:             if (m0PulseOutStep >= ID_PULSE_OUT_STEP_MAX) {
[e $ ! >= -> _m0PulseOutStep `i -> . `E4007 7 `i 464  ]
{
"969
[; ;MotorDrive.c: 969:                 if (0 == (actCorrectDriveBit & 0x01)) {
[e $ ! == -> 0 `i & -> _actCorrectDriveBit `i -> 1 `i 465  ]
{
"970
[; ;MotorDrive.c: 970:                     if ((reqSearchBasePosBit | reqCorrectBasePosBit | reqCheckLoadPosBit) & 0x01) {
[e $ ! != & | | -> _reqSearchBasePosBit `i -> _reqCorrectBasePosBit `i -> _reqCheckLoadPosBit `i -> 1 `i -> 0 `i 466  ]
{
"972
[; ;MotorDrive.c: 972:                         positionSearchCt[ 0 ]++;
[e ++ *U + &U _positionSearchCt * -> -> -> 0 `i `ui `ux -> -> # *U &U _positionSearchCt `ui `ux -> -> 1 `i `s ]
"974
[; ;MotorDrive.c: 974:                         if ((0 == vrsCountValue[ 0 ])
[e $ ! || == -> 0 `i -> *U + &U _vrsCountValue * -> -> -> 0 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux `i >= -> *U + &U _positionSearchCt * -> -> -> 0 `i `ui `ux -> -> # *U &U _positionSearchCt `ui `ux `i -> *U + &U _TblMaxSteps * -> -> -> 0 `i `ui `ux -> -> # *U &U _TblMaxSteps `ui `ux `i 467  ]
"975
[; ;MotorDrive.c: 975:                                 || (positionSearchCt[ 0 ] >= TblMaxSteps[ 0 ])) {
{
"976
[; ;MotorDrive.c: 976:                             motorActiveBit &= (UB) (~0x01);
[e =& _motorActiveBit -> -> ~ -> 1 `i `uc `uc ]
"977
[; ;MotorDrive.c: 977:                             reqAfterDetectLoadFuncBit |= 0x01;
[e =| _reqAfterDetectLoadFuncBit -> -> 1 `i `uc ]
"981
[; ;MotorDrive.c: 981:                         }
}
[e :U 467 ]
"982
[; ;MotorDrive.c: 982:                     }
}
[e :U 466 ]
"983
[; ;MotorDrive.c: 983:                 }
}
[e :U 465 ]
"985
[; ;MotorDrive.c: 985:                 if (motorM0StepCounter) {
[e $ ! != -> _motorM0StepCounter `i -> 0 `i 468  ]
{
"987
[; ;MotorDrive.c: 987:                     motorM0StepCounter--;
[e -- _motorM0StepCounter -> -> 1 `i `s ]
"988
[; ;MotorDrive.c: 988:                     if (0 >= motorM0StepCounter) {
[e $ ! >= -> 0 `i -> _motorM0StepCounter `i 469  ]
{
"989
[; ;MotorDrive.c: 989:                         actCorrectDriveBit &= (UB) (~0x01);
[e =& _actCorrectDriveBit -> -> ~ -> 1 `i `uc `uc ]
"990
[; ;MotorDrive.c: 990:                         motorActiveBit &= (UB) (~0x01);
[e =& _motorActiveBit -> -> ~ -> 1 `i `uc `uc ]
"991
[; ;MotorDrive.c: 991:                         reqAfterMotorStopFuncBit |= 0x01;
[e =| _reqAfterMotorStopFuncBit -> -> 1 `i `uc ]
"992
[; ;MotorDrive.c: 992:                         motorM0StepCounter = 0;
[e = _motorM0StepCounter -> -> 0 `i `s ]
"993
[; ;MotorDrive.c: 993:                     }
}
[e :U 469 ]
"994
[; ;MotorDrive.c: 994:                 }
}
[e :U 468 ]
"996
[; ;MotorDrive.c: 996:                 if (reqStopMotorBit & 0x01) {
[e $ ! != & -> _reqStopMotorBit `i -> 1 `i -> 0 `i 470  ]
{
"997
[; ;MotorDrive.c: 997:                     reqStopMotorBit &= (UB) (~0x01);
[e =& _reqStopMotorBit -> -> ~ -> 1 `i `uc `uc ]
"998
[; ;MotorDrive.c: 998:                     motorActiveBit &= (UB) (~0x01);
[e =& _motorActiveBit -> -> ~ -> 1 `i `uc `uc ]
"999
[; ;MotorDrive.c: 999:                     reqAfterMotorStopFuncBit |= 0x01;
[e =| _reqAfterMotorStopFuncBit -> -> 1 `i `uc ]
"1000
[; ;MotorDrive.c: 1000:                 }
}
[e :U 470 ]
"1002
[; ;MotorDrive.c: 1002:                 m0PulsePositionCt = m0PulsePositionCtWork;
[e = _m0PulsePositionCt _m0PulsePositionCtWork ]
"1003
[; ;MotorDrive.c: 1003:                 m0PulseOutStep = m0PulseOutStepWork;
[e = _m0PulseOutStep _m0PulseOutStepWork ]
"1004
[; ;MotorDrive.c: 1004:                 vrsCountValue[ 0 ] = 0;
[e = *U + &U _vrsCountValue * -> -> -> 0 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux -> -> 0 `i `uc ]
"1006
[; ;MotorDrive.c: 1006:             } else {
}
[e $U 471  ]
[e :U 464 ]
{
"1008
[; ;MotorDrive.c: 1008:                 if (m0PulseOutChangeFunc) {
[e $ ! != _m0PulseOutChangeFunc -> -> 0 `i `*F4234 472  ]
{
"1009
[; ;MotorDrive.c: 1009:                     m0PulseOutChangeFunc();
[e ( *U _m0PulseOutChangeFunc ..  ]
"1010
[; ;MotorDrive.c: 1010:                 }
}
[e :U 472 ]
"1011
[; ;MotorDrive.c: 1011:             }
}
[e :U 471 ]
"1013
[; ;MotorDrive.c: 1013:             if (m0PulseOutStep < (ID_PULSE_OUT_STEP_MAX - 1)) {
[e $ ! < -> _m0PulseOutStep `i - -> . `E4007 7 `i -> 1 `i 473  ]
{
"1014
[; ;MotorDrive.c: 1014:                 m0PulseChangePosition = TblM0PulseChangePosition[ m0PulseOutStep ];
[e = _m0PulseChangePosition *U + &U _TblM0PulseChangePosition * -> _m0PulseOutStep `ux -> -> # *U &U _TblM0PulseChangePosition `ui `ux ]
"1015
[; ;MotorDrive.c: 1015:             } else {
}
[e $U 474  ]
[e :U 473 ]
{
"1016
[; ;MotorDrive.c: 1016:                 m0PulseChangePosition = TblM0PulseChangePositionLast;
[e = _m0PulseChangePosition _TblM0PulseChangePositionLast ]
"1017
[; ;MotorDrive.c: 1017:             }
}
[e :U 474 ]
"1018
[; ;MotorDrive.c: 1018:         }
}
[e :U 463 ]
"1023
[; ;MotorDrive.c: 1023:     }
}
[e :U 462 ]
"1025
[; ;MotorDrive.c: 1025:     if (motorActiveBit & 0x02) {
[e $ ! != & -> _motorActiveBit `i -> 2 `i -> 0 `i 475  ]
{
"1031
[; ;MotorDrive.c: 1031:         m1PulsePositionCt++;
[e ++ _m1PulsePositionCt -> -> 1 `i `uc ]
"1032
[; ;MotorDrive.c: 1032:         if (m1PulsePositionCt == m1PulseChangePosition) {
[e $ ! == -> _m1PulsePositionCt `i -> _m1PulseChangePosition `i 476  ]
{
"1035
[; ;MotorDrive.c: 1035:             m1PulseOutStep++;
[e ++ _m1PulseOutStep -> -> 1 `i `uc ]
"1037
[; ;MotorDrive.c: 1037:             if (m1PulseOutStep >= ID_PULSE_OUT_STEP_MAX) {
[e $ ! >= -> _m1PulseOutStep `i -> . `E4007 7 `i 477  ]
{
"1039
[; ;MotorDrive.c: 1039:                 if (0 == (actCorrectDriveBit & 0x02)) {
[e $ ! == -> 0 `i & -> _actCorrectDriveBit `i -> 2 `i 478  ]
{
"1040
[; ;MotorDrive.c: 1040:                     if ((reqSearchBasePosBit | reqCorrectBasePosBit | reqCheckLoadPosBit) & 0x02) {
[e $ ! != & | | -> _reqSearchBasePosBit `i -> _reqCorrectBasePosBit `i -> _reqCheckLoadPosBit `i -> 2 `i -> 0 `i 479  ]
{
"1042
[; ;MotorDrive.c: 1042:                         positionSearchCt[ 1 ]++;
[e ++ *U + &U _positionSearchCt * -> -> -> 1 `i `ui `ux -> -> # *U &U _positionSearchCt `ui `ux -> -> 1 `i `s ]
"1044
[; ;MotorDrive.c: 1044:                         if ((0 == vrsCountValue[ 1 ])
[e $ ! || == -> 0 `i -> *U + &U _vrsCountValue * -> -> -> 1 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux `i >= -> *U + &U _positionSearchCt * -> -> -> 1 `i `ui `ux -> -> # *U &U _positionSearchCt `ui `ux `i -> *U + &U _TblMaxSteps * -> -> -> 1 `i `ui `ux -> -> # *U &U _TblMaxSteps `ui `ux `i 480  ]
"1045
[; ;MotorDrive.c: 1045:                                 || (positionSearchCt[ 1 ] >= TblMaxSteps[ 1 ])) {
{
"1046
[; ;MotorDrive.c: 1046:                             motorActiveBit &= (UB) (~0x02);
[e =& _motorActiveBit -> -> ~ -> 2 `i `uc `uc ]
"1047
[; ;MotorDrive.c: 1047:                             reqAfterDetectLoadFuncBit |= 0x02;
[e =| _reqAfterDetectLoadFuncBit -> -> 2 `i `uc ]
"1051
[; ;MotorDrive.c: 1051:                         }
}
[e :U 480 ]
"1052
[; ;MotorDrive.c: 1052:                     }
}
[e :U 479 ]
"1053
[; ;MotorDrive.c: 1053:                 }
}
[e :U 478 ]
"1055
[; ;MotorDrive.c: 1055:                 if (motorM1StepCounter) {
[e $ ! != -> _motorM1StepCounter `i -> 0 `i 481  ]
{
"1057
[; ;MotorDrive.c: 1057:                     motorM1StepCounter--;
[e -- _motorM1StepCounter -> -> 1 `i `s ]
"1058
[; ;MotorDrive.c: 1058:                     if (0 >= motorM1StepCounter) {
[e $ ! >= -> 0 `i -> _motorM1StepCounter `i 482  ]
{
"1059
[; ;MotorDrive.c: 1059:                         actCorrectDriveBit &= (UB) (~0x02);
[e =& _actCorrectDriveBit -> -> ~ -> 2 `i `uc `uc ]
"1060
[; ;MotorDrive.c: 1060:                         motorActiveBit &= (UB) (~0x02);
[e =& _motorActiveBit -> -> ~ -> 2 `i `uc `uc ]
"1061
[; ;MotorDrive.c: 1061:                         reqAfterMotorStopFuncBit |= 0x02;
[e =| _reqAfterMotorStopFuncBit -> -> 2 `i `uc ]
"1062
[; ;MotorDrive.c: 1062:                         motorM1StepCounter = 0;
[e = _motorM1StepCounter -> -> 0 `i `s ]
"1063
[; ;MotorDrive.c: 1063:                     }
}
[e :U 482 ]
"1064
[; ;MotorDrive.c: 1064:                 }
}
[e :U 481 ]
"1066
[; ;MotorDrive.c: 1066:                 if (reqStopMotorBit & 0x02) {
[e $ ! != & -> _reqStopMotorBit `i -> 2 `i -> 0 `i 483  ]
{
"1067
[; ;MotorDrive.c: 1067:                     reqStopMotorBit &= (UB) (~0x02);
[e =& _reqStopMotorBit -> -> ~ -> 2 `i `uc `uc ]
"1068
[; ;MotorDrive.c: 1068:                     motorActiveBit &= (UB) (~0x02);
[e =& _motorActiveBit -> -> ~ -> 2 `i `uc `uc ]
"1069
[; ;MotorDrive.c: 1069:                     reqAfterMotorStopFuncBit |= 0x02;
[e =| _reqAfterMotorStopFuncBit -> -> 2 `i `uc ]
"1070
[; ;MotorDrive.c: 1070:                 }
}
[e :U 483 ]
"1072
[; ;MotorDrive.c: 1072:                 m1PulsePositionCt = m1PulsePositionCtWork;
[e = _m1PulsePositionCt _m1PulsePositionCtWork ]
"1073
[; ;MotorDrive.c: 1073:                 m1PulseOutStep = m1PulseOutStepWork;
[e = _m1PulseOutStep _m1PulseOutStepWork ]
"1074
[; ;MotorDrive.c: 1074:                 vrsCountValue[ 1 ] = 0;
[e = *U + &U _vrsCountValue * -> -> -> 1 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux -> -> 0 `i `uc ]
"1076
[; ;MotorDrive.c: 1076:             } else {
}
[e $U 484  ]
[e :U 477 ]
{
"1078
[; ;MotorDrive.c: 1078:                 if (m1PulseOutChangeFunc) {
[e $ ! != _m1PulseOutChangeFunc -> -> 0 `i `*F4235 485  ]
{
"1079
[; ;MotorDrive.c: 1079:                     m1PulseOutChangeFunc();
[e ( *U _m1PulseOutChangeFunc ..  ]
"1080
[; ;MotorDrive.c: 1080:                 }
}
[e :U 485 ]
"1081
[; ;MotorDrive.c: 1081:             }
}
[e :U 484 ]
"1083
[; ;MotorDrive.c: 1083:             if (m1PulseOutStep < (ID_PULSE_OUT_STEP_MAX - 1)) {
[e $ ! < -> _m1PulseOutStep `i - -> . `E4007 7 `i -> 1 `i 486  ]
{
"1084
[; ;MotorDrive.c: 1084:                 m1PulseChangePosition = TblM1PulseChangePosition[ m1PulseOutStep ];
[e = _m1PulseChangePosition *U + &U _TblM1PulseChangePosition * -> _m1PulseOutStep `ux -> -> # *U &U _TblM1PulseChangePosition `ui `ux ]
"1085
[; ;MotorDrive.c: 1085:             } else {
}
[e $U 487  ]
[e :U 486 ]
{
"1086
[; ;MotorDrive.c: 1086:                 m1PulseChangePosition = TblM1PulseChangePositionLast;
[e = _m1PulseChangePosition _TblM1PulseChangePositionLast ]
"1087
[; ;MotorDrive.c: 1087:             }
}
[e :U 487 ]
"1088
[; ;MotorDrive.c: 1088:         }
}
[e :U 476 ]
"1093
[; ;MotorDrive.c: 1093:     }
}
[e :U 475 ]
"1099
[; ;MotorDrive.c: 1099:     if (0 == motorActiveBit) {
[e $ ! == -> 0 `i -> _motorActiveBit `i 488  ]
{
"1100
[; ;MotorDrive.c: 1100:         TMR2_StopTimer();
[e ( _TMR2_StopTimer ..  ]
"1101
[; ;MotorDrive.c: 1101:     }
}
[e :U 488 ]
"1102
[; ;MotorDrive.c: 1102: }
[e :UE 453 ]
}
"1112
[; ;MotorDrive.c: 1112: void TMR2_Interrupt_SPK(void)
[v _TMR2_Interrupt_SPK `(v ~T0 @X0 1 ef ]
"1113
[; ;MotorDrive.c: 1113: {
{
[e :U _TMR2_Interrupt_SPK ]
[f ]
"1114
[; ;MotorDrive.c: 1114:     if (spkOutTrisRequestFlug == 1) {
[e $ ! == -> _spkOutTrisRequestFlug `i -> 1 `i 490  ]
{
"1115
[; ;MotorDrive.c: 1115:         spkOutTrisRequestFlug = 0;
[e = _spkOutTrisRequestFlug -> -> 0 `i `uc ]
"1119
[; ;MotorDrive.c: 1119:         dataTRISA = TRISA;
[e = _dataTRISA _TRISA ]
"1120
[; ;MotorDrive.c: 1120:         dataTRISB = TRISB;
[e = _dataTRISB _TRISB ]
"1121
[; ;MotorDrive.c: 1121:         dataTRISC = TRISC;
[e = _dataTRISC _TRISC ]
"1125
[; ;MotorDrive.c: 1125:         dataTRISA &= (UB) (~(0x02 | 0x00));
[e =& _dataTRISA -> -> ~ | -> 2 `i -> 0 `i `uc `uc ]
"1126
[; ;MotorDrive.c: 1126:         dataTRISB &= (UB) (~(0x00 | 0x00));
[e =& _dataTRISB -> -> ~ | -> 0 `i -> 0 `i `uc `uc ]
"1127
[; ;MotorDrive.c: 1127:         dataTRISC &= (UB) (~(0x22 | 0x1C));
[e =& _dataTRISC -> -> ~ | -> 34 `i -> 28 `i `uc `uc ]
"1130
[; ;MotorDrive.c: 1130:         dataTRISA |= (UB) (dataTRISAWork_M0 | dataTRISAWork_M1);
[e =| _dataTRISA -> -> | -> _dataTRISAWork_M0 `i -> _dataTRISAWork_M1 `i `uc `uc ]
"1131
[; ;MotorDrive.c: 1131:         dataTRISB |= (UB) (dataTRISBWork_M0 | dataTRISBWork_M1);
[e =| _dataTRISB -> -> | -> _dataTRISBWork_M0 `i -> _dataTRISBWork_M1 `i `uc `uc ]
"1132
[; ;MotorDrive.c: 1132:         dataTRISC |= (UB) (dataTRISCWork_M0 | dataTRISCWork_M1);
[e =| _dataTRISC -> -> | -> _dataTRISCWork_M0 `i -> _dataTRISCWork_M1 `i `uc `uc ]
"1135
[; ;MotorDrive.c: 1135:         TRISA = dataTRISA;
[e = _TRISA _dataTRISA ]
"1136
[; ;MotorDrive.c: 1136:         TRISB = dataTRISB;
[e = _TRISB _dataTRISB ]
"1137
[; ;MotorDrive.c: 1137:         TRISC = dataTRISC;
[e = _TRISC _dataTRISC ]
"1140
[; ;MotorDrive.c: 1140:         if (excitatingOffMaskTime > 0) {
[e $ ! > -> _excitatingOffMaskTime `i -> 0 `i 491  ]
{
"1142
[; ;MotorDrive.c: 1142:             excitatingOffMaskTime--;
[e -- _excitatingOffMaskTime -> -> 1 `i `uc ]
"1143
[; ;MotorDrive.c: 1143:             PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"1144
[; ;MotorDrive.c: 1144:             PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"1147
[; ;MotorDrive.c: 1147:         }
}
[e :U 491 ]
"1150
[; ;MotorDrive.c: 1150:         if ((spkReqVrsCheckBit & 0x01) || (spkReqVrsCheckBit & 0x02)) {
[e $ ! || != & -> _spkReqVrsCheckBit `i -> 1 `i -> 0 `i != & -> _spkReqVrsCheckBit `i -> 2 `i -> 0 `i 492  ]
{
"1151
[; ;MotorDrive.c: 1151:             spkReqVrsCheckBit &= (UB) (~(0x01 | 0x02));
[e =& _spkReqVrsCheckBit -> -> ~ | -> 1 `i -> 2 `i `uc `uc ]
"1153
[; ;MotorDrive.c: 1153:             if (excitatingOffMaskTime == 0) {
[e $ ! == -> _excitatingOffMaskTime `i -> 0 `i 493  ]
{
"1155
[; ;MotorDrive.c: 1155:                 SpkVrsCheck();
[e ( _SpkVrsCheck ..  ]
"1156
[; ;MotorDrive.c: 1156:             }
}
[e :U 493 ]
"1158
[; ;MotorDrive.c: 1158:         }
}
[e :U 492 ]
"1160
[; ;MotorDrive.c: 1160:     }
}
[e :U 490 ]
"1163
[; ;MotorDrive.c: 1163:     if (excitatingTime > 0) {
[e $ ! > -> _excitatingTime `ui -> -> 0 `i `ui 494  ]
{
"1165
[; ;MotorDrive.c: 1165:         excitatingTime--;
[e -- _excitatingTime -> -> 1 `i `us ]
"1167
[; ;MotorDrive.c: 1167:         if (excitatingTime == 0) {
[e $ ! == -> _excitatingTime `ui -> -> 0 `i `ui 495  ]
{
"1169
[; ;MotorDrive.c: 1169:             spkStopStatus = 0;
[e = _spkStopStatus -> -> 0 `i `uc ]
"1170
[; ;MotorDrive.c: 1170:             spkReqVrsCheckWait = 1;
[e = _spkReqVrsCheckWait -> -> 1 `i `uc ]
"1173
[; ;MotorDrive.c: 1173:             spkOutChangeFunc = SetDataTRISxWork_SPK_OPEN;
[e = _spkOutChangeFunc &U _SetDataTRISxWork_SPK_OPEN ]
"1174
[; ;MotorDrive.c: 1174:             spkChangePosition = 0;
[e = _spkChangePosition -> -> 0 `i `uc ]
"1175
[; ;MotorDrive.c: 1175:             spkPositionCt = 0;
[e = _spkPositionCt -> -> 0 `i `uc ]
"1179
[; ;MotorDrive.c: 1179:         }
}
[e :U 495 ]
"1180
[; ;MotorDrive.c: 1180:     }
}
[e :U 494 ]
"1182
[; ;MotorDrive.c: 1182:     spkPositionCt++;
[e ++ _spkPositionCt -> -> 1 `i `uc ]
"1184
[; ;MotorDrive.c: 1184:     if (spkPositionCt == 4) {
[e $ ! == -> _spkPositionCt `i -> 4 `i 496  ]
{
"1186
[; ;MotorDrive.c: 1186:         spkPositionCt = 0;
[e = _spkPositionCt -> -> 0 `i `uc ]
"1187
[; ;MotorDrive.c: 1187:     }
}
[e :U 496 ]
"1189
[; ;MotorDrive.c: 1189:     if (spkPositionCt == spkChangePosition) {
[e $ ! == -> _spkPositionCt `i -> _spkChangePosition `i 497  ]
{
"1192
[; ;MotorDrive.c: 1192:         if (spkOutChangeFunc) {
[e $ ! != _spkOutChangeFunc -> -> 0 `i `*F4239 498  ]
{
"1193
[; ;MotorDrive.c: 1193:             spkOutChangeFunc();
[e ( *U _spkOutChangeFunc ..  ]
"1194
[; ;MotorDrive.c: 1194:         }
}
[e :U 498 ]
"1195
[; ;MotorDrive.c: 1195:     }
}
[e :U 497 ]
"1197
[; ;MotorDrive.c: 1197: }
[e :UE 489 ]
}
"1208
[; ;MotorDrive.c: 1208: void WatchMotorDriveFinish(void)
[v _WatchMotorDriveFinish `(v ~T0 @X0 1 ef ]
"1209
[; ;MotorDrive.c: 1209: {
{
[e :U _WatchMotorDriveFinish ]
[f ]
"1210
[; ;MotorDrive.c: 1210:     void ( *func)(UB motor_no);
[v _func `*F4242 ~T0 @X0 1 a ]
"1212
[; ;MotorDrive.c: 1212:     if (reqAfterDetectLoadFuncBit & 0x01) {
[e $ ! != & -> _reqAfterDetectLoadFuncBit `i -> 1 `i -> 0 `i 500  ]
{
"1214
[; ;MotorDrive.c: 1214:         reqAfterDetectLoadFuncBit &= (UB) (~0x01);
[e =& _reqAfterDetectLoadFuncBit -> -> ~ -> 1 `i `uc `uc ]
"1216
[; ;MotorDrive.c: 1216:         if (cbAfterDetectLoadFunc[ 0 ]) {
[e $ ! != *U + &U _cbAfterDetectLoadFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux -> -> 0 `i `*F4256 501  ]
{
"1217
[; ;MotorDrive.c: 1217:             func = cbAfterDetectLoadFunc[ 0 ];
[e = _func *U + &U _cbAfterDetectLoadFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux ]
"1218
[; ;MotorDrive.c: 1218:             cbAfterDetectLoadFunc[ 0 ] = ((void*)0);
[e = *U + &U _cbAfterDetectLoadFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux -> -> -> 0 `i `*v `*F4272 ]
"1219
[; ;MotorDrive.c: 1219:             func(0);
[e ( *U _func (1 -> -> 0 `i `uc ]
"1220
[; ;MotorDrive.c: 1220:         }
}
[e :U 501 ]
"1221
[; ;MotorDrive.c: 1221:     }
}
[e :U 500 ]
"1223
[; ;MotorDrive.c: 1223:     if (reqAfterDetectLoadFuncBit & 0x02) {
[e $ ! != & -> _reqAfterDetectLoadFuncBit `i -> 2 `i -> 0 `i 502  ]
{
"1225
[; ;MotorDrive.c: 1225:         reqAfterDetectLoadFuncBit &= (UB) (~0x02);
[e =& _reqAfterDetectLoadFuncBit -> -> ~ -> 2 `i `uc `uc ]
"1227
[; ;MotorDrive.c: 1227:         if (cbAfterDetectLoadFunc[ 1 ]) {
[e $ ! != *U + &U _cbAfterDetectLoadFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux -> -> 0 `i `*F4288 503  ]
{
"1228
[; ;MotorDrive.c: 1228:             func = cbAfterDetectLoadFunc[ 1 ];
[e = _func *U + &U _cbAfterDetectLoadFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux ]
"1229
[; ;MotorDrive.c: 1229:             cbAfterDetectLoadFunc[ 1 ] = ((void*)0);
[e = *U + &U _cbAfterDetectLoadFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux -> -> -> 0 `i `*v `*F4304 ]
"1230
[; ;MotorDrive.c: 1230:             func(1);
[e ( *U _func (1 -> -> 1 `i `uc ]
"1231
[; ;MotorDrive.c: 1231:         }
}
[e :U 503 ]
"1232
[; ;MotorDrive.c: 1232:     }
}
[e :U 502 ]
"1234
[; ;MotorDrive.c: 1234:     if (reqAfterMotorStopFuncBit & 0x01) {
[e $ ! != & -> _reqAfterMotorStopFuncBit `i -> 1 `i -> 0 `i 504  ]
{
"1236
[; ;MotorDrive.c: 1236:         reqAfterMotorStopFuncBit &= (UB) (~0x01);
[e =& _reqAfterMotorStopFuncBit -> -> ~ -> 1 `i `uc `uc ]
"1238
[; ;MotorDrive.c: 1238:         if (cbAfterMotorStopFunc[ 0 ]) {
[e $ ! != *U + &U _cbAfterMotorStopFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux -> -> 0 `i `*F4320 505  ]
{
"1239
[; ;MotorDrive.c: 1239:             func = cbAfterMotorStopFunc[ 0 ];
[e = _func *U + &U _cbAfterMotorStopFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux ]
"1240
[; ;MotorDrive.c: 1240:             cbAfterMotorStopFunc[ 0 ] = ((void*)0);
[e = *U + &U _cbAfterMotorStopFunc * -> -> -> 0 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux -> -> -> 0 `i `*v `*F4336 ]
"1241
[; ;MotorDrive.c: 1241:             func(0);
[e ( *U _func (1 -> -> 0 `i `uc ]
"1242
[; ;MotorDrive.c: 1242:         }
}
[e :U 505 ]
"1243
[; ;MotorDrive.c: 1243:     }
}
[e :U 504 ]
"1245
[; ;MotorDrive.c: 1245:     if (reqAfterMotorStopFuncBit & 0x02) {
[e $ ! != & -> _reqAfterMotorStopFuncBit `i -> 2 `i -> 0 `i 506  ]
{
"1247
[; ;MotorDrive.c: 1247:         reqAfterMotorStopFuncBit &= (UB) (~0x02);
[e =& _reqAfterMotorStopFuncBit -> -> ~ -> 2 `i `uc `uc ]
"1249
[; ;MotorDrive.c: 1249:         if (cbAfterMotorStopFunc[ 1 ]) {
[e $ ! != *U + &U _cbAfterMotorStopFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux -> -> 0 `i `*F4352 507  ]
{
"1250
[; ;MotorDrive.c: 1250:             func = cbAfterMotorStopFunc[ 1 ];
[e = _func *U + &U _cbAfterMotorStopFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux ]
"1251
[; ;MotorDrive.c: 1251:             cbAfterMotorStopFunc[ 1 ] = ((void*)0);
[e = *U + &U _cbAfterMotorStopFunc * -> -> -> 1 `i `ui `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux -> -> -> 0 `i `*v `*F4368 ]
"1252
[; ;MotorDrive.c: 1252:             func(1);
[e ( *U _func (1 -> -> 1 `i `uc ]
"1253
[; ;MotorDrive.c: 1253:         }
}
[e :U 507 ]
"1254
[; ;MotorDrive.c: 1254:     }
}
[e :U 506 ]
"1255
[; ;MotorDrive.c: 1255: }
[e :UE 499 ]
}
"1268
[; ;MotorDrive.c: 1268: void StartPulseOutM0(void)
[v _StartPulseOutM0 `(v ~T0 @X0 1 ef ]
"1269
[; ;MotorDrive.c: 1269: {
{
[e :U _StartPulseOutM0 ]
[f ]
"1270
[; ;MotorDrive.c: 1270:     (INTCONbits.PEIE = 0);
[e = . . _INTCONbits 0 6 -> -> 0 `i `uc ]
"1272
[; ;MotorDrive.c: 1272:     if ((reqSearchBasePosBit & 0x01) || (motorStepCounterSet[ 0 ])) {
[e $ ! || != & -> _reqSearchBasePosBit `i -> 1 `i -> 0 `i != -> *U + &U _motorStepCounterSet * -> -> -> 0 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux `i -> 0 `i 509  ]
{
"1274
[; ;MotorDrive.c: 1274:         TblM0PulseChangePositionLast = finishPositionCtSet[ 0 ];
[e = _TblM0PulseChangePositionLast *U + &U _finishPositionCtSet * -> -> -> 0 `i `ui `ux -> -> # *U &U _finishPositionCtSet `ui `ux ]
"1276
[; ;MotorDrive.c: 1276:         if (driveDirectionBit & 0x01) {
[e $ ! != & -> _driveDirectionBit `i -> 1 `i -> 0 `i 510  ]
{
"1278
[; ;MotorDrive.c: 1278:             if (addShakePulseBit & 0x01) {
[e $ ! != & -> _addShakePulseBit `i -> 1 `i -> 0 `i 511  ]
{
"1280
[; ;MotorDrive.c: 1280:                 if (polarityBit & 0x01) {
[e $ ! != & -> _polarityBit `i -> 1 `i -> 0 `i 512  ]
{
"1282
[; ;MotorDrive.c: 1282:                     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL1_P0;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL1_P0 ]
"1283
[; ;MotorDrive.c: 1283:                 } else {
}
[e $U 513  ]
[e :U 512 ]
{
"1285
[; ;MotorDrive.c: 1285:                     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL0_P0;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL0_P0 ]
"1286
[; ;MotorDrive.c: 1286:                 }
}
[e :U 513 ]
"1288
[; ;MotorDrive.c: 1288:                 m0PulsePositionCtWork = ( 1 - 1 );
[e = _m0PulsePositionCtWork -> - -> 1 `i -> 1 `i `uc ]
"1289
[; ;MotorDrive.c: 1289:                 m0PulseOutStepWork = ID_PULSE_OUT_STEP_P0;
[e = _m0PulseOutStepWork -> . `E4007 0 `uc ]
"1291
[; ;MotorDrive.c: 1291:             } else {
}
[e $U 514  ]
[e :U 511 ]
{
"1293
[; ;MotorDrive.c: 1293:                 if (polarityBit & 0x01) {
[e $ ! != & -> _polarityBit `i -> 1 `i -> 0 `i 515  ]
{
"1295
[; ;MotorDrive.c: 1295:                     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL1_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL1_P1 ]
"1296
[; ;MotorDrive.c: 1296:                 } else {
}
[e $U 516  ]
[e :U 515 ]
{
"1298
[; ;MotorDrive.c: 1298:                     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL0_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL0_P1 ]
"1299
[; ;MotorDrive.c: 1299:                 }
}
[e :U 516 ]
"1301
[; ;MotorDrive.c: 1301:                 m0PulsePositionCtWork = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) - 1 );
[e = _m0PulsePositionCtWork -> - + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 1 `i `uc ]
"1302
[; ;MotorDrive.c: 1302:                 m0PulseOutStepWork = ID_PULSE_OUT_STEP_P1;
[e = _m0PulseOutStepWork -> . `E4007 3 `uc ]
"1304
[; ;MotorDrive.c: 1304:             }
}
[e :U 514 ]
"1305
[; ;MotorDrive.c: 1305:         } else {
}
[e $U 517  ]
[e :U 510 ]
{
"1307
[; ;MotorDrive.c: 1307:             if (polarityBit & 0x01) {
[e $ ! != & -> _polarityBit `i -> 1 `i -> 0 `i 518  ]
{
"1309
[; ;MotorDrive.c: 1309:                 m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL1_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL1_P1 ]
"1310
[; ;MotorDrive.c: 1310:             } else {
}
[e $U 519  ]
[e :U 518 ]
{
"1312
[; ;MotorDrive.c: 1312:                 m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL0_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL0_P1 ]
"1313
[; ;MotorDrive.c: 1313:             }
}
[e :U 519 ]
"1315
[; ;MotorDrive.c: 1315:             m0PulsePositionCtWork = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) - 1 );
[e = _m0PulsePositionCtWork -> - + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 1 `i `uc ]
"1316
[; ;MotorDrive.c: 1316:             m0PulseOutStepWork = ID_PULSE_OUT_STEP_P1;
[e = _m0PulseOutStepWork -> . `E4007 3 `uc ]
"1318
[; ;MotorDrive.c: 1318:         }
}
[e :U 517 ]
"1320
[; ;MotorDrive.c: 1320:         motorActiveBit |= 0x01;
[e =| _motorActiveBit -> -> 1 `i `uc ]
"1321
[; ;MotorDrive.c: 1321:         m0PulsePositionCt = m0PulsePositionCtWork;
[e = _m0PulsePositionCt _m0PulsePositionCtWork ]
"1322
[; ;MotorDrive.c: 1322:         m0PulseOutStep = m0PulseOutStepWork;
[e = _m0PulseOutStep _m0PulseOutStepWork ]
"1323
[; ;MotorDrive.c: 1323:         m0PulseChangePosition = TblM0PulseChangePosition[ m0PulseOutStep ];
[e = _m0PulseChangePosition *U + &U _TblM0PulseChangePosition * -> _m0PulseOutStep `ux -> -> # *U &U _TblM0PulseChangePosition `ui `ux ]
"1325
[; ;MotorDrive.c: 1325:         motorM0StepCounter = motorStepCounterSet[ 0 ];
[e = _motorM0StepCounter *U + &U _motorStepCounterSet * -> -> -> 0 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux ]
"1326
[; ;MotorDrive.c: 1326:         motorStepCounterSet[ 0 ] = 0;
[e = *U + &U _motorStepCounterSet * -> -> -> 0 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux -> -> 0 `i `s ]
"1328
[; ;MotorDrive.c: 1328:         TMR2_StartTimer();
[e ( _TMR2_StartTimer ..  ]
"1330
[; ;MotorDrive.c: 1330:     } else {
}
[e $U 520  ]
[e :U 509 ]
{
"1332
[; ;MotorDrive.c: 1332:         actCorrectDriveBit &= (UB) (~0x01);
[e =& _actCorrectDriveBit -> -> ~ -> 1 `i `uc `uc ]
"1334
[; ;MotorDrive.c: 1334:     }
}
[e :U 520 ]
"1336
[; ;MotorDrive.c: 1336:     (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"1337
[; ;MotorDrive.c: 1337: }
[e :UE 508 ]
}
"1341
[; ;MotorDrive.c: 1341: void StartPulseOutM1(void)
[v _StartPulseOutM1 `(v ~T0 @X0 1 ef ]
"1342
[; ;MotorDrive.c: 1342: {
{
[e :U _StartPulseOutM1 ]
[f ]
"1343
[; ;MotorDrive.c: 1343:     (INTCONbits.PEIE = 0);
[e = . . _INTCONbits 0 6 -> -> 0 `i `uc ]
"1345
[; ;MotorDrive.c: 1345:     if ((reqSearchBasePosBit & 0x02) || (motorStepCounterSet[ 1 ])) {
[e $ ! || != & -> _reqSearchBasePosBit `i -> 2 `i -> 0 `i != -> *U + &U _motorStepCounterSet * -> -> -> 1 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux `i -> 0 `i 522  ]
{
"1347
[; ;MotorDrive.c: 1347:         TblM1PulseChangePositionLast = finishPositionCtSet[ 1 ];
[e = _TblM1PulseChangePositionLast *U + &U _finishPositionCtSet * -> -> -> 1 `i `ui `ux -> -> # *U &U _finishPositionCtSet `ui `ux ]
"1349
[; ;MotorDrive.c: 1349:         if (driveDirectionBit & 0x02) {
[e $ ! != & -> _driveDirectionBit `i -> 2 `i -> 0 `i 523  ]
{
"1351
[; ;MotorDrive.c: 1351:             if (addShakePulseBit & 0x02) {
[e $ ! != & -> _addShakePulseBit `i -> 2 `i -> 0 `i 524  ]
{
"1353
[; ;MotorDrive.c: 1353:                 if (polarityBit & 0x02) {
[e $ ! != & -> _polarityBit `i -> 2 `i -> 0 `i 525  ]
{
"1355
[; ;MotorDrive.c: 1355:                     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL1_P0;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL1_P0 ]
"1356
[; ;MotorDrive.c: 1356:                 } else {
}
[e $U 526  ]
[e :U 525 ]
{
"1358
[; ;MotorDrive.c: 1358:                     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL0_P0;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL0_P0 ]
"1359
[; ;MotorDrive.c: 1359:                 }
}
[e :U 526 ]
"1361
[; ;MotorDrive.c: 1361:                 m1PulsePositionCtWork = ( 1 - 1 );
[e = _m1PulsePositionCtWork -> - -> 1 `i -> 1 `i `uc ]
"1362
[; ;MotorDrive.c: 1362:                 m1PulseOutStepWork = ID_PULSE_OUT_STEP_P0;
[e = _m1PulseOutStepWork -> . `E4007 0 `uc ]
"1366
[; ;MotorDrive.c: 1366:             } else {
}
[e $U 527  ]
[e :U 524 ]
{
"1368
[; ;MotorDrive.c: 1368:                 if (polarityBit & 0x02) {
[e $ ! != & -> _polarityBit `i -> 2 `i -> 0 `i 528  ]
{
"1370
[; ;MotorDrive.c: 1370:                     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL1_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL1_P1 ]
"1371
[; ;MotorDrive.c: 1371:                 } else {
}
[e $U 529  ]
[e :U 528 ]
{
"1373
[; ;MotorDrive.c: 1373:                     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL0_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL0_P1 ]
"1374
[; ;MotorDrive.c: 1374:                 }
}
[e :U 529 ]
"1376
[; ;MotorDrive.c: 1376:                 m1PulsePositionCtWork = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) - 1 );
[e = _m1PulsePositionCtWork -> - + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 1 `i `uc ]
"1377
[; ;MotorDrive.c: 1377:                 m1PulseOutStepWork = ID_PULSE_OUT_STEP_P1;
[e = _m1PulseOutStepWork -> . `E4007 3 `uc ]
"1379
[; ;MotorDrive.c: 1379:             }
}
[e :U 527 ]
"1380
[; ;MotorDrive.c: 1380:         } else {
}
[e $U 530  ]
[e :U 523 ]
{
"1382
[; ;MotorDrive.c: 1382:             if (polarityBit & 0x02) {
[e $ ! != & -> _polarityBit `i -> 2 `i -> 0 `i 531  ]
{
"1384
[; ;MotorDrive.c: 1384:                 m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL1_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL1_P1 ]
"1385
[; ;MotorDrive.c: 1385:             } else {
}
[e $U 532  ]
[e :U 531 ]
{
"1387
[; ;MotorDrive.c: 1387:                 m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL0_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL0_P1 ]
"1388
[; ;MotorDrive.c: 1388:             }
}
[e :U 532 ]
"1390
[; ;MotorDrive.c: 1390:             m1PulsePositionCtWork = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) - 1 );
[e = _m1PulsePositionCtWork -> - + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 1 `i `uc ]
"1391
[; ;MotorDrive.c: 1391:             m1PulseOutStepWork = ID_PULSE_OUT_STEP_P1;
[e = _m1PulseOutStepWork -> . `E4007 3 `uc ]
"1393
[; ;MotorDrive.c: 1393:         }
}
[e :U 530 ]
"1395
[; ;MotorDrive.c: 1395:         motorActiveBit |= 0x02;
[e =| _motorActiveBit -> -> 2 `i `uc ]
"1396
[; ;MotorDrive.c: 1396:         m1PulsePositionCt = m1PulsePositionCtWork;
[e = _m1PulsePositionCt _m1PulsePositionCtWork ]
"1397
[; ;MotorDrive.c: 1397:         m1PulseOutStep = m1PulseOutStepWork;
[e = _m1PulseOutStep _m1PulseOutStepWork ]
"1398
[; ;MotorDrive.c: 1398:         m1PulseChangePosition = TblM1PulseChangePosition[ m1PulseOutStep ];
[e = _m1PulseChangePosition *U + &U _TblM1PulseChangePosition * -> _m1PulseOutStep `ux -> -> # *U &U _TblM1PulseChangePosition `ui `ux ]
"1400
[; ;MotorDrive.c: 1400:         motorM1StepCounter = motorStepCounterSet[ 1 ];
[e = _motorM1StepCounter *U + &U _motorStepCounterSet * -> -> -> 1 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux ]
"1401
[; ;MotorDrive.c: 1401:         motorStepCounterSet[ 1 ] = 0;
[e = *U + &U _motorStepCounterSet * -> -> -> 1 `i `ui `ux -> -> # *U &U _motorStepCounterSet `ui `ux -> -> 0 `i `s ]
"1403
[; ;MotorDrive.c: 1403:         TMR2_StartTimer();
[e ( _TMR2_StartTimer ..  ]
"1405
[; ;MotorDrive.c: 1405:     } else {
}
[e $U 533  ]
[e :U 522 ]
{
"1407
[; ;MotorDrive.c: 1407:         actCorrectDriveBit &= (UB) (~0x02);
[e =& _actCorrectDriveBit -> -> ~ -> 2 `i `uc `uc ]
"1409
[; ;MotorDrive.c: 1409:     }
}
[e :U 533 ]
"1411
[; ;MotorDrive.c: 1411:     (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"1412
[; ;MotorDrive.c: 1412: }
[e :UE 521 ]
}
"1423
[; ;MotorDrive.c: 1423: void SetMotorStartSPK(void)
[v _SetMotorStartSPK `(v ~T0 @X0 1 ef ]
"1424
[; ;MotorDrive.c: 1424: {
{
[e :U _SetMotorStartSPK ]
[f ]
"1425
[; ;MotorDrive.c: 1425:     if (excitatingEnableBit & (0x01 | 0x02)) {
[e $ ! != & -> _excitatingEnableBit `i | -> 1 `i -> 2 `i -> 0 `i 535  ]
{
"1427
[; ;MotorDrive.c: 1427:         TMR2_SetInterruptHandler(TMR2_Interrupt_SPK);
[e ( _TMR2_SetInterruptHandler (1 &U _TMR2_Interrupt_SPK ]
"1429
[; ;MotorDrive.c: 1429:         PIR1bits.TMR2IF = 0;
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
"1431
[; ;MotorDrive.c: 1431:         detectSpkTurnBit = 0x00;
[e = _detectSpkTurnBit -> -> 0 `i `uc ]
"1434
[; ;MotorDrive.c: 1434:         dataTRISAWork_M0 = (0x00 | 0x00);
[e = _dataTRISAWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"1435
[; ;MotorDrive.c: 1435:         dataTRISBWork_M0 = (0x00 | 0x00);
[e = _dataTRISBWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"1436
[; ;MotorDrive.c: 1436:         dataTRISCWork_M0 = (0x00 | 0x00);
[e = _dataTRISCWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"1438
[; ;MotorDrive.c: 1438:         dataTRISAWork_M1 = (0x00 | 0x00);
[e = _dataTRISAWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"1439
[; ;MotorDrive.c: 1439:         dataTRISBWork_M1 = (0x00 | 0x00);
[e = _dataTRISBWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"1440
[; ;MotorDrive.c: 1440:         dataTRISCWork_M1 = (0x00 | 0x00);
[e = _dataTRISCWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"1442
[; ;MotorDrive.c: 1442:         spkOutTrisRequestFlug = 1;
[e = _spkOutTrisRequestFlug -> -> 1 `i `uc ]
"1445
[; ;MotorDrive.c: 1445:         SpkComparatorOn();
[e ( _SpkComparatorOn ..  ]
"1447
[; ;MotorDrive.c: 1447:         spkPositionCt = 0;
[e = _spkPositionCt -> -> 0 `i `uc ]
"1448
[; ;MotorDrive.c: 1448:         spkChangePosition = 1;
[e = _spkChangePosition -> -> 1 `i `uc ]
"1450
[; ;MotorDrive.c: 1450:         spkOutChangeFunc = SetDataTRISxWork_SPK_SHORT;
[e = _spkOutChangeFunc &U _SetDataTRISxWork_SPK_SHORT ]
"1453
[; ;MotorDrive.c: 1453:         TMR2_StartTimer();
[e ( _TMR2_StartTimer ..  ]
"1455
[; ;MotorDrive.c: 1455:     } else {
}
[e $U 536  ]
[e :U 535 ]
{
"1456
[; ;MotorDrive.c: 1456:         SetExcitatingOutOffData();
[e ( _SetExcitatingOutOffData ..  ]
"1457
[; ;MotorDrive.c: 1457:     }
}
[e :U 536 ]
"1459
[; ;MotorDrive.c: 1459: }
[e :UE 534 ]
}
"1469
[; ;MotorDrive.c: 1469: void SetMotorStopSPK(void)
[v _SetMotorStopSPK `(v ~T0 @X0 1 ef ]
"1470
[; ;MotorDrive.c: 1470: {
{
[e :U _SetMotorStopSPK ]
[f ]
"1472
[; ;MotorDrive.c: 1472:     TMR2_StopTimer();
[e ( _TMR2_StopTimer ..  ]
"1474
[; ;MotorDrive.c: 1474:     PIR1bits.TMR2IF = 0;
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
"1476
[; ;MotorDrive.c: 1476:     SpkComparatorOff();
[e ( _SpkComparatorOff ..  ]
"1477
[; ;MotorDrive.c: 1477:     excitatingTime = 0;
[e = _excitatingTime -> -> 0 `i `us ]
"1478
[; ;MotorDrive.c: 1478:     excitatingOffMaskTime = 0;
[e = _excitatingOffMaskTime -> -> 0 `i `uc ]
"1480
[; ;MotorDrive.c: 1480:     spkStopStatus = 0;
[e = _spkStopStatus -> -> 0 `i `uc ]
"1481
[; ;MotorDrive.c: 1481:     excitatingStatusOn = 0;
[e = _excitatingStatusOn -> -> 0 `i `uc ]
"1483
[; ;MotorDrive.c: 1483:     SetExcitatingOutOffData();
[e ( _SetExcitatingOutOffData ..  ]
"1486
[; ;MotorDrive.c: 1486:     TMR2_SetInterruptHandler(TMR2_Interrupt);
[e ( _TMR2_SetInterruptHandler (1 &U _TMR2_Interrupt ]
"1487
[; ;MotorDrive.c: 1487: }
[e :UE 537 ]
}
"1497
[; ;MotorDrive.c: 1497: void SetMotorEnableExcitating(UB motor_no)
[v _SetMotorEnableExcitating `(v ~T0 @X0 1 ef1`uc ]
"1498
[; ;MotorDrive.c: 1498: {
{
[e :U _SetMotorEnableExcitating ]
"1497
[; ;MotorDrive.c: 1497: void SetMotorEnableExcitating(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1498
[; ;MotorDrive.c: 1498: {
[f ]
"1499
[; ;MotorDrive.c: 1499:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1501
[; ;MotorDrive.c: 1501:     excitatingEnableBit |= (UB) (motorBitOperation);
[e =| _excitatingEnableBit -> _motorBitOperation `uc ]
"1502
[; ;MotorDrive.c: 1502: }
[e :UE 538 ]
}
"1512
[; ;MotorDrive.c: 1512: void SetMotorDisableExcitating(UB motor_no)
[v _SetMotorDisableExcitating `(v ~T0 @X0 1 ef1`uc ]
"1513
[; ;MotorDrive.c: 1513: {
{
[e :U _SetMotorDisableExcitating ]
"1512
[; ;MotorDrive.c: 1512: void SetMotorDisableExcitating(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1513
[; ;MotorDrive.c: 1513: {
[f ]
"1514
[; ;MotorDrive.c: 1514:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1516
[; ;MotorDrive.c: 1516:     excitatingEnableBit &= (UB) (~motorBitOperation);
[e =& _excitatingEnableBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1517
[; ;MotorDrive.c: 1517: }
[e :UE 539 ]
}
"1536
[; ;MotorDrive.c: 1536: void SetDriveType(UB motor_no, UB drive_type)
[v _SetDriveType `(v ~T0 @X0 1 ef2`uc`uc ]
"1537
[; ;MotorDrive.c: 1537: {
{
[e :U _SetDriveType ]
"1536
[; ;MotorDrive.c: 1536: void SetDriveType(UB motor_no, UB drive_type)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _drive_type `uc ~T0 @X0 1 r2 ]
"1537
[; ;MotorDrive.c: 1537: {
[f ]
"1539
[; ;MotorDrive.c: 1539:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1541
[; ;MotorDrive.c: 1541:     driveType[ motor_no ] = drive_type;
[e = *U + &U _driveType * -> _motor_no `ux -> -> # *U &U _driveType `ui `ux _drive_type ]
"1543
[; ;MotorDrive.c: 1543:     switch (drive_type) {
[e $U 542  ]
{
"1545
[; ;MotorDrive.c: 1545:     case DRIVE_SIMPLE:
[e :U 543 ]
"1546
[; ;MotorDrive.c: 1546:         addShakePulseBit &= (UB) (~motorBitOperation);
[e =& _addShakePulseBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1547
[; ;MotorDrive.c: 1547:         reqSearchBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqSearchBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1549
[; ;MotorDrive.c: 1549:         reqCheckLoadPosBit &= (UB) (~motorBitOperation);
[e =& _reqCheckLoadPosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1550
[; ;MotorDrive.c: 1550:         reqCorrectBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1551
[; ;MotorDrive.c: 1551:         reqCorrectFinePoBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectFinePoBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1552
[; ;MotorDrive.c: 1552:         actCorrectDriveBit &= (UB) (~motorBitOperation);
[e =& _actCorrectDriveBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1553
[; ;MotorDrive.c: 1553:         break;
[e $U 541  ]
"1555
[; ;MotorDrive.c: 1555:     case DRIVE_SEARCH_BASE_POSITION:
[e :U 544 ]
"1556
[; ;MotorDrive.c: 1556:     case DRIVE_SEARCH_1008_POSITION:
[e :U 545 ]
"1557
[; ;MotorDrive.c: 1557:         addShakePulseBit |= (UB) (motorBitOperation);
[e =| _addShakePulseBit -> _motorBitOperation `uc ]
"1558
[; ;MotorDrive.c: 1558:         reqSearchBasePosBit |= (UB) (motorBitOperation);
[e =| _reqSearchBasePosBit -> _motorBitOperation `uc ]
"1560
[; ;MotorDrive.c: 1560:         reqCheckLoadPosBit &= (UB) (~motorBitOperation);
[e =& _reqCheckLoadPosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1561
[; ;MotorDrive.c: 1561:         reqCorrectBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1562
[; ;MotorDrive.c: 1562:         reqCorrectFinePoBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectFinePoBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1563
[; ;MotorDrive.c: 1563:         actCorrectDriveBit &= (UB) (~motorBitOperation);
[e =& _actCorrectDriveBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1564
[; ;MotorDrive.c: 1564:         break;
[e $U 541  ]
"1566
[; ;MotorDrive.c: 1566:     case DRIVE_CHECK_POSITION:
[e :U 546 ]
"1567
[; ;MotorDrive.c: 1567:         addShakePulseBit |= (UB) (motorBitOperation);
[e =| _addShakePulseBit -> _motorBitOperation `uc ]
"1568
[; ;MotorDrive.c: 1568:         reqSearchBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqSearchBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1570
[; ;MotorDrive.c: 1570:         reqCheckLoadPosBit |= (UB) (motorBitOperation);
[e =| _reqCheckLoadPosBit -> _motorBitOperation `uc ]
"1574
[; ;MotorDrive.c: 1574:         break;
[e $U 541  ]
"1576
[; ;MotorDrive.c: 1576:     case DRIVE_CORRECT_BASE_POSITION:
[e :U 547 ]
"1577
[; ;MotorDrive.c: 1577:         addShakePulseBit |= (UB) (motorBitOperation);
[e =| _addShakePulseBit -> _motorBitOperation `uc ]
"1578
[; ;MotorDrive.c: 1578:         reqSearchBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqSearchBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1581
[; ;MotorDrive.c: 1581:         reqCorrectBasePosBit |= (UB) (motorBitOperation);
[e =| _reqCorrectBasePosBit -> _motorBitOperation `uc ]
"1584
[; ;MotorDrive.c: 1584:         break;
[e $U 541  ]
"1586
[; ;MotorDrive.c: 1586:     case DRIVE_ACT_CORRECT_POSITION:
[e :U 548 ]
"1587
[; ;MotorDrive.c: 1587:         addShakePulseBit &= (UB) (~motorBitOperation);
[e =& _addShakePulseBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1588
[; ;MotorDrive.c: 1588:         reqSearchBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqSearchBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1593
[; ;MotorDrive.c: 1593:         actCorrectDriveBit |= (UB) (motorBitOperation);
[e =| _actCorrectDriveBit -> _motorBitOperation `uc ]
"1595
[; ;MotorDrive.c: 1595:     default:
[e :U 549 ]
"1596
[; ;MotorDrive.c: 1596:         break;
[e $U 541  ]
"1597
[; ;MotorDrive.c: 1597:     };
}
[e $U 541  ]
[e :U 542 ]
[e [\ -> _drive_type `i , $ . `E3889 0 543
 , $ . `E3889 1 544
 , $ . `E3889 5 545
 , $ . `E3889 2 546
 , $ . `E3889 3 547
 , $ . `E3889 4 548
 549 ]
[e :U 541 ]
"1599
[; ;MotorDrive.c: 1599: }
[e :UE 540 ]
}
"1603
[; ;MotorDrive.c: 1603: void SetSearchBasePosition(UB motor_no, UB sw)
[v _SetSearchBasePosition `(v ~T0 @X0 1 ef2`uc`uc ]
"1604
[; ;MotorDrive.c: 1604: {
{
[e :U _SetSearchBasePosition ]
"1603
[; ;MotorDrive.c: 1603: void SetSearchBasePosition(UB motor_no, UB sw)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _sw `uc ~T0 @X0 1 r2 ]
"1604
[; ;MotorDrive.c: 1604: {
[f ]
"1605
[; ;MotorDrive.c: 1605:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1607
[; ;MotorDrive.c: 1607:     if (sw) {
[e $ ! != -> _sw `i -> 0 `i 551  ]
{
"1609
[; ;MotorDrive.c: 1609:         reqSearchBasePosBit |= (UB) (motorBitOperation);
[e =| _reqSearchBasePosBit -> _motorBitOperation `uc ]
"1611
[; ;MotorDrive.c: 1611:     } else {
}
[e $U 552  ]
[e :U 551 ]
{
"1613
[; ;MotorDrive.c: 1613:         reqSearchBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqSearchBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1615
[; ;MotorDrive.c: 1615:     }
}
[e :U 552 ]
"1616
[; ;MotorDrive.c: 1616: }
[e :UE 550 ]
}
"1620
[; ;MotorDrive.c: 1620: void SetCheckLoadPosition(UB motor_no, UB sw)
[v _SetCheckLoadPosition `(v ~T0 @X0 1 ef2`uc`uc ]
"1621
[; ;MotorDrive.c: 1621: {
{
[e :U _SetCheckLoadPosition ]
"1620
[; ;MotorDrive.c: 1620: void SetCheckLoadPosition(UB motor_no, UB sw)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _sw `uc ~T0 @X0 1 r2 ]
"1621
[; ;MotorDrive.c: 1621: {
[f ]
"1622
[; ;MotorDrive.c: 1622:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1624
[; ;MotorDrive.c: 1624:     if (sw && (handPositionActiveBit & motorBitOperation)) {
[e $ ! && != -> _sw `i -> 0 `i != & -> _handPositionActiveBit `i -> _motorBitOperation `i -> 0 `i 554  ]
{
"1626
[; ;MotorDrive.c: 1626:         reqCheckLoadPosBit |= (UB) (motorBitOperation);
[e =| _reqCheckLoadPosBit -> _motorBitOperation `uc ]
"1628
[; ;MotorDrive.c: 1628:     } else {
}
[e $U 555  ]
[e :U 554 ]
{
"1630
[; ;MotorDrive.c: 1630:         reqCheckLoadPosBit &= (UB) (~motorBitOperation);
[e =& _reqCheckLoadPosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1632
[; ;MotorDrive.c: 1632:     }
}
[e :U 555 ]
"1633
[; ;MotorDrive.c: 1633: }
[e :UE 553 ]
}
"1643
[; ;MotorDrive.c: 1643: void SetAfterMotorStopFunc(UB motor_no, void ( * func)(UB motor_no))
[v _SetAfterMotorStopFunc `(v ~T0 @X0 1 ef2`uc`*F4418 ]
"1644
[; ;MotorDrive.c: 1644: {
{
[e :U _SetAfterMotorStopFunc ]
"1643
[; ;MotorDrive.c: 1643: void SetAfterMotorStopFunc(UB motor_no, void ( * func)(UB motor_no))
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _func `*F4422 ~T0 @X0 1 r2 ]
"1644
[; ;MotorDrive.c: 1644: {
[f ]
"1645
[; ;MotorDrive.c: 1645:     cbAfterMotorStopFunc[ motor_no ] = func;
[e = *U + &U _cbAfterMotorStopFunc * -> _motor_no `ux -> -> # *U &U _cbAfterMotorStopFunc `ui `ux _func ]
"1646
[; ;MotorDrive.c: 1646: }
[e :UE 556 ]
}
"1656
[; ;MotorDrive.c: 1656: void SetAfterDetectLoadFunc(UB motor_no, void ( * func)(UB motor_no))
[v _SetAfterDetectLoadFunc `(v ~T0 @X0 1 ef2`uc`*F4433 ]
"1657
[; ;MotorDrive.c: 1657: {
{
[e :U _SetAfterDetectLoadFunc ]
"1656
[; ;MotorDrive.c: 1656: void SetAfterDetectLoadFunc(UB motor_no, void ( * func)(UB motor_no))
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _func `*F4437 ~T0 @X0 1 r2 ]
"1657
[; ;MotorDrive.c: 1657: {
[f ]
"1658
[; ;MotorDrive.c: 1658:     cbAfterDetectLoadFunc[ motor_no ] = func;
[e = *U + &U _cbAfterDetectLoadFunc * -> _motor_no `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux _func ]
"1659
[; ;MotorDrive.c: 1659: }
[e :UE 557 ]
}
"1663
[; ;MotorDrive.c: 1663: void *GetAfterDetectLoadFunc(UB motor_no)
[v _GetAfterDetectLoadFunc `(*v ~T0 @X0 1 ef1`uc ]
"1664
[; ;MotorDrive.c: 1664: {
{
[e :U _GetAfterDetectLoadFunc ]
"1663
[; ;MotorDrive.c: 1663: void *GetAfterDetectLoadFunc(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1664
[; ;MotorDrive.c: 1664: {
[f ]
"1665
[; ;MotorDrive.c: 1665:     return cbAfterDetectLoadFunc[ motor_no ];
[e ) -> *U + &U _cbAfterDetectLoadFunc * -> _motor_no `ux -> -> # *U &U _cbAfterDetectLoadFunc `ui `ux `*v ]
[e $UE 558  ]
"1666
[; ;MotorDrive.c: 1666: }
[e :UE 558 ]
}
"1676
[; ;MotorDrive.c: 1676: void SetMotorDirection(UB motor_no, UB dir)
[v _SetMotorDirection `(v ~T0 @X0 1 ef2`uc`uc ]
"1677
[; ;MotorDrive.c: 1677: {
{
[e :U _SetMotorDirection ]
"1676
[; ;MotorDrive.c: 1676: void SetMotorDirection(UB motor_no, UB dir)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _dir `uc ~T0 @X0 1 r2 ]
"1677
[; ;MotorDrive.c: 1677: {
[f ]
"1678
[; ;MotorDrive.c: 1678:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1680
[; ;MotorDrive.c: 1680:     if (1 == dir) {
[e $ ! == -> 1 `i -> _dir `i 560  ]
{
"1682
[; ;MotorDrive.c: 1682:         driveDirectionBit |= motorBitOperation;
[e =| _driveDirectionBit -> _motorBitOperation `uc ]
"1684
[; ;MotorDrive.c: 1684:     } else {
}
[e $U 561  ]
[e :U 560 ]
{
"1686
[; ;MotorDrive.c: 1686:         driveDirectionBit &= (UB) (~motorBitOperation);
[e =& _driveDirectionBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1688
[; ;MotorDrive.c: 1688:     }
}
[e :U 561 ]
"1690
[; ;MotorDrive.c: 1690: }
[e :UE 559 ]
}
"1700
[; ;MotorDrive.c: 1700: void SetMotorStepCounter(UB motor_no, H steps)
[v _SetMotorStepCounter `(v ~T0 @X0 1 ef2`uc`s ]
"1701
[; ;MotorDrive.c: 1701: {
{
[e :U _SetMotorStepCounter ]
"1700
[; ;MotorDrive.c: 1700: void SetMotorStepCounter(UB motor_no, H steps)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _steps `s ~T0 @X0 1 r2 ]
"1701
[; ;MotorDrive.c: 1701: {
[f ]
"1702
[; ;MotorDrive.c: 1702:     motorStepCounterSet[ motor_no ] = steps;
[e = *U + &U _motorStepCounterSet * -> _motor_no `ux -> -> # *U &U _motorStepCounterSet `ui `ux _steps ]
"1704
[; ;MotorDrive.c: 1704:     PriorUpdateCorrentPosition(motor_no);
[e ( _PriorUpdateCorrentPosition (1 _motor_no ]
"1705
[; ;MotorDrive.c: 1705: }
[e :UE 562 ]
}
"1715
[; ;MotorDrive.c: 1715: void CalcMotorFwdStepCounter(UB motor_no)
[v _CalcMotorFwdStepCounter `(v ~T0 @X0 1 ef1`uc ]
"1716
[; ;MotorDrive.c: 1716: {
{
[e :U _CalcMotorFwdStepCounter ]
"1715
[; ;MotorDrive.c: 1715: void CalcMotorFwdStepCounter(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1716
[; ;MotorDrive.c: 1716: {
[f ]
"1717
[; ;MotorDrive.c: 1717:     H steps;
[v _steps `s ~T0 @X0 1 a ]
"1720
[; ;MotorDrive.c: 1720:     SetMotorDirection(motor_no, 1);
[e ( _SetMotorDirection (2 , _motor_no -> -> 1 `i `uc ]
"1721
[; ;MotorDrive.c: 1721:     steps = targetPosition[ motor_no ] - currentPosition[ motor_no ];
[e = _steps -> - -> *U + &U _targetPosition * -> _motor_no `ux -> -> # *U &U _targetPosition `ui `ux `i -> *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux `i `s ]
"1723
[; ;MotorDrive.c: 1723:     while (steps < 0) {
[e $U 564  ]
[e :U 565 ]
{
"1724
[; ;MotorDrive.c: 1724:         steps += TblMaxSteps[ motor_no ];
[e =+ _steps -> *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux `s ]
"1725
[; ;MotorDrive.c: 1725:     }
}
[e :U 564 ]
"1723
[; ;MotorDrive.c: 1723:     while (steps < 0) {
[e $ < -> _steps `i -> 0 `i 565  ]
[e :U 566 ]
"1727
[; ;MotorDrive.c: 1727:     motorStepCounterSet[ motor_no ] = steps;
[e = *U + &U _motorStepCounterSet * -> _motor_no `ux -> -> # *U &U _motorStepCounterSet `ui `ux _steps ]
"1729
[; ;MotorDrive.c: 1729:     PriorUpdateCorrentPosition(motor_no);
[e ( _PriorUpdateCorrentPosition (1 _motor_no ]
"1730
[; ;MotorDrive.c: 1730: }
[e :UE 563 ]
}
"1740
[; ;MotorDrive.c: 1740: void CalcMotorStepCounter(UB motor_no)
[v _CalcMotorStepCounter `(v ~T0 @X0 1 ef1`uc ]
"1741
[; ;MotorDrive.c: 1741: {
{
[e :U _CalcMotorStepCounter ]
"1740
[; ;MotorDrive.c: 1740: void CalcMotorStepCounter(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1741
[; ;MotorDrive.c: 1741: {
[f ]
"1742
[; ;MotorDrive.c: 1742:     H steps;
[v _steps `s ~T0 @X0 1 a ]
"1743
[; ;MotorDrive.c: 1743:     UB motor_bit = (UB) (0x01 << motor_no);
[v _motor_bit `uc ~T0 @X0 1 a ]
[e = _motor_bit -> << -> 1 `i -> _motor_no `i `uc ]
"1746
[; ;MotorDrive.c: 1746:     if (0 == motor_no) {
[e $ ! == -> 0 `i -> _motor_no `i 568  ]
{
"1747
[; ;MotorDrive.c: 1747:         if (driveDirectionBit & motor_bit) {
[e $ ! != & -> _driveDirectionBit `i -> _motor_bit `i -> 0 `i 569  ]
{
"1748
[; ;MotorDrive.c: 1748:             currentPosition[ motor_no ] -= motorM0StepCounter;
[e =- *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> _motorM0StepCounter `s ]
"1749
[; ;MotorDrive.c: 1749:         } else {
}
[e $U 570  ]
[e :U 569 ]
{
"1750
[; ;MotorDrive.c: 1750:             currentPosition[ motor_no ] += motorM0StepCounter;
[e =+ *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> _motorM0StepCounter `s ]
"1751
[; ;MotorDrive.c: 1751:         }
}
[e :U 570 ]
"1752
[; ;MotorDrive.c: 1752:         motorM0StepCounter = 0;
[e = _motorM0StepCounter -> -> 0 `i `s ]
"1753
[; ;MotorDrive.c: 1753:     } else {
}
[e $U 571  ]
[e :U 568 ]
{
"1754
[; ;MotorDrive.c: 1754:         if (driveDirectionBit & motor_bit) {
[e $ ! != & -> _driveDirectionBit `i -> _motor_bit `i -> 0 `i 572  ]
{
"1755
[; ;MotorDrive.c: 1755:             currentPosition[ motor_no ] -= motorM1StepCounter;
[e =- *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> _motorM1StepCounter `s ]
"1756
[; ;MotorDrive.c: 1756:         } else {
}
[e $U 573  ]
[e :U 572 ]
{
"1757
[; ;MotorDrive.c: 1757:             currentPosition[ motor_no ] += motorM1StepCounter;
[e =+ *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> _motorM1StepCounter `s ]
"1758
[; ;MotorDrive.c: 1758:         }
}
[e :U 573 ]
"1759
[; ;MotorDrive.c: 1759:         motorM1StepCounter = 0;
[e = _motorM1StepCounter -> -> 0 `i `s ]
"1760
[; ;MotorDrive.c: 1760:     }
}
[e :U 571 ]
"1762
[; ;MotorDrive.c: 1762:     CorrectPosition(&currentPosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"1765
[; ;MotorDrive.c: 1765:     SetMotorDirection(motor_no, 1);
[e ( _SetMotorDirection (2 , _motor_no -> -> 1 `i `uc ]
"1766
[; ;MotorDrive.c: 1766:     steps = targetPosition[ motor_no ] - currentPosition[ motor_no ];
[e = _steps -> - -> *U + &U _targetPosition * -> _motor_no `ux -> -> # *U &U _targetPosition `ui `ux `i -> *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux `i `s ]
"1768
[; ;MotorDrive.c: 1768:     while (steps < 0) {
[e $U 574  ]
[e :U 575 ]
{
"1769
[; ;MotorDrive.c: 1769:         steps += TblMaxSteps[ motor_no ];
[e =+ _steps -> *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux `s ]
"1770
[; ;MotorDrive.c: 1770:     }
}
[e :U 574 ]
"1768
[; ;MotorDrive.c: 1768:     while (steps < 0) {
[e $ < -> _steps `i -> 0 `i 575  ]
[e :U 576 ]
"1772
[; ;MotorDrive.c: 1772:     if ((steps * 2) > TblMaxSteps[ motor_no ]) {
[e $ ! > * -> _steps `i -> 2 `i -> *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux `i 577  ]
{
"1773
[; ;MotorDrive.c: 1773:         SetMotorDirection(motor_no, 0);
[e ( _SetMotorDirection (2 , _motor_no -> -> 0 `i `uc ]
"1774
[; ;MotorDrive.c: 1774:         steps = TblMaxSteps[ motor_no ] - steps;
[e = _steps -> - -> *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux `i -> _steps `i `s ]
"1775
[; ;MotorDrive.c: 1775:     }
}
[e :U 577 ]
"1777
[; ;MotorDrive.c: 1777:     motorStepCounterSet[ motor_no ] = steps;
[e = *U + &U _motorStepCounterSet * -> _motor_no `ux -> -> # *U &U _motorStepCounterSet `ui `ux _steps ]
"1779
[; ;MotorDrive.c: 1779:     PriorUpdateCorrentPosition(motor_no);
[e ( _PriorUpdateCorrentPosition (1 _motor_no ]
"1780
[; ;MotorDrive.c: 1780: }
[e :UE 567 ]
}
"1790
[; ;MotorDrive.c: 1790: void SetMotorAddShakePulse(UB motor_no, UB sw)
[v _SetMotorAddShakePulse `(v ~T0 @X0 1 ef2`uc`uc ]
"1791
[; ;MotorDrive.c: 1791: {
{
[e :U _SetMotorAddShakePulse ]
"1790
[; ;MotorDrive.c: 1790: void SetMotorAddShakePulse(UB motor_no, UB sw)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _sw `uc ~T0 @X0 1 r2 ]
"1791
[; ;MotorDrive.c: 1791: {
[f ]
"1792
[; ;MotorDrive.c: 1792:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1794
[; ;MotorDrive.c: 1794:     if (sw) {
[e $ ! != -> _sw `i -> 0 `i 579  ]
{
"1796
[; ;MotorDrive.c: 1796:         addShakePulseBit |= motorBitOperation;
[e =| _addShakePulseBit -> _motorBitOperation `uc ]
"1798
[; ;MotorDrive.c: 1798:     } else {
}
[e $U 580  ]
[e :U 579 ]
{
"1800
[; ;MotorDrive.c: 1800:         addShakePulseBit &= (UB) (~motorBitOperation);
[e =& _addShakePulseBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"1802
[; ;MotorDrive.c: 1802:     }
}
[e :U 580 ]
"1803
[; ;MotorDrive.c: 1803: }
[e :UE 578 ]
}
"1821
[; ;MotorDrive.c: 1821: void SetMotorFrequency(UB motor_no, UB type, UB set_freq)
[v _SetMotorFrequency `(v ~T0 @X0 1 ef3`uc`uc`uc ]
"1822
[; ;MotorDrive.c: 1822: {
{
[e :U _SetMotorFrequency ]
"1821
[; ;MotorDrive.c: 1821: void SetMotorFrequency(UB motor_no, UB type, UB set_freq)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _type `uc ~T0 @X0 1 r2 ]
[v _set_freq `uc ~T0 @X0 1 r3 ]
"1822
[; ;MotorDrive.c: 1822: {
[f ]
"1823
[; ;MotorDrive.c: 1823:     if (FREQ_SET_SELF_CONTROL_NORMAL == type) {
[e $ ! == -> . `E3896 0 `i -> _type `i 582  ]
{
"1826
[; ;MotorDrive.c: 1826:         finishPositionCtSet[ motor_no ] = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) - 1 ) + set_freq;
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux -> + - + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 1 `i -> _set_freq `i `uc ]
"1828
[; ;MotorDrive.c: 1828:     } else if (FREQ_SET_SELF_CONTROL_SHAKE == type) {
}
[e $U 583  ]
[e :U 582 ]
[e $ ! == -> . `E3896 1 `i -> _type `i 584  ]
{
"1830
[; ;MotorDrive.c: 1830:         if (0 == motor_no) {
[e $ ! == -> 0 `i -> _motor_no `i 585  ]
{
"1831
[; ;MotorDrive.c: 1831:             if (TblM0PulseChangePosition[ ( ( 5 + 10 * 2 ) - 1 ) ] < set_freq) {
[e $ ! < -> *U + &U _TblM0PulseChangePosition * -> -> - + -> 5 `i * -> 10 `i -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _TblM0PulseChangePosition `ui `ux `i -> _set_freq `i 586  ]
{
"1832
[; ;MotorDrive.c: 1832:                 finishPositionCtSet[ motor_no ] = set_freq;
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux _set_freq ]
"1833
[; ;MotorDrive.c: 1833:             } else {
}
[e $U 587  ]
[e :U 586 ]
{
"1834
[; ;MotorDrive.c: 1834:                 finishPositionCtSet[ motor_no ] = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) + 6 + 16 + 19 );
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux -> + + + + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 6 `i -> 16 `i -> 19 `i `uc ]
"1835
[; ;MotorDrive.c: 1835:             }
}
[e :U 587 ]
"1836
[; ;MotorDrive.c: 1836:         } else {
}
[e $U 588  ]
[e :U 585 ]
{
"1837
[; ;MotorDrive.c: 1837:             if (TblM1PulseChangePosition[ ( ( 5 + 10 * 2 ) - 1 ) ] < set_freq) {
[e $ ! < -> *U + &U _TblM1PulseChangePosition * -> -> - + -> 5 `i * -> 10 `i -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _TblM1PulseChangePosition `ui `ux `i -> _set_freq `i 589  ]
{
"1838
[; ;MotorDrive.c: 1838:                 finishPositionCtSet[ motor_no ] = set_freq;
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux _set_freq ]
"1839
[; ;MotorDrive.c: 1839:             } else {
}
[e $U 590  ]
[e :U 589 ]
{
"1840
[; ;MotorDrive.c: 1840:                 finishPositionCtSet[ motor_no ] = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) + 6 + 16 + 19 );
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux -> + + + + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 6 `i -> 16 `i -> 19 `i `uc ]
"1841
[; ;MotorDrive.c: 1841:             }
}
[e :U 590 ]
"1842
[; ;MotorDrive.c: 1842:         }
}
[e :U 588 ]
"1843
[; ;MotorDrive.c: 1843:     } else {
}
[e $U 591  ]
[e :U 584 ]
{
"1846
[; ;MotorDrive.c: 1846:         finishPositionCtSet[ motor_no ] = ( ( 1 + ( ( 1 - 1 ) + 5 + 4 + ( 1 + 3 ) * 10 ) ) + 6 + 16 + 7 );
[e = *U + &U _finishPositionCtSet * -> _motor_no `ux -> -> # *U &U _finishPositionCtSet `ui `ux -> + + + + -> 1 `i + + + - -> 1 `i -> 1 `i -> 5 `i -> 4 `i * + -> 1 `i -> 3 `i -> 10 `i -> 6 `i -> 16 `i -> 7 `i `uc ]
"1848
[; ;MotorDrive.c: 1848:     }
}
[e :U 591 ]
[e :U 583 ]
"1849
[; ;MotorDrive.c: 1849: }
[e :UE 581 ]
}
"1859
[; ;MotorDrive.c: 1859: void SetMotorStart(UB motor_no)
[v _SetMotorStart `(v ~T0 @X0 1 ef1`uc ]
"1860
[; ;MotorDrive.c: 1860: {
{
[e :U _SetMotorStart ]
"1859
[; ;MotorDrive.c: 1859: void SetMotorStart(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1860
[; ;MotorDrive.c: 1860: {
[f ]
"1861
[; ;MotorDrive.c: 1861:     if (motor_no == 0) {
[e $ ! == -> _motor_no `i -> 0 `i 593  ]
{
"1863
[; ;MotorDrive.c: 1863:         StartPulseOutM0();
[e ( _StartPulseOutM0 ..  ]
"1865
[; ;MotorDrive.c: 1865:     } else {
}
[e $U 594  ]
[e :U 593 ]
{
"1867
[; ;MotorDrive.c: 1867:         StartPulseOutM1();
[e ( _StartPulseOutM1 ..  ]
"1869
[; ;MotorDrive.c: 1869:     }
}
[e :U 594 ]
"1870
[; ;MotorDrive.c: 1870: }
[e :UE 592 ]
}
"1880
[; ;MotorDrive.c: 1880: void SetMotorPositionSearchStart(UB motor_no)
[v _SetMotorPositionSearchStart `(v ~T0 @X0 1 ef1`uc ]
"1881
[; ;MotorDrive.c: 1881: {
{
[e :U _SetMotorPositionSearchStart ]
"1880
[; ;MotorDrive.c: 1880: void SetMotorPositionSearchStart(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1881
[; ;MotorDrive.c: 1881: {
[f ]
"1884
[; ;MotorDrive.c: 1884:     searchTotalSteps[ motor_no ] = 0;
[e = *U + &U _searchTotalSteps * -> _motor_no `ux -> -> # *U &U _searchTotalSteps `ui `ux -> -> 0 `i `s ]
"1886
[; ;MotorDrive.c: 1886:     currentPosition[ motor_no ] = 0;
[e = *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> -> 0 `i `s ]
"1888
[; ;MotorDrive.c: 1888:     InitPositionSearch(motor_no);
[e ( _InitPositionSearch (1 _motor_no ]
"1890
[; ;MotorDrive.c: 1890:     SetAfterDetectLoadFunc(motor_no, AfterDetectedLoadPosition);
[e ( _SetAfterDetectLoadFunc (2 , _motor_no &U _AfterDetectedLoadPosition ]
"1892
[; ;MotorDrive.c: 1892:     SetMotorStart(motor_no);
[e ( _SetMotorStart (1 _motor_no ]
"1893
[; ;MotorDrive.c: 1893: }
[e :UE 595 ]
}
"1903
[; ;MotorDrive.c: 1903: void SetMotorCorrectPositionStart(UB motor_no)
[v _SetMotorCorrectPositionStart `(v ~T0 @X0 1 ef1`uc ]
"1904
[; ;MotorDrive.c: 1904: {
{
[e :U _SetMotorCorrectPositionStart ]
"1903
[; ;MotorDrive.c: 1903: void SetMotorCorrectPositionStart(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1904
[; ;MotorDrive.c: 1904: {
[f ]
"1905
[; ;MotorDrive.c: 1905:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1907
[; ;MotorDrive.c: 1907:     reqCorrectBasePosBit |= motorBitOperation;
[e =| _reqCorrectBasePosBit -> _motorBitOperation `uc ]
"1908
[; ;MotorDrive.c: 1908:     reqCorrectFinePoBit |= motorBitOperation;
[e =| _reqCorrectFinePoBit -> _motorBitOperation `uc ]
"1910
[; ;MotorDrive.c: 1910:     searchTotalSteps[ motor_no ] = 0;
[e = *U + &U _searchTotalSteps * -> _motor_no `ux -> -> # *U &U _searchTotalSteps `ui `ux -> -> 0 `i `s ]
"1912
[; ;MotorDrive.c: 1912:     InitPositionSearch(motor_no);
[e ( _InitPositionSearch (1 _motor_no ]
"1914
[; ;MotorDrive.c: 1914:     SetAfterDetectLoadFunc(motor_no, AfterDetectedLoadPosition);
[e ( _SetAfterDetectLoadFunc (2 , _motor_no &U _AfterDetectedLoadPosition ]
"1917
[; ;MotorDrive.c: 1917: }
[e :UE 596 ]
}
"1927
[; ;MotorDrive.c: 1927: void InitPositionSearch(UB motor_no)
[v _InitPositionSearch `(v ~T0 @X0 1 ef1`uc ]
"1928
[; ;MotorDrive.c: 1928: {
{
[e :U _InitPositionSearch ]
"1927
[; ;MotorDrive.c: 1927: void InitPositionSearch(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1928
[; ;MotorDrive.c: 1928: {
[f ]
"1929
[; ;MotorDrive.c: 1929:     UB i;
[v _i `uc ~T0 @X0 1 a ]
"1931
[; ;MotorDrive.c: 1931:     doubleInterval = 0;
[e = _doubleInterval -> -> 0 `i `uc ]
"1933
[; ;MotorDrive.c: 1933:     positionSearchCt[ motor_no ] = 0;
[e = *U + &U _positionSearchCt * -> _motor_no `ux -> -> # *U &U _positionSearchCt `ui `ux -> -> 0 `i `s ]
"1935
[; ;MotorDrive.c: 1935:     detectFinePosCt[ motor_no ] = 0;
[e = *U + &U _detectFinePosCt * -> _motor_no `ux -> -> # *U &U _detectFinePosCt `ui `ux -> -> 0 `i `uc ]
"1936
[; ;MotorDrive.c: 1936:     detectRoughPosCt[ motor_no ] = 0;
[e = *U + &U _detectRoughPosCt * -> _motor_no `ux -> -> # *U &U _detectRoughPosCt `ui `ux -> -> 0 `i `uc ]
"1937
[; ;MotorDrive.c: 1937:     positionSearchStat[ motor_no ] = ID_SEARCH_FINE_POS_1ST;
[e = *U + &U _positionSearchStat * -> _motor_no `ux -> -> # *U &U _positionSearchStat `ui `ux -> . `E4016 0 `uc ]
"1938
[; ;MotorDrive.c: 1938:     detectLoadType[ motor_no ] = ID_DETECT_LOAD_NULL;
[e = *U + &U _detectLoadType * -> _motor_no `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 0 `uc ]
"1939
[; ;MotorDrive.c: 1939:     detectLoadCont[ motor_no ] = 0;
[e = *U + &U _detectLoadCont * -> _motor_no `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 0 `i `uc ]
"1940
[; ;MotorDrive.c: 1940:     detectRoughTotalMove[ motor_no ] = 0;
[e = *U + &U _detectRoughTotalMove * -> _motor_no `ux -> -> # *U &U _detectRoughTotalMove `ui `ux -> -> 0 `i `s ]
"1942
[; ;MotorDrive.c: 1942:     detectLoadPositionIndex[ motor_no ] = 0;
[e = *U + &U _detectLoadPositionIndex * -> _motor_no `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux -> -> 0 `i `uc ]
"1943
[; ;MotorDrive.c: 1943:     for (i = 0; i < ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ); i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - + * -> 8 `i -> 2 `i * -> 1 `i -> 9 `i -> 2 `i 598  ]
[e $U 599  ]
[e :U 598 ]
{
"1944
[; ;MotorDrive.c: 1944:         detectLoadPosition[ motor_no ][ i ] = 0;
[e = *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux -> -> 0 `i `s ]
"1946
[; ;MotorDrive.c: 1946:         detectLoadPositionType[ motor_no ][ i ] = 0;
[e = *U + &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux `ui `ux -> -> 0 `i `uc ]
"1947
[; ;MotorDrive.c: 1947:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - + * -> 8 `i -> 2 `i * -> 1 `i -> 9 `i -> 2 `i 598  ]
[e :U 599 ]
}
"1949
[; ;MotorDrive.c: 1949:     detectLoadPositionPtr[ motor_no ] = &detectLoadPosition[ motor_no ][ 0 ];
[e = *U + &U _detectLoadPositionPtr * -> _motor_no `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux &U *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux ]
"1951
[; ;MotorDrive.c: 1951:     detectLoadPositionTypePtr[ motor_no ] = &detectLoadPositionType[ motor_no ][ 0 ];
[e = *U + &U _detectLoadPositionTypePtr * -> _motor_no `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux &U *U + &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux `ui `ux ]
"1952
[; ;MotorDrive.c: 1952: }
[e :UE 597 ]
}
"1962
[; ;MotorDrive.c: 1962: void CorrectPosition(H *pos, H max)
[v _CorrectPosition `(v ~T0 @X0 1 ef2`*s`s ]
"1963
[; ;MotorDrive.c: 1963: {
{
[e :U _CorrectPosition ]
"1962
[; ;MotorDrive.c: 1962: void CorrectPosition(H *pos, H max)
[v _pos `*s ~T0 @X0 1 r1 ]
[v _max `s ~T0 @X0 1 r2 ]
"1963
[; ;MotorDrive.c: 1963: {
[f ]
"1964
[; ;MotorDrive.c: 1964:     if (max == 0) {
[e $ ! == -> _max `i -> 0 `i 602  ]
{
"1965
[; ;MotorDrive.c: 1965:         return;
[e $UE 601  ]
"1966
[; ;MotorDrive.c: 1966:     }
}
[e :U 602 ]
"1968
[; ;MotorDrive.c: 1968:     while (*pos >= max) {
[e $U 603  ]
[e :U 604 ]
{
"1969
[; ;MotorDrive.c: 1969:         *pos -= max;
[e =- *U _pos -> _max `s ]
"1970
[; ;MotorDrive.c: 1970:     }
}
[e :U 603 ]
"1968
[; ;MotorDrive.c: 1968:     while (*pos >= max) {
[e $ >= -> *U _pos `i -> _max `i 604  ]
[e :U 605 ]
"1972
[; ;MotorDrive.c: 1972:     while (*pos < 0) {
[e $U 606  ]
[e :U 607 ]
{
"1973
[; ;MotorDrive.c: 1973:         *pos += max;
[e =+ *U _pos -> _max `s ]
"1974
[; ;MotorDrive.c: 1974:     }
}
[e :U 606 ]
"1972
[; ;MotorDrive.c: 1972:     while (*pos < 0) {
[e $ < -> *U _pos `i -> 0 `i 607  ]
[e :U 608 ]
"1975
[; ;MotorDrive.c: 1975: }
[e :UE 601 ]
}
"1986
[; ;MotorDrive.c: 1986: void PriorUpdateCorrentPosition(UB motor_no)
[v _PriorUpdateCorrentPosition `(v ~T0 @X0 1 ef1`uc ]
"1987
[; ;MotorDrive.c: 1987: {
{
[e :U _PriorUpdateCorrentPosition ]
"1986
[; ;MotorDrive.c: 1986: void PriorUpdateCorrentPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"1987
[; ;MotorDrive.c: 1987: {
[f ]
"1988
[; ;MotorDrive.c: 1988:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"1990
[; ;MotorDrive.c: 1990:     if (handPositionActiveBit & motorBitOperation) {
[e $ ! != & -> _handPositionActiveBit `i -> _motorBitOperation `i -> 0 `i 610  ]
{
"1992
[; ;MotorDrive.c: 1992:         if (driveDirectionBit & motorBitOperation) {
[e $ ! != & -> _driveDirectionBit `i -> _motorBitOperation `i -> 0 `i 611  ]
{
"1994
[; ;MotorDrive.c: 1994:             currentPosition[ motor_no ] += motorStepCounterSet[ motor_no ];
[e =+ *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> *U + &U _motorStepCounterSet * -> _motor_no `ux -> -> # *U &U _motorStepCounterSet `ui `ux `s ]
"1995
[; ;MotorDrive.c: 1995:         } else {
}
[e $U 612  ]
[e :U 611 ]
{
"1997
[; ;MotorDrive.c: 1997:             currentPosition[ motor_no ] -= motorStepCounterSet[ motor_no ];
[e =- *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> *U + &U _motorStepCounterSet * -> _motor_no `ux -> -> # *U &U _motorStepCounterSet `ui `ux `s ]
"1998
[; ;MotorDrive.c: 1998:         }
}
[e :U 612 ]
"2000
[; ;MotorDrive.c: 2000:         CorrectPosition(&currentPosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2001
[; ;MotorDrive.c: 2001:     }
}
[e :U 610 ]
"2002
[; ;MotorDrive.c: 2002: }
[e :UE 609 ]
}
"2012
[; ;MotorDrive.c: 2012: void UpdateTargetPosition(UB motor_no, H steps)
[v _UpdateTargetPosition `(v ~T0 @X0 1 ef2`uc`s ]
"2013
[; ;MotorDrive.c: 2013: {
{
[e :U _UpdateTargetPosition ]
"2012
[; ;MotorDrive.c: 2012: void UpdateTargetPosition(UB motor_no, H steps)
[v _motor_no `uc ~T0 @X0 1 r1 ]
[v _steps `s ~T0 @X0 1 r2 ]
"2013
[; ;MotorDrive.c: 2013: {
[f ]
"2015
[; ;MotorDrive.c: 2015:     targetPosition[ motor_no ] += steps;
[e =+ *U + &U _targetPosition * -> _motor_no `ux -> -> # *U &U _targetPosition `ui `ux -> _steps `s ]
"2017
[; ;MotorDrive.c: 2017:     CorrectPosition(&targetPosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _targetPosition * -> _motor_no `ux -> -> # *U &U _targetPosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2019
[; ;MotorDrive.c: 2019: }
[e :UE 613 ]
}
"2029
[; ;MotorDrive.c: 2029: void SetMotorStop(UB motor_no)
[v _SetMotorStop `(v ~T0 @X0 1 ef1`uc ]
"2030
[; ;MotorDrive.c: 2030: {
{
[e :U _SetMotorStop ]
"2029
[; ;MotorDrive.c: 2029: void SetMotorStop(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2030
[; ;MotorDrive.c: 2030: {
[f ]
"2031
[; ;MotorDrive.c: 2031:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"2033
[; ;MotorDrive.c: 2033:     reqStopMotorBit |= motorBitOperation;
[e =| _reqStopMotorBit -> _motorBitOperation `uc ]
"2035
[; ;MotorDrive.c: 2035: }
[e :UE 614 ]
}
"2046
[; ;MotorDrive.c: 2046: void AfterDetectedLoadPosition(UB motor_no)
[v _AfterDetectedLoadPosition `(v ~T0 @X0 1 ef1`uc ]
"2047
[; ;MotorDrive.c: 2047: {
{
[e :U _AfterDetectedLoadPosition ]
"2046
[; ;MotorDrive.c: 2046: void AfterDetectedLoadPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2047
[; ;MotorDrive.c: 2047: {
[f ]
"2048
[; ;MotorDrive.c: 2048:     H move_steps;
[v _move_steps `s ~T0 @X0 1 a ]
"2049
[; ;MotorDrive.c: 2049:     UB res = ID_SEARCH_RESULT_NULL;
[v _res `uc ~T0 @X0 1 a ]
[e = _res -> . `E4020 0 `uc ]
"2051
[; ;MotorDrive.c: 2051:     SetMotorBitMotorNo(motor_no);
[e ( _SetMotorBitMotorNo (1 _motor_no ]
"2054
[; ;MotorDrive.c: 2054:     if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 616  ]
{
"2055
[; ;MotorDrive.c: 2055:         searchTotalSteps[ motorNoOperation ] += positionSearchCt[ motorNoOperation ];
[e =+ *U + &U _searchTotalSteps * -> _motorNoOperation `ux -> -> # *U &U _searchTotalSteps `ui `ux -> *U + &U _positionSearchCt * -> _motorNoOperation `ux -> -> # *U &U _positionSearchCt `ui `ux `s ]
"2056
[; ;MotorDrive.c: 2056:     }
}
[e :U 616 ]
"2058
[; ;MotorDrive.c: 2058:     move_steps = positionSearchCt[ motorNoOperation ];
[e = _move_steps *U + &U _positionSearchCt * -> _motorNoOperation `ux -> -> # *U &U _positionSearchCt `ui `ux ]
"2061
[; ;MotorDrive.c: 2061:     if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 617  ]
{
"2062
[; ;MotorDrive.c: 2062:         currentPosition[ motorNoOperation ] += positionSearchCt[ motorNoOperation ];
[e =+ *U + &U _currentPosition * -> _motorNoOperation `ux -> -> # *U &U _currentPosition `ui `ux -> *U + &U _positionSearchCt * -> _motorNoOperation `ux -> -> # *U &U _positionSearchCt `ui `ux `s ]
"2063
[; ;MotorDrive.c: 2063:     } else {
}
[e $U 618  ]
[e :U 617 ]
{
"2065
[; ;MotorDrive.c: 2065:     }
}
[e :U 618 ]
"2067
[; ;MotorDrive.c: 2067:     if (searchTotalSteps[ motorNoOperation ] > TblMaxSearchSteps[ motorNoOperation ]) {
[e $ ! > -> *U + &U _searchTotalSteps * -> _motorNoOperation `ux -> -> # *U &U _searchTotalSteps `ui `ux `i -> *U + &U _TblMaxSearchSteps * -> _motorNoOperation `ux -> -> # *U &U _TblMaxSearchSteps `ui `ux `i 619  ]
{
"2069
[; ;MotorDrive.c: 2069:         res = ID_SEARCH_RESULT_ERR;
[e = _res -> . `E4020 5 `uc ]
"2070
[; ;MotorDrive.c: 2070:     } else {
}
[e $U 620  ]
[e :U 619 ]
{
"2072
[; ;MotorDrive.c: 2072:         if (move_steps > 47) {
[e $ ! > -> _move_steps `i -> 47 `i 621  ]
{
"2075
[; ;MotorDrive.c: 2075:             if (((47 * 2) >= move_steps)
[e $ ! && >= * -> 47 `i -> 2 `i -> _move_steps `i >= -> _move_steps `i * -> 43 `i -> 2 `i 622  ]
"2076
[; ;MotorDrive.c: 2076:                     && ((move_steps >= 43 * 2))) {
{
"2079
[; ;MotorDrive.c: 2079:                 if (ID_SEARCH_FINE_POS_1ST == positionSearchStat[ motorNoOperation ]) {
[e $ ! == -> . `E4016 0 `i -> *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux `i 623  ]
{
"2081
[; ;MotorDrive.c: 2081:                     positionSearchStat[ motorNoOperation ] = ID_SEARCH_FINE_ROUGH_POS;
[e = *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux -> . `E4016 1 `uc ]
"2082
[; ;MotorDrive.c: 2082:                 }
}
[e :U 623 ]
"2084
[; ;MotorDrive.c: 2084:                 doubleInterval = 1;
[e = _doubleInterval -> -> 1 `i `uc ]
"2085
[; ;MotorDrive.c: 2085:                 detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_FINE;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 1 `uc ]
"2086
[; ;MotorDrive.c: 2086:                 detectFinePosCt[ motorNoOperation ] += 2;
[e =+ *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux -> -> 2 `i `uc ]
"2087
[; ;MotorDrive.c: 2087:                 detectLoadCont[ motorNoOperation ] = 2;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 2 `i `uc ]
"2089
[; ;MotorDrive.c: 2089:                 res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2091
[; ;MotorDrive.c: 2091:             } else if ((ID_DETECT_LOAD_ROUGH == detectLoadType[ motorNoOperation ])
}
[e $U 624  ]
[e :U 622 ]
[e $ ! && && == -> . `E4027 2 `i -> *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux `i >= * -> 47 `i -> 2 `i + -> *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux `i -> _move_steps `i >= + -> *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux `i -> _move_steps `i * -> 43 `i -> 2 `i 625  ]
"2093
[; ;MotorDrive.c: 2093:                     && ((detectRoughTotalMove[ motorNoOperation ] + move_steps) >= (43 * 2))) {
{
"2095
[; ;MotorDrive.c: 2095:                 doubleInterval = 1;
[e = _doubleInterval -> -> 1 `i `uc ]
"2096
[; ;MotorDrive.c: 2096:                 detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_FINE;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 1 `uc ]
"2097
[; ;MotorDrive.c: 2097:                 detectFinePosCt[ motorNoOperation ] += 2;
[e =+ *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux -> -> 2 `i `uc ]
"2098
[; ;MotorDrive.c: 2098:                 detectLoadCont[ motorNoOperation ] = 2;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 2 `i `uc ]
"2100
[; ;MotorDrive.c: 2100:                 res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2102
[; ;MotorDrive.c: 2102:             } else {
}
[e $U 626  ]
[e :U 625 ]
{
"2104
[; ;MotorDrive.c: 2104:                 res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2105
[; ;MotorDrive.c: 2105:             }
}
[e :U 626 ]
[e :U 624 ]
"2106
[; ;MotorDrive.c: 2106:         } else if ((47 >= move_steps) && (move_steps >= 43)) {
}
[e $U 627  ]
[e :U 621 ]
[e $ ! && >= -> 47 `i -> _move_steps `i >= -> _move_steps `i -> 43 `i 628  ]
{
"2108
[; ;MotorDrive.c: 2108:             if (ID_SEARCH_FINE_POS_1ST == positionSearchStat[ motorNoOperation ]) {
[e $ ! == -> . `E4016 0 `i -> *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux `i 629  ]
{
"2110
[; ;MotorDrive.c: 2110:                 positionSearchStat[ motorNoOperation ] = ID_SEARCH_FINE_ROUGH_POS;
[e = *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux -> . `E4016 1 `uc ]
"2111
[; ;MotorDrive.c: 2111:             }
}
[e :U 629 ]
"2113
[; ;MotorDrive.c: 2113:             detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_FINE;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 1 `uc ]
"2114
[; ;MotorDrive.c: 2114:             detectFinePosCt[ motorNoOperation ]++;
[e ++ *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux -> -> 1 `i `uc ]
"2115
[; ;MotorDrive.c: 2115:             detectLoadCont[ motorNoOperation ] = 1;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2117
[; ;MotorDrive.c: 2117:             res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2119
[; ;MotorDrive.c: 2119:         } else if (43 > move_steps) {
}
[e $U 630  ]
[e :U 628 ]
[e $ ! > -> 43 `i -> _move_steps `i 631  ]
{
"2121
[; ;MotorDrive.c: 2121:             if (ID_SEARCH_FINE_POS_1ST == positionSearchStat[ motorNoOperation ]) {
[e $ ! == -> . `E4016 0 `i -> *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux `i 632  ]
{
"2126
[; ;MotorDrive.c: 2126:             } else if (ID_DETECT_LOAD_FINE == detectLoadType[ motorNoOperation ]) {
}
[e $U 633  ]
[e :U 632 ]
[e $ ! == -> . `E4027 1 `i -> *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux `i 634  ]
{
"2129
[; ;MotorDrive.c: 2129:                 if (move_steps > 2) {
[e $ ! > -> _move_steps `i -> 2 `i 635  ]
{
"2131
[; ;MotorDrive.c: 2131:                     detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_ROUGH;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 2 `uc ]
"2132
[; ;MotorDrive.c: 2132:                     detectRoughPosCt[ motorNoOperation ]++;
[e ++ *U + &U _detectRoughPosCt * -> _motorNoOperation `ux -> -> # *U &U _detectRoughPosCt `ui `ux -> -> 1 `i `uc ]
"2133
[; ;MotorDrive.c: 2133:                     detectLoadCont[ motorNoOperation ] = 1;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2134
[; ;MotorDrive.c: 2134:                     detectRoughTotalMove[ motorNoOperation ] = move_steps;
[e = *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux _move_steps ]
"2135
[; ;MotorDrive.c: 2135:                     res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2136
[; ;MotorDrive.c: 2136:                 } else {
}
[e $U 636  ]
[e :U 635 ]
{
"2138
[; ;MotorDrive.c: 2138:                     detectLoadCont[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2139
[; ;MotorDrive.c: 2139:                     if (detectLoadCont[ motorNoOperation ] > 2) {
[e $ ! > -> *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux `i -> 2 `i 637  ]
{
"2141
[; ;MotorDrive.c: 2141:                         res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2142
[; ;MotorDrive.c: 2142:                     } else {
}
[e $U 638  ]
[e :U 637 ]
{
"2143
[; ;MotorDrive.c: 2143:                         res = ID_SEARCH_RESULT_CONT;
[e = _res -> . `E4020 2 `uc ]
"2144
[; ;MotorDrive.c: 2144:                     }
}
[e :U 638 ]
"2145
[; ;MotorDrive.c: 2145:                 }
}
[e :U 636 ]
"2147
[; ;MotorDrive.c: 2147:             } else if (ID_DETECT_LOAD_ROUGH == detectLoadType[ motorNoOperation ]) {
}
[e $U 639  ]
[e :U 634 ]
[e $ ! == -> . `E4027 2 `i -> *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux `i 640  ]
{
"2149
[; ;MotorDrive.c: 2149:                 detectRoughTotalMove[ motorNoOperation ] += move_steps;
[e =+ *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux -> _move_steps `s ]
"2151
[; ;MotorDrive.c: 2151:                 if (move_steps > 3) {
[e $ ! > -> _move_steps `i -> 3 `i 641  ]
{
"2154
[; ;MotorDrive.c: 2154:                     if ((47 >= detectRoughTotalMove[ motorNoOperation ]) && (detectRoughTotalMove[ motorNoOperation ] >= 43)) {
[e $ ! && >= -> 47 `i -> *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux `i >= -> *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux `i -> 43 `i 642  ]
{
"2156
[; ;MotorDrive.c: 2156:                         positionSearchStat[ motorNoOperation ] = ID_SEARCH_FINE_ROUGH_POS;
[e = *U + &U _positionSearchStat * -> _motorNoOperation `ux -> -> # *U &U _positionSearchStat `ui `ux -> . `E4016 1 `uc ]
"2157
[; ;MotorDrive.c: 2157:                         detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_FINE;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 1 `uc ]
"2158
[; ;MotorDrive.c: 2158:                         detectFinePosCt[ motorNoOperation ]++;
[e ++ *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux -> -> 1 `i `uc ]
"2159
[; ;MotorDrive.c: 2159:                         detectLoadCont[ motorNoOperation ] = 1;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2160
[; ;MotorDrive.c: 2160:                         res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2162
[; ;MotorDrive.c: 2162:                     } else {
}
[e $U 643  ]
[e :U 642 ]
{
"2164
[; ;MotorDrive.c: 2164:                         detectLoadType[ motorNoOperation ] = ID_DETECT_LOAD_ROUGH;
[e = *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux -> . `E4027 2 `uc ]
"2165
[; ;MotorDrive.c: 2165:                         detectRoughPosCt[ motorNoOperation ]++;
[e ++ *U + &U _detectRoughPosCt * -> _motorNoOperation `ux -> -> # *U &U _detectRoughPosCt `ui `ux -> -> 1 `i `uc ]
"2166
[; ;MotorDrive.c: 2166:                         detectLoadCont[ motorNoOperation ] = 1;
[e = *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2167
[; ;MotorDrive.c: 2167:                         detectRoughTotalMove[ motorNoOperation ] = move_steps;
[e = *U + &U _detectRoughTotalMove * -> _motorNoOperation `ux -> -> # *U &U _detectRoughTotalMove `ui `ux _move_steps ]
"2168
[; ;MotorDrive.c: 2168:                         res = ID_SEARCH_RESULT_NEW_POS;
[e = _res -> . `E4020 1 `uc ]
"2169
[; ;MotorDrive.c: 2169:                     }
}
[e :U 643 ]
"2171
[; ;MotorDrive.c: 2171:                 } else {
}
[e $U 644  ]
[e :U 641 ]
{
"2173
[; ;MotorDrive.c: 2173:                     detectLoadCont[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux -> -> 1 `i `uc ]
"2174
[; ;MotorDrive.c: 2174:                     if (detectLoadCont[ motorNoOperation ] > 9) {
[e $ ! > -> *U + &U _detectLoadCont * -> _motorNoOperation `ux -> -> # *U &U _detectLoadCont `ui `ux `i -> 9 `i 645  ]
{
"2176
[; ;MotorDrive.c: 2176:                         res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2177
[; ;MotorDrive.c: 2177:                     } else {
}
[e $U 646  ]
[e :U 645 ]
{
"2178
[; ;MotorDrive.c: 2178:                         res = ID_SEARCH_RESULT_CONT;
[e = _res -> . `E4020 2 `uc ]
"2179
[; ;MotorDrive.c: 2179:                     }
}
[e :U 646 ]
"2180
[; ;MotorDrive.c: 2180:                 }
}
[e :U 644 ]
"2182
[; ;MotorDrive.c: 2182:             } else {
}
[e $U 647  ]
[e :U 640 ]
{
"2184
[; ;MotorDrive.c: 2184:                 res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2185
[; ;MotorDrive.c: 2185:             }
}
[e :U 647 ]
[e :U 639 ]
[e :U 633 ]
"2186
[; ;MotorDrive.c: 2186:         }
}
[e :U 631 ]
[e :U 630 ]
[e :U 627 ]
"2187
[; ;MotorDrive.c: 2187:     }
}
[e :U 620 ]
"2190
[; ;MotorDrive.c: 2190:     if ((detectFinePosCt[ motorNoOperation ] == 8)
[e $ ! && == -> *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux `i -> 8 `i == -> *U + &U _detectRoughPosCt * -> _motorNoOperation `ux -> -> # *U &U _detectRoughPosCt `ui `ux `i -> 1 `i 648  ]
"2191
[; ;MotorDrive.c: 2191:             && (detectRoughPosCt[ motorNoOperation ] == 1)) {
{
"2193
[; ;MotorDrive.c: 2193:         res = ID_SEARCH_RESULT_SUCCESS;
[e = _res -> . `E4020 4 `uc ]
"2195
[; ;MotorDrive.c: 2195:     } else if ((detectFinePosCt[ motorNoOperation ] == (8 + 1))
}
[e $U 649  ]
[e :U 648 ]
[e $ ! && == -> *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux `i + -> 8 `i -> 1 `i == -> *U + &U _detectRoughPosCt * -> _motorNoOperation `ux -> -> # *U &U _detectRoughPosCt `ui `ux `i -> 1 `i 650  ]
"2196
[; ;MotorDrive.c: 2196:             && (detectRoughPosCt[ motorNoOperation ] == 1)) {
{
"2198
[; ;MotorDrive.c: 2198:         res = ID_SEARCH_RESULT_SUCCESS;
[e = _res -> . `E4020 4 `uc ]
"2200
[; ;MotorDrive.c: 2200:     } else if (detectFinePosCt[ motorNoOperation ] > (8 + 1)) {
}
[e $U 651  ]
[e :U 650 ]
[e $ ! > -> *U + &U _detectFinePosCt * -> _motorNoOperation `ux -> -> # *U &U _detectFinePosCt `ui `ux `i + -> 8 `i -> 1 `i 652  ]
{
"2205
[; ;MotorDrive.c: 2205:         res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2206
[; ;MotorDrive.c: 2206:     } else if (detectRoughPosCt[ motorNoOperation ] > 1) {
}
[e $U 653  ]
[e :U 652 ]
[e $ ! > -> *U + &U _detectRoughPosCt * -> _motorNoOperation `ux -> -> # *U &U _detectRoughPosCt `ui `ux `i -> 1 `i 654  ]
{
"2208
[; ;MotorDrive.c: 2208:         res = ID_SEARCH_RESULT_RETRY;
[e = _res -> . `E4020 3 `uc ]
"2209
[; ;MotorDrive.c: 2209:     }
}
[e :U 654 ]
[e :U 653 ]
[e :U 651 ]
[e :U 649 ]
"2211
[; ;MotorDrive.c: 2211:     if (ID_SEARCH_RESULT_ERR == res) {
[e $ ! == -> . `E4020 5 `i -> _res `i 655  ]
{
"2214
[; ;MotorDrive.c: 2214:     } else if (ID_SEARCH_RESULT_NULL == res) {
}
[e $U 656  ]
[e :U 655 ]
[e $ ! == -> . `E4020 0 `i -> _res `i 657  ]
{
"2218
[; ;MotorDrive.c: 2218:         SetAfterDetectLoadFunc(motorNoOperation, AfterDetectedLoadPosition);
[e ( _SetAfterDetectLoadFunc (2 , _motorNoOperation &U _AfterDetectedLoadPosition ]
"2219
[; ;MotorDrive.c: 2219:         if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 658  ]
{
"2220
[; ;MotorDrive.c: 2220:             SetMotorStart(motorNoOperation);
[e ( _SetMotorStart (1 _motorNoOperation ]
"2221
[; ;MotorDrive.c: 2221:         }
}
[e :U 658 ]
"2222
[; ;MotorDrive.c: 2222:     } else if (ID_SEARCH_RESULT_RETRY == res) {
}
[e $U 659  ]
[e :U 657 ]
[e $ ! == -> . `E4020 3 `i -> _res `i 660  ]
{
"2224
[; ;MotorDrive.c: 2224:         if (motorBitOperation & 0x01) {
[e $ ! != & -> _motorBitOperation `i -> 1 `i -> 0 `i 661  ]
{
"2228
[; ;MotorDrive.c: 2228:         }
}
[e :U 661 ]
"2229
[; ;MotorDrive.c: 2229:         InitPositionSearch(motorNoOperation);
[e ( _InitPositionSearch (1 _motorNoOperation ]
"2230
[; ;MotorDrive.c: 2230:         SetAfterDetectLoadFunc(motorNoOperation, AfterDetectedLoadPosition);
[e ( _SetAfterDetectLoadFunc (2 , _motorNoOperation &U _AfterDetectedLoadPosition ]
"2231
[; ;MotorDrive.c: 2231:         if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 662  ]
{
"2232
[; ;MotorDrive.c: 2232:             SetMotorStart(motorNoOperation);
[e ( _SetMotorStart (1 _motorNoOperation ]
"2233
[; ;MotorDrive.c: 2233:         } else {
}
[e $U 663  ]
[e :U 662 ]
{
"2234
[; ;MotorDrive.c: 2234:             reqCorrectFinePoBit |= motorBitOperation;
[e =| _reqCorrectFinePoBit -> _motorBitOperation `uc ]
"2235
[; ;MotorDrive.c: 2235:         }
}
[e :U 663 ]
"2236
[; ;MotorDrive.c: 2236:     } else {
}
[e $U 664  ]
[e :U 660 ]
{
"2238
[; ;MotorDrive.c: 2238:         if (0 == (reqCorrectFinePoBit & motorBitOperation)) {
[e $ ! == -> 0 `i & -> _reqCorrectFinePoBit `i -> _motorBitOperation `i 665  ]
{
"2242
[; ;MotorDrive.c: 2242:             if (1 == doubleInterval) {
[e $ ! == -> 1 `i -> _doubleInterval `i 666  ]
{
"2243
[; ;MotorDrive.c: 2243:                 detectLoadPositionIndex[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionIndex * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux -> -> 1 `i `uc ]
"2244
[; ;MotorDrive.c: 2244:                 missingDetectFinePosition = currentPosition[ motorNoOperation ] - 45;
[e = _missingDetectFinePosition -> - -> *U + &U _currentPosition * -> _motorNoOperation `ux -> -> # *U &U _currentPosition `ui `ux `i -> 45 `i `s ]
"2245
[; ;MotorDrive.c: 2245:                 CorrectPosition(&missingDetectFinePosition, TblMaxSteps[ motorNoOperation ]);
[e ( _CorrectPosition (2 , &U _missingDetectFinePosition *U + &U _TblMaxSteps * -> _motorNoOperation `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2247
[; ;MotorDrive.c: 2247:                 *detectLoadPositionPtr[ motorNoOperation ] = missingDetectFinePosition;
[e = *U *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux _missingDetectFinePosition ]
"2248
[; ;MotorDrive.c: 2248:                 detectLoadPositionPtr[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux * -> -> 1 `i `x -> -> # *U *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux `i `x ]
"2250
[; ;MotorDrive.c: 2250:                 *detectLoadPositionTypePtr[ motorNoOperation ] = detectLoadType[ motorNoOperation ];
[e = *U *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux ]
"2251
[; ;MotorDrive.c: 2251:                 detectLoadPositionTypePtr[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux * -> -> 1 `i `x -> -> # *U *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux `i `x ]
"2252
[; ;MotorDrive.c: 2252:             }
}
[e :U 666 ]
"2254
[; ;MotorDrive.c: 2254:             detectLoadPositionIndex[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionIndex * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux -> -> 1 `i `uc ]
"2257
[; ;MotorDrive.c: 2257:             *detectLoadPositionPtr[ motorNoOperation ] = currentPosition[ motorNoOperation ];
[e = *U *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux *U + &U _currentPosition * -> _motorNoOperation `ux -> -> # *U &U _currentPosition `ui `ux ]
"2258
[; ;MotorDrive.c: 2258:             detectLoadPositionPtr[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux * -> -> 1 `i `x -> -> # *U *U + &U _detectLoadPositionPtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionPtr `ui `ux `i `x ]
"2261
[; ;MotorDrive.c: 2261:             *detectLoadPositionTypePtr[ motorNoOperation ] = detectLoadType[ motorNoOperation ];
[e = *U *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux ]
"2262
[; ;MotorDrive.c: 2262:             if (ID_SEARCH_RESULT_CONT == res) {
[e $ ! == -> . `E4020 2 `i -> _res `i 667  ]
{
"2263
[; ;MotorDrive.c: 2263:                 *detectLoadPositionTypePtr[ motorNoOperation ] += 10;
[e =+ *U *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux -> -> 10 `i `uc ]
"2264
[; ;MotorDrive.c: 2264:             }
}
[e :U 667 ]
"2266
[; ;MotorDrive.c: 2266:             detectLoadPositionTypePtr[ motorNoOperation ]++;
[e ++ *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux * -> -> 1 `i `x -> -> # *U *U + &U _detectLoadPositionTypePtr * -> _motorNoOperation `ux -> -> # *U &U _detectLoadPositionTypePtr `ui `ux `i `x ]
"2268
[; ;MotorDrive.c: 2268:         }
}
[e :U 665 ]
"2270
[; ;MotorDrive.c: 2270:         if (ID_SEARCH_RESULT_SUCCESS == res) {
[e $ ! == -> . `E4020 4 `i -> _res `i 668  ]
{
"2272
[; ;MotorDrive.c: 2272:             DetermineBasePosition(motorNoOperation);
[e ( _DetermineBasePosition (1 _motorNoOperation ]
"2275
[; ;MotorDrive.c: 2275:             UpdataHandPosition(motorNoOperation);
[e ( _UpdataHandPosition (1 _motorNoOperation ]
"2278
[; ;MotorDrive.c: 2278:             SaveLoadPosition(motorNoOperation);
[e ( _SaveLoadPosition (1 _motorNoOperation ]
"2281
[; ;MotorDrive.c: 2281:             ActivateHandPosition(motorNoOperation);
[e ( _ActivateHandPosition (1 _motorNoOperation ]
"2283
[; ;MotorDrive.c: 2283:             if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 669  ]
{
"2285
[; ;MotorDrive.c: 2285:                 if (DRIVE_SEARCH_1008_POSITION == driveType[ motorNoOperation ]) {
[e $ ! == -> . `E3889 5 `i -> *U + &U _driveType * -> _motorNoOperation `ux -> -> # *U &U _driveType `ui `ux `i 670  ]
{
"2287
[; ;MotorDrive.c: 2287:                     if (0 == motorNoOperation) {
[e $ ! == -> 0 `i -> _motorNoOperation `i 671  ]
{
"2288
[; ;MotorDrive.c: 2288:                         targetPosition[ 0 ] = 48;
[e = *U + &U _targetPosition * -> -> -> 0 `i `ui `ux -> -> # *U &U _targetPosition `ui `ux -> -> 48 `i `s ]
"2289
[; ;MotorDrive.c: 2289:                     } else {
}
[e $U 672  ]
[e :U 671 ]
{
"2290
[; ;MotorDrive.c: 2290:                         targetPosition[ 1 ] = 304;
[e = *U + &U _targetPosition * -> -> -> 1 `i `ui `ux -> -> # *U &U _targetPosition `ui `ux -> -> 304 `i `s ]
"2291
[; ;MotorDrive.c: 2291:                     }
}
[e :U 672 ]
"2292
[; ;MotorDrive.c: 2292:                 } else {
}
[e $U 673  ]
[e :U 670 ]
{
"2293
[; ;MotorDrive.c: 2293:                     targetPosition[ motorNoOperation ] = 0;
[e = *U + &U _targetPosition * -> _motorNoOperation `ux -> -> # *U &U _targetPosition `ui `ux -> -> 0 `i `s ]
"2294
[; ;MotorDrive.c: 2294:                 }
}
[e :U 673 ]
"2296
[; ;MotorDrive.c: 2296:                 SetAfterMotorStopFunc(motorNoOperation, SPIControl_SetNotification);
[e ( _SetAfterMotorStopFunc (2 , _motorNoOperation &U _SPIControl_SetNotification ]
"2297
[; ;MotorDrive.c: 2297:                 SetDriveType(motorNoOperation, DRIVE_SIMPLE);
[e ( _SetDriveType (2 , _motorNoOperation -> . `E3889 0 `uc ]
"2298
[; ;MotorDrive.c: 2298:             } else if (reqCorrectBasePosBit & motorBitOperation) {
}
[e $U 674  ]
[e :U 669 ]
[e $ ! != & -> _reqCorrectBasePosBit `i -> _motorBitOperation `i -> 0 `i 675  ]
{
"2302
[; ;MotorDrive.c: 2302:                 reqCorrectBasePosBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectBasePosBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"2303
[; ;MotorDrive.c: 2303:                 SetDriveType(motorNoOperation, DRIVE_ACT_CORRECT_POSITION);
[e ( _SetDriveType (2 , _motorNoOperation -> . `E3889 4 `uc ]
"2304
[; ;MotorDrive.c: 2304:             }
}
[e :U 675 ]
[e :U 674 ]
"2307
[; ;MotorDrive.c: 2307:             MoveTargetPosition(motorNoOperation);
[e ( _MoveTargetPosition (1 _motorNoOperation ]
"2308
[; ;MotorDrive.c: 2308:         } else {
}
[e $U 676  ]
[e :U 668 ]
{
"2310
[; ;MotorDrive.c: 2310:             SetAfterDetectLoadFunc(motorNoOperation, AfterDetectedLoadPosition);
[e ( _SetAfterDetectLoadFunc (2 , _motorNoOperation &U _AfterDetectedLoadPosition ]
"2311
[; ;MotorDrive.c: 2311:             if (reqSearchBasePosBit & motorBitOperation) {
[e $ ! != & -> _reqSearchBasePosBit `i -> _motorBitOperation `i -> 0 `i 677  ]
{
"2315
[; ;MotorDrive.c: 2315:                 SetMotorStart(motorNoOperation);
[e ( _SetMotorStart (1 _motorNoOperation ]
"2317
[; ;MotorDrive.c: 2317:             } else if ((reqCorrectBasePosBit & motorBitOperation)
}
[e $U 678  ]
[e :U 677 ]
[e $ ! && && && != & -> _reqCorrectBasePosBit `i -> _motorBitOperation `i -> 0 `i != & -> _reqCorrectFinePoBit `i -> _motorBitOperation `i -> 0 `i == -> . `E4027 1 `i -> *U + &U _detectLoadType * -> _motorNoOperation `ux -> -> # *U &U _detectLoadType `ui `ux `i == -> . `E4020 1 `i -> _res `i 679  ]
"2320
[; ;MotorDrive.c: 2320:                     && (ID_SEARCH_RESULT_NEW_POS == res)) {
{
"2324
[; ;MotorDrive.c: 2324:                 UpdateCurrentPositionByFinePosition(motorNoOperation);
[e ( _UpdateCurrentPositionByFinePosition (1 _motorNoOperation ]
"2331
[; ;MotorDrive.c: 2331:                 InitPositionSearch(motorNoOperation);
[e ( _InitPositionSearch (1 _motorNoOperation ]
"2333
[; ;MotorDrive.c: 2333:                 SetDriveType(motorNoOperation, DRIVE_ACT_CORRECT_POSITION);
[e ( _SetDriveType (2 , _motorNoOperation -> . `E3889 4 `uc ]
"2334
[; ;MotorDrive.c: 2334:                 reqCorrectFinePoBit &= (UB) (~motorBitOperation);
[e =& _reqCorrectFinePoBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"2336
[; ;MotorDrive.c: 2336:                 MoveTargetPosition(motorNoOperation);
[e ( _MoveTargetPosition (1 _motorNoOperation ]
"2338
[; ;MotorDrive.c: 2338:             } else {
}
[e $U 680  ]
[e :U 679 ]
{
"2341
[; ;MotorDrive.c: 2341:             }
}
[e :U 680 ]
[e :U 678 ]
"2342
[; ;MotorDrive.c: 2342:         }
}
[e :U 676 ]
"2343
[; ;MotorDrive.c: 2343:     }
}
[e :U 664 ]
[e :U 659 ]
[e :U 656 ]
"2347
[; ;MotorDrive.c: 2347:     positionSearchCt[ motorNoOperation ] = 0;
[e = *U + &U _positionSearchCt * -> _motorNoOperation `ux -> -> # *U &U _positionSearchCt `ui `ux -> -> 0 `i `s ]
"2350
[; ;MotorDrive.c: 2350:     doubleInterval = 0;
[e = _doubleInterval -> -> 0 `i `uc ]
"2356
[; ;MotorDrive.c: 2356: }
[e :UE 615 ]
}
"2367
[; ;MotorDrive.c: 2367: void DetermineBasePosition(UB motor_no)
[v _DetermineBasePosition `(v ~T0 @X0 1 ef1`uc ]
"2368
[; ;MotorDrive.c: 2368: {
{
[e :U _DetermineBasePosition ]
"2367
[; ;MotorDrive.c: 2367: void DetermineBasePosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2368
[; ;MotorDrive.c: 2368: {
[f ]
"2369
[; ;MotorDrive.c: 2369:     UB base_pos_index;
[v _base_pos_index `uc ~T0 @X0 1 a ]
"2370
[; ;MotorDrive.c: 2370:     H load_pos_type;
[v _load_pos_type `s ~T0 @X0 1 a ]
"2372
[; ;MotorDrive.c: 2372:     base_pos_index = 0;
[e = _base_pos_index -> -> 0 `i `uc ]
"2375
[; ;MotorDrive.c: 2375:     while (1) {
[e :U 683 ]
{
"2377
[; ;MotorDrive.c: 2377:         load_pos_type = detectLoadPositionType[ motor_no ][ base_pos_index ];
[e = _load_pos_type -> *U + &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux * -> _base_pos_index `ux -> -> # *U &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux `ui `ux `s ]
"2378
[; ;MotorDrive.c: 2378:         base_pos_index++;
[e ++ _base_pos_index -> -> 1 `i `uc ]
"2380
[; ;MotorDrive.c: 2380:         if (ID_DETECT_LOAD_ROUGH == load_pos_type) {
[e $ ! == -> . `E4027 2 `i -> _load_pos_type `i 685  ]
{
"2382
[; ;MotorDrive.c: 2382:             break;
[e $U 684  ]
"2383
[; ;MotorDrive.c: 2383:         }
}
[e :U 685 ]
"2384
[; ;MotorDrive.c: 2384:     }
}
[e :U 682 ]
[e $U 683  ]
[e :U 684 ]
"2387
[; ;MotorDrive.c: 2387:     while (1) {
[e :U 687 ]
{
"2389
[; ;MotorDrive.c: 2389:         load_pos_type = detectLoadPositionType[ motor_no ][ base_pos_index ];
[e = _load_pos_type -> *U + &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux * -> _base_pos_index `ux -> -> # *U &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux `ui `ux `s ]
"2391
[; ;MotorDrive.c: 2391:         if (ID_DETECT_LOAD_FINE == load_pos_type) {
[e $ ! == -> . `E4027 1 `i -> _load_pos_type `i 689  ]
{
"2393
[; ;MotorDrive.c: 2393:             break;
[e $U 688  ]
"2394
[; ;MotorDrive.c: 2394:         }
}
[e :U 689 ]
"2396
[; ;MotorDrive.c: 2396:         base_pos_index++;
[e ++ _base_pos_index -> -> 1 `i `uc ]
"2397
[; ;MotorDrive.c: 2397:         if (base_pos_index > detectLoadPositionIndex[ motor_no ]) {
[e $ ! > -> _base_pos_index `i -> *U + &U _detectLoadPositionIndex * -> _motor_no `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux `i 690  ]
{
"2398
[; ;MotorDrive.c: 2398:             base_pos_index = 0;
[e = _base_pos_index -> -> 0 `i `uc ]
"2399
[; ;MotorDrive.c: 2399:         }
}
[e :U 690 ]
"2400
[; ;MotorDrive.c: 2400:     }
}
[e :U 686 ]
[e $U 687  ]
[e :U 688 ]
"2402
[; ;MotorDrive.c: 2402:     detectBasePosition[ motor_no ] = detectLoadPosition[ motor_no ][ base_pos_index ];
[e = *U + &U _detectBasePosition * -> _motor_no `ux -> -> # *U &U _detectBasePosition `ui `ux *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> _base_pos_index `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux ]
"2403
[; ;MotorDrive.c: 2403:     detectBasePosition[ motor_no ] += offsetBasePosition[ motor_no ];
[e =+ *U + &U _detectBasePosition * -> _motor_no `ux -> -> # *U &U _detectBasePosition `ui `ux -> *U + &U _offsetBasePosition * -> _motor_no `ux -> -> # *U &U _offsetBasePosition `ui `ux `s ]
"2405
[; ;MotorDrive.c: 2405:     CorrectPosition(&detectBasePosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _detectBasePosition * -> _motor_no `ux -> -> # *U &U _detectBasePosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2407
[; ;MotorDrive.c: 2407: }
[e :UE 681 ]
}
"2418
[; ;MotorDrive.c: 2418: void UpdataHandPosition(UB motor_no)
[v _UpdataHandPosition `(v ~T0 @X0 1 ef1`uc ]
"2419
[; ;MotorDrive.c: 2419: {
{
[e :U _UpdataHandPosition ]
"2418
[; ;MotorDrive.c: 2418: void UpdataHandPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2419
[; ;MotorDrive.c: 2419: {
[f ]
"2420
[; ;MotorDrive.c: 2420:     UB i;
[v _i `uc ~T0 @X0 1 a ]
"2422
[; ;MotorDrive.c: 2422:     currentPosition[ motor_no ] -= detectBasePosition[ motor_no ];
[e =- *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> *U + &U _detectBasePosition * -> _motor_no `ux -> -> # *U &U _detectBasePosition `ui `ux `s ]
"2423
[; ;MotorDrive.c: 2423:     CorrectPosition(&currentPosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2425
[; ;MotorDrive.c: 2425:     for (i = 0; i < detectLoadPositionIndex[ motor_no ]; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $U 695  ]
[e :U 692 ]
{
"2427
[; ;MotorDrive.c: 2427:         detectLoadPosition[ motor_no ][ i ] -= detectBasePosition[ motor_no ];
[e =- *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux -> *U + &U _detectBasePosition * -> _motor_no `ux -> -> # *U &U _detectBasePosition `ui `ux `s ]
"2428
[; ;MotorDrive.c: 2428:         CorrectPosition(&detectLoadPosition[ motor_no ][ i ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2430
[; ;MotorDrive.c: 2430:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 695 ]
[e $ < -> _i `i -> *U + &U _detectLoadPositionIndex * -> _motor_no `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux `i 692  ]
[e :U 693 ]
}
"2431
[; ;MotorDrive.c: 2431: }
[e :UE 691 ]
}
"2450
[; ;MotorDrive.c: 2450: void UpdateCurrentPositionByFinePosition(UB motor_no)
[v _UpdateCurrentPositionByFinePosition `(v ~T0 @X0 1 ef1`uc ]
"2451
[; ;MotorDrive.c: 2451: {
{
[e :U _UpdateCurrentPositionByFinePosition ]
"2450
[; ;MotorDrive.c: 2450: void UpdateCurrentPositionByFinePosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2451
[; ;MotorDrive.c: 2451: {
[f ]
"2452
[; ;MotorDrive.c: 2452:     UB i;
[v _i `uc ~T0 @X0 1 a ]
"2453
[; ;MotorDrive.c: 2453:     H revise_pos;
[v _revise_pos `s ~T0 @X0 1 a ]
"2454
[; ;MotorDrive.c: 2454:     H diff;
[v _diff `s ~T0 @X0 1 a ]
"2456
[; ;MotorDrive.c: 2456:     for (i = 0; i < loadPositionIndex[ motor_no ]; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $U 700  ]
[e :U 697 ]
{
"2458
[; ;MotorDrive.c: 2458:         if (ID_DETECT_LOAD_FINE == loadPositionType[ motor_no ][ i ]) {
[e $ ! == -> . `E4027 1 `i -> *U + &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux `ui `ux `i 701  ]
{
"2459
[; ;MotorDrive.c: 2459:             diff = currentPosition[ motor_no ] - loadPosition[ motor_no ][ i ];
[e = _diff -> - -> *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux `i -> *U + &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux `ui `ux `i `s ]
"2461
[; ;MotorDrive.c: 2461:             if (diff < 0) {
[e $ ! < -> _diff `i -> 0 `i 702  ]
{
"2462
[; ;MotorDrive.c: 2462:                 diff = -diff;
[e = _diff -> -U -> _diff `i `s ]
"2463
[; ;MotorDrive.c: 2463:             }
}
[e :U 702 ]
"2465
[; ;MotorDrive.c: 2465:             if (diff <= 22) {
[e $ ! <= -> _diff `i -> 22 `i 703  ]
{
"2466
[; ;MotorDrive.c: 2466:                 currentPosition[ motor_no ] = loadPosition[ motor_no ][ i ];
[e = *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux *U + &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux `ui `ux ]
"2467
[; ;MotorDrive.c: 2467:                 break;
[e $U 698  ]
"2468
[; ;MotorDrive.c: 2468:             }
}
[e :U 703 ]
"2469
[; ;MotorDrive.c: 2469:         }
}
[e :U 701 ]
"2470
[; ;MotorDrive.c: 2470:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 700 ]
[e $ < -> _i `i -> *U + &U _loadPositionIndex * -> _motor_no `ux -> -> # *U &U _loadPositionIndex `ui `ux `i 697  ]
[e :U 698 ]
}
"2471
[; ;MotorDrive.c: 2471: }
[e :UE 696 ]
}
"2482
[; ;MotorDrive.c: 2482: void SaveLoadPosition(UB motor_no)
[v _SaveLoadPosition `(v ~T0 @X0 1 ef1`uc ]
"2483
[; ;MotorDrive.c: 2483: {
{
[e :U _SaveLoadPosition ]
"2482
[; ;MotorDrive.c: 2482: void SaveLoadPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2483
[; ;MotorDrive.c: 2483: {
[f ]
"2484
[; ;MotorDrive.c: 2484:     UB i;
[v _i `uc ~T0 @X0 1 a ]
"2486
[; ;MotorDrive.c: 2486:     for (i = 0; i < ( ( ( 8 * 2 ) + ( 1 * 9 ) ) - 2 ); i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - + * -> 8 `i -> 2 `i * -> 1 `i -> 9 `i -> 2 `i 705  ]
[e $U 706  ]
[e :U 705 ]
{
"2487
[; ;MotorDrive.c: 2487:         loadPosition[ motor_no ][ i ] = detectLoadPosition[ motor_no ][ i ];
[e = *U + &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux `ui `ux *U + &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPosition `ui -> -> 23 `i `ui `ux `ui `ux ]
"2488
[; ;MotorDrive.c: 2488:         loadPositionType[ motor_no ][ i ] = detectLoadPositionType[ motor_no ][ i ];
[e = *U + &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux `ui `ux *U + &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _detectLoadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _detectLoadPositionType `ui -> -> 23 `i `ui `ux `ui `ux ]
"2489
[; ;MotorDrive.c: 2489:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - + * -> 8 `i -> 2 `i * -> 1 `i -> 9 `i -> 2 `i 705  ]
[e :U 706 ]
}
"2491
[; ;MotorDrive.c: 2491:     loadPositionIndex[ motor_no ] = detectLoadPositionIndex[ motor_no ];
[e = *U + &U _loadPositionIndex * -> _motor_no `ux -> -> # *U &U _loadPositionIndex `ui `ux *U + &U _detectLoadPositionIndex * -> _motor_no `ux -> -> # *U &U _detectLoadPositionIndex `ui `ux ]
"2492
[; ;MotorDrive.c: 2492: }
[e :UE 704 ]
}
"2502
[; ;MotorDrive.c: 2502: void ActivateHandPosition(UB motor_no)
[v _ActivateHandPosition `(v ~T0 @X0 1 ef1`uc ]
"2503
[; ;MotorDrive.c: 2503: {
{
[e :U _ActivateHandPosition ]
"2502
[; ;MotorDrive.c: 2502: void ActivateHandPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2503
[; ;MotorDrive.c: 2503: {
[f ]
"2504
[; ;MotorDrive.c: 2504:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"2506
[; ;MotorDrive.c: 2506:     handPositionActiveBit |= motorBitOperation;
[e =| _handPositionActiveBit -> _motorBitOperation `uc ]
"2507
[; ;MotorDrive.c: 2507: }
[e :UE 708 ]
}
"2517
[; ;MotorDrive.c: 2517: void DeactivateHandPosition(UB motor_no)
[v _DeactivateHandPosition `(v ~T0 @X0 1 ef1`uc ]
"2518
[; ;MotorDrive.c: 2518: {
{
[e :U _DeactivateHandPosition ]
"2517
[; ;MotorDrive.c: 2517: void DeactivateHandPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2518
[; ;MotorDrive.c: 2518: {
[f ]
"2519
[; ;MotorDrive.c: 2519:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"2521
[; ;MotorDrive.c: 2521:     handPositionActiveBit &= (UB) (~motorBitOperation);
[e =& _handPositionActiveBit -> -> ~ -> _motorBitOperation `i `uc `uc ]
"2522
[; ;MotorDrive.c: 2522: }
[e :UE 709 ]
}
"2532
[; ;MotorDrive.c: 2532: void MoveTargetPosition(UB motor_no)
[v _MoveTargetPosition `(v ~T0 @X0 1 ef1`uc ]
"2533
[; ;MotorDrive.c: 2533: {
{
[e :U _MoveTargetPosition ]
"2532
[; ;MotorDrive.c: 2532: void MoveTargetPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2533
[; ;MotorDrive.c: 2533: {
[f ]
"2535
[; ;MotorDrive.c: 2535:     CalcMotorStepCounter(motor_no);
[e ( _CalcMotorStepCounter (1 _motor_no ]
"2538
[; ;MotorDrive.c: 2538:     SetMotorFrequency(motor_no, FREQ_SET_SELF_CONTROL_NORMAL, 41);
[e ( _SetMotorFrequency (3 , , _motor_no -> . `E3896 0 `uc -> -> 41 `i `uc ]
"2541
[; ;MotorDrive.c: 2541:     SetMotorStart(motor_no);
[e ( _SetMotorStart (1 _motor_no ]
"2542
[; ;MotorDrive.c: 2542: }
[e :UE 710 ]
}
"2553
[; ;MotorDrive.c: 2553: void VerifyHandPosition_LoadPosition(UB motor_no)
[v _VerifyHandPosition_LoadPosition `(v ~T0 @X0 1 ef1`uc ]
"2554
[; ;MotorDrive.c: 2554: {
{
[e :U _VerifyHandPosition_LoadPosition ]
"2553
[; ;MotorDrive.c: 2553: void VerifyHandPosition_LoadPosition(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2554
[; ;MotorDrive.c: 2554: {
[f ]
"2555
[; ;MotorDrive.c: 2555:     UB i;
[v _i `uc ~T0 @X0 1 a ]
"2556
[; ;MotorDrive.c: 2556:     UB misalignment_flag = 1;
[v _misalignment_flag `uc ~T0 @X0 1 a ]
[e = _misalignment_flag -> -> 1 `i `uc ]
"2557
[; ;MotorDrive.c: 2557:     H remain_steps;
[v _remain_steps `s ~T0 @X0 1 a ]
"2558
[; ;MotorDrive.c: 2558:     H curt_pos;
[v _curt_pos `s ~T0 @X0 1 a ]
"2559
[; ;MotorDrive.c: 2559:     H load_pos;
[v _load_pos `s ~T0 @X0 1 a ]
"2560
[; ;MotorDrive.c: 2560:     H load_pos_pl1;
[v _load_pos_pl1 `s ~T0 @X0 1 a ]
"2563
[; ;MotorDrive.c: 2563:     if (0 == motor_no) {
[e $ ! == -> 0 `i -> _motor_no `i 712  ]
{
"2564
[; ;MotorDrive.c: 2564:         remain_steps = motorM0StepCounter;
[e = _remain_steps _motorM0StepCounter ]
"2565
[; ;MotorDrive.c: 2565:     } else {
}
[e $U 713  ]
[e :U 712 ]
{
"2566
[; ;MotorDrive.c: 2566:         remain_steps = motorM1StepCounter;
[e = _remain_steps _motorM1StepCounter ]
"2567
[; ;MotorDrive.c: 2567:     }
}
[e :U 713 ]
"2570
[; ;MotorDrive.c: 2570:     currentPosition[ motor_no ] -= remain_steps;
[e =- *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux -> _remain_steps `s ]
"2571
[; ;MotorDrive.c: 2571:     CorrectPosition(&currentPosition[ motor_no ], TblMaxSteps[ motor_no ]);
[e ( _CorrectPosition (2 , &U *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux ]
"2573
[; ;MotorDrive.c: 2573:     curt_pos = currentPosition[ motor_no ];
[e = _curt_pos *U + &U _currentPosition * -> _motor_no `ux -> -> # *U &U _currentPosition `ui `ux ]
"2588
[; ;MotorDrive.c: 2588:     for (i = 0; i < loadPositionIndex[ motor_no ]; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $U 717  ]
[e :U 714 ]
{
"2590
[; ;MotorDrive.c: 2590:         load_pos = loadPosition[ motor_no ][ i ];
[e = _load_pos *U + &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPosition * -> _motor_no `ux -> * -> # *U &U *U &U _loadPosition `ui -> -> 23 `i `ui `ux `ui `ux ]
"2592
[; ;MotorDrive.c: 2592:         if (curt_pos == load_pos) {
[e $ ! == -> _curt_pos `i -> _load_pos `i 718  ]
{
"2594
[; ;MotorDrive.c: 2594:             misalignment_flag = 0;
[e = _misalignment_flag -> -> 0 `i `uc ]
"2595
[; ;MotorDrive.c: 2595:             break;
[e $U 715  ]
"2596
[; ;MotorDrive.c: 2596:         }
}
[e :U 718 ]
"2598
[; ;MotorDrive.c: 2598:         if (ID_DETECT_LOAD_FINE == loadPositionType[ motor_no ][ i ]) {
[e $ ! == -> . `E4027 1 `i -> *U + &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U _loadPositionType * -> _motor_no `ux -> * -> # *U &U *U &U _loadPositionType `ui -> -> 23 `i `ui `ux `ui `ux `i 719  ]
{
"2600
[; ;MotorDrive.c: 2600:             load_pos++;
[e ++ _load_pos -> -> 1 `i `s ]
"2601
[; ;MotorDrive.c: 2601:             if (load_pos >= TblMaxSteps[ motor_no ]) {
[e $ ! >= -> _load_pos `i -> *U + &U _TblMaxSteps * -> _motor_no `ux -> -> # *U &U _TblMaxSteps `ui `ux `i 720  ]
{
"2602
[; ;MotorDrive.c: 2602:                 load_pos = 0;
[e = _load_pos -> -> 0 `i `s ]
"2603
[; ;MotorDrive.c: 2603:             }
}
[e :U 720 ]
"2605
[; ;MotorDrive.c: 2605:             if (curt_pos == load_pos) {
[e $ ! == -> _curt_pos `i -> _load_pos `i 721  ]
{
"2607
[; ;MotorDrive.c: 2607:                 misalignment_flag = 0;
[e = _misalignment_flag -> -> 0 `i `uc ]
"2608
[; ;MotorDrive.c: 2608:                 break;
[e $U 715  ]
"2609
[; ;MotorDrive.c: 2609:             }
}
[e :U 721 ]
"2610
[; ;MotorDrive.c: 2610:         }
}
[e :U 719 ]
"2611
[; ;MotorDrive.c: 2611:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 717 ]
[e $ < -> _i `i -> *U + &U _loadPositionIndex * -> _motor_no `ux -> -> # *U &U _loadPositionIndex `ui `ux `i 714  ]
[e :U 715 ]
}
"2613
[; ;MotorDrive.c: 2613:     if (misalignment_flag) {
[e $ ! != -> _misalignment_flag `i -> 0 `i 722  ]
{
"2617
[; ;MotorDrive.c: 2617:         SetMotorCorrectPositionStart(motor_no);
[e ( _SetMotorCorrectPositionStart (1 _motor_no ]
"2618
[; ;MotorDrive.c: 2618:     } else {
}
[e $U 723  ]
[e :U 722 ]
{
"2621
[; ;MotorDrive.c: 2621:         MoveTargetPosition(motor_no);
[e ( _MoveTargetPosition (1 _motor_no ]
"2622
[; ;MotorDrive.c: 2622:     }
}
[e :U 723 ]
"2623
[; ;MotorDrive.c: 2623: }
[e :UE 711 ]
}
"2634
[; ;MotorDrive.c: 2634: UB GetIsMotorActive(UB motor_no)
[v _GetIsMotorActive `(uc ~T0 @X0 1 ef1`uc ]
"2635
[; ;MotorDrive.c: 2635: {
{
[e :U _GetIsMotorActive ]
"2634
[; ;MotorDrive.c: 2634: UB GetIsMotorActive(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2635
[; ;MotorDrive.c: 2635: {
[f ]
"2636
[; ;MotorDrive.c: 2636:     UB res = 0;
[v _res `uc ~T0 @X0 1 a ]
[e = _res -> -> 0 `i `uc ]
"2639
[; ;MotorDrive.c: 2639:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"2641
[; ;MotorDrive.c: 2641:     if (motorActiveBit & motorBitOperation) {
[e $ ! != & -> _motorActiveBit `i -> _motorBitOperation `i -> 0 `i 725  ]
{
"2642
[; ;MotorDrive.c: 2642:         res = 1;
[e = _res -> -> 1 `i `uc ]
"2643
[; ;MotorDrive.c: 2643:     }
}
[e :U 725 ]
"2645
[; ;MotorDrive.c: 2645:     return res;
[e ) _res ]
[e $UE 724  ]
"2646
[; ;MotorDrive.c: 2646: }
[e :UE 724 ]
}
"2650
[; ;MotorDrive.c: 2650: void SetMotorBitMotorNo(UB motor_no)
[v _SetMotorBitMotorNo `(v ~T0 @X0 1 ef1`uc ]
"2651
[; ;MotorDrive.c: 2651: {
{
[e :U _SetMotorBitMotorNo ]
"2650
[; ;MotorDrive.c: 2650: void SetMotorBitMotorNo(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2651
[; ;MotorDrive.c: 2651: {
[f ]
"2652
[; ;MotorDrive.c: 2652:     motorNoOperation = motor_no;
[e = _motorNoOperation _motor_no ]
"2653
[; ;MotorDrive.c: 2653:     motorBitOperation = (UB) (0x01 << motor_no);
[e = _motorBitOperation -> << -> 1 `i -> _motor_no `i `uc ]
"2654
[; ;MotorDrive.c: 2654: }
[e :UE 726 ]
}
"2663
[; ;MotorDrive.c: 2663: void ComparatorOff(UB motor_no)
[v _ComparatorOff `(v ~T0 @X0 1 ef1`uc ]
"2664
[; ;MotorDrive.c: 2664: {
{
[e :U _ComparatorOff ]
"2663
[; ;MotorDrive.c: 2663: void ComparatorOff(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2664
[; ;MotorDrive.c: 2664: {
[f ]
"2665
[; ;MotorDrive.c: 2665:     if (motor_no == 0) {
[e $ ! == -> _motor_no `i -> 0 `i 728  ]
{
"2666
[; ;MotorDrive.c: 2666:         CM1CON0 = 0x14;
[e = _CM1CON0 -> -> 20 `i `uc ]
"2667
[; ;MotorDrive.c: 2667:         CM1CON1 = 0x90;
[e = _CM1CON1 -> -> 144 `i `uc ]
"2668
[; ;MotorDrive.c: 2668:     } else {
}
[e $U 729  ]
[e :U 728 ]
{
"2669
[; ;MotorDrive.c: 2669:         CM2CON0 = 0x14;
[e = _CM2CON0 -> -> 20 `i `uc ]
"2670
[; ;MotorDrive.c: 2670:         CM2CON1 = 0x90;
[e = _CM2CON1 -> -> 144 `i `uc ]
"2671
[; ;MotorDrive.c: 2671:     }
}
[e :U 729 ]
"2672
[; ;MotorDrive.c: 2672:     PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2673
[; ;MotorDrive.c: 2673:     PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2674
[; ;MotorDrive.c: 2674: }
[e :UE 727 ]
}
"2682
[; ;MotorDrive.c: 2682: void ComparatorOn(UB motor_no)
[v _ComparatorOn `(v ~T0 @X0 1 ef1`uc ]
"2683
[; ;MotorDrive.c: 2683: {
{
[e :U _ComparatorOn ]
"2682
[; ;MotorDrive.c: 2682: void ComparatorOn(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2683
[; ;MotorDrive.c: 2683: {
[f ]
"2684
[; ;MotorDrive.c: 2684:     if (motor_no == 0) {
[e $ ! == -> _motor_no `i -> 0 `i 731  ]
{
"2685
[; ;MotorDrive.c: 2685:         CM1CON0 = (0x14 | 0x80);
[e = _CM1CON0 -> | -> 20 `i -> 128 `i `uc ]
"2686
[; ;MotorDrive.c: 2686:         if (polarityBit & 0x01) {
[e $ ! != & -> _polarityBit `i -> 1 `i -> 0 `i 732  ]
{
"2688
[; ;MotorDrive.c: 2688:             CM1CON1 = (0x90 | 0x00);
[e = _CM1CON1 -> | -> 144 `i -> 0 `i `uc ]
"2689
[; ;MotorDrive.c: 2689:         } else {
}
[e $U 733  ]
[e :U 732 ]
{
"2691
[; ;MotorDrive.c: 2691:             CM1CON1 = (0x90 | 0x01);
[e = _CM1CON1 -> | -> 144 `i -> 1 `i `uc ]
"2692
[; ;MotorDrive.c: 2692:         }
}
[e :U 733 ]
"2693
[; ;MotorDrive.c: 2693:         PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2695
[; ;MotorDrive.c: 2695:     } else {
}
[e $U 734  ]
[e :U 731 ]
{
"2697
[; ;MotorDrive.c: 2697:         CM2CON0 = (0x14 | 0x80);
[e = _CM2CON0 -> | -> 20 `i -> 128 `i `uc ]
"2698
[; ;MotorDrive.c: 2698:         if (polarityBit & 0x02) {
[e $ ! != & -> _polarityBit `i -> 2 `i -> 0 `i 735  ]
{
"2700
[; ;MotorDrive.c: 2700:             CM2CON1 = (0x90 | 0x02);
[e = _CM2CON1 -> | -> 144 `i -> 2 `i `uc ]
"2701
[; ;MotorDrive.c: 2701:         } else {
}
[e $U 736  ]
[e :U 735 ]
{
"2703
[; ;MotorDrive.c: 2703:             CM2CON1 = (0x90 | 0x03);
[e = _CM2CON1 -> | -> 144 `i -> 3 `i `uc ]
"2704
[; ;MotorDrive.c: 2704:         }
}
[e :U 736 ]
"2705
[; ;MotorDrive.c: 2705:         PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2707
[; ;MotorDrive.c: 2707:     }
}
[e :U 734 ]
"2708
[; ;MotorDrive.c: 2708: }
[e :UE 730 ]
}
"2717
[; ;MotorDrive.c: 2717: void VrsCheck(UB motor_no)
[v _VrsCheck `(v ~T0 @X0 1 ef1`uc ]
"2718
[; ;MotorDrive.c: 2718: {
{
[e :U _VrsCheck ]
"2717
[; ;MotorDrive.c: 2717: void VrsCheck(UB motor_no)
[v _motor_no `uc ~T0 @X0 1 r1 ]
"2718
[; ;MotorDrive.c: 2718: {
[f ]
"2719
[; ;MotorDrive.c: 2719:     if (motor_no == 0) {
[e $ ! == -> _motor_no `i -> 0 `i 738  ]
{
"2720
[; ;MotorDrive.c: 2720:         if (PIR2bits.C1IF) {
[e $ ! != -> . . _PIR2bits 0 4 `i -> 0 `i 739  ]
{
"2721
[; ;MotorDrive.c: 2721:             vrsCountValue[ 0 ]++;
[e ++ *U + &U _vrsCountValue * -> -> -> 0 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux -> -> 1 `i `uc ]
"2723
[; ;MotorDrive.c: 2723:         }
}
[e :U 739 ]
"2724
[; ;MotorDrive.c: 2724:         PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2725
[; ;MotorDrive.c: 2725:     } else {
}
[e $U 740  ]
[e :U 738 ]
{
"2726
[; ;MotorDrive.c: 2726:         if (PIR2bits.C2IF) {
[e $ ! != -> . . _PIR2bits 0 5 `i -> 0 `i 741  ]
{
"2727
[; ;MotorDrive.c: 2727:             vrsCountValue [ 1 ]++;
[e ++ *U + &U _vrsCountValue * -> -> -> 1 `i `ui `ux -> -> # *U &U _vrsCountValue `ui `ux -> -> 1 `i `uc ]
"2728
[; ;MotorDrive.c: 2728:         }
}
[e :U 741 ]
"2729
[; ;MotorDrive.c: 2729:         PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2730
[; ;MotorDrive.c: 2730:     }
}
[e :U 740 ]
"2731
[; ;MotorDrive.c: 2731: }
[e :UE 737 ]
}
"2740
[; ;MotorDrive.c: 2740: void SpkComparatorOff(void)
[v _SpkComparatorOff `(v ~T0 @X0 1 ef ]
"2741
[; ;MotorDrive.c: 2741: {
{
[e :U _SpkComparatorOff ]
[f ]
"2742
[; ;MotorDrive.c: 2742:     CM1CON0 = 0x14;
[e = _CM1CON0 -> -> 20 `i `uc ]
"2743
[; ;MotorDrive.c: 2743:     CM1CON1 = 0x90;
[e = _CM1CON1 -> -> 144 `i `uc ]
"2745
[; ;MotorDrive.c: 2745:     CM2CON0 = 0x14;
[e = _CM2CON0 -> -> 20 `i `uc ]
"2746
[; ;MotorDrive.c: 2746:     CM2CON1 = 0x90;
[e = _CM2CON1 -> -> 144 `i `uc ]
"2748
[; ;MotorDrive.c: 2748:     PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2749
[; ;MotorDrive.c: 2749:     PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2750
[; ;MotorDrive.c: 2750: }
[e :UE 742 ]
}
"2758
[; ;MotorDrive.c: 2758: void SpkComparatorOn(void)
[v _SpkComparatorOn `(v ~T0 @X0 1 ef ]
"2759
[; ;MotorDrive.c: 2759: {
{
[e :U _SpkComparatorOn ]
[f ]
"2760
[; ;MotorDrive.c: 2760:     CM1CON0 = (0x14 | 0x80);
[e = _CM1CON0 -> | -> 20 `i -> 128 `i `uc ]
"2761
[; ;MotorDrive.c: 2761:     PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2763
[; ;MotorDrive.c: 2763:     CM2CON0 = (0x14 | 0x80);
[e = _CM2CON0 -> | -> 20 `i -> 128 `i `uc ]
"2764
[; ;MotorDrive.c: 2764:     PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2767
[; ;MotorDrive.c: 2767: }
[e :UE 743 ]
}
"2776
[; ;MotorDrive.c: 2776: void SpkVrsCheck(void)
[v _SpkVrsCheck `(v ~T0 @X0 1 ef ]
"2777
[; ;MotorDrive.c: 2777: {
{
[e :U _SpkVrsCheck ]
[f ]
"2778
[; ;MotorDrive.c: 2778:     if ((PIR2bits.C1IF == 1) || (PIR2bits.C2IF == 1)) {
[e $ ! || == -> . . _PIR2bits 0 4 `i -> 1 `i == -> . . _PIR2bits 0 5 `i -> 1 `i 745  ]
{
"2780
[; ;MotorDrive.c: 2780:         PIR2bits.C1IF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"2781
[; ;MotorDrive.c: 2781:         PIR2bits.C2IF = 0;
[e = . . _PIR2bits 0 5 -> -> 0 `i `uc ]
"2783
[; ;MotorDrive.c: 2783:         ExcitatingOutOn();
[e ( _ExcitatingOutOn ..  ]
"2784
[; ;MotorDrive.c: 2784:     } else {
}
[e $U 746  ]
[e :U 745 ]
{
"2785
[; ;MotorDrive.c: 2785:         ExcitatingOutOff();
[e ( _ExcitatingOutOff ..  ]
"2786
[; ;MotorDrive.c: 2786:     }
}
[e :U 746 ]
"2788
[; ;MotorDrive.c: 2788: }
[e :UE 744 ]
}
"2797
[; ;MotorDrive.c: 2797: void ExcitatingOutOff(void)
[v _ExcitatingOutOff `(v ~T0 @X0 1 ef ]
"2798
[; ;MotorDrive.c: 2798: {
{
[e :U _ExcitatingOutOff ]
[f ]
"2800
[; ;MotorDrive.c: 2800:     SetExcitatingOutOffData();
[e ( _SetExcitatingOutOffData ..  ]
"2803
[; ;MotorDrive.c: 2803:     if (excitatingStatusOn) {
[e $ ! != -> _excitatingStatusOn `i -> 0 `i 748  ]
{
"2804
[; ;MotorDrive.c: 2804:         excitatingStatusOn = 0;
[e = _excitatingStatusOn -> -> 0 `i `uc ]
"2806
[; ;MotorDrive.c: 2806:         excitatingOffMaskTime = 82;
[e = _excitatingOffMaskTime -> -> 82 `i `uc ]
"2807
[; ;MotorDrive.c: 2807:     }
}
[e :U 748 ]
"2809
[; ;MotorDrive.c: 2809: }
[e :UE 747 ]
}
"2818
[; ;MotorDrive.c: 2818: void SetExcitatingOutOffData(void)
[v _SetExcitatingOutOffData `(v ~T0 @X0 1 ef ]
"2819
[; ;MotorDrive.c: 2819: {
{
[e :U _SetExcitatingOutOffData ]
[f ]
"2822
[; ;MotorDrive.c: 2822:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"2823
[; ;MotorDrive.c: 2823:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"2824
[; ;MotorDrive.c: 2824:     dataTRISCWork_M0 = 0x20;
[e = _dataTRISCWork_M0 -> -> 32 `i `uc ]
"2826
[; ;MotorDrive.c: 2826:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"2827
[; ;MotorDrive.c: 2827:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"2828
[; ;MotorDrive.c: 2828:     dataTRISCWork_M1 = 0x10;
[e = _dataTRISCWork_M1 -> -> 16 `i `uc ]
"2830
[; ;MotorDrive.c: 2830:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"2831
[; ;MotorDrive.c: 2831:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"2832
[; ;MotorDrive.c: 2832:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"2834
[; ;MotorDrive.c: 2834:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"2835
[; ;MotorDrive.c: 2835:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"2836
[; ;MotorDrive.c: 2836:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"2838
[; ;MotorDrive.c: 2838:     SetOutPutLATX();
[e ( _SetOutPutLATX ..  ]
"2839
[; ;MotorDrive.c: 2839:     LATA &= ~0x04;
[e =& _LATA -> ~ -> 4 `i `Vuc ]
"2841
[; ;MotorDrive.c: 2841: }
[e :UE 749 ]
}
"2850
[; ;MotorDrive.c: 2850: void ExcitatingOutOn(void)
[v _ExcitatingOutOn `(v ~T0 @X0 1 ef ]
"2851
[; ;MotorDrive.c: 2851: {
{
[e :U _ExcitatingOutOn ]
[f ]
"2853
[; ;MotorDrive.c: 2853:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"2854
[; ;MotorDrive.c: 2854:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"2855
[; ;MotorDrive.c: 2855:     dataTRISCWork_M0 = 0x20;
[e = _dataTRISCWork_M0 -> -> 32 `i `uc ]
"2857
[; ;MotorDrive.c: 2857:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"2858
[; ;MotorDrive.c: 2858:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"2859
[; ;MotorDrive.c: 2859:     dataTRISCWork_M1 = 0x10;
[e = _dataTRISCWork_M1 -> -> 16 `i `uc ]
"2862
[; ;MotorDrive.c: 2862:     pulseOutLATAWork_M0 = 0x10;
[e = _pulseOutLATAWork_M0 -> -> 16 `i `uc ]
"2863
[; ;MotorDrive.c: 2863:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"2864
[; ;MotorDrive.c: 2864:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"2866
[; ;MotorDrive.c: 2866:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"2867
[; ;MotorDrive.c: 2867:     pulseOutLATBWork_M1 = 0x80;
[e = _pulseOutLATBWork_M1 -> -> 128 `i `uc ]
"2868
[; ;MotorDrive.c: 2868:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"2870
[; ;MotorDrive.c: 2870:     SetOutPutLATX();
[e ( _SetOutPutLATX ..  ]
"2871
[; ;MotorDrive.c: 2871:     LATA |= 0x04;
[e =| _LATA -> -> 4 `i `Vuc ]
"2873
[; ;MotorDrive.c: 2873:     spkStopStatus = 1;
[e = _spkStopStatus -> -> 1 `i `uc ]
"2874
[; ;MotorDrive.c: 2874:     excitatingStatusOn = 1;
[e = _excitatingStatusOn -> -> 1 `i `uc ]
"2875
[; ;MotorDrive.c: 2875:     excitatingTime = 8197;
[e = _excitatingTime -> -> 8197 `i `us ]
"2876
[; ;MotorDrive.c: 2876: }
[e :UE 750 ]
}
"2887
[; ;MotorDrive.c: 2887: void SetDataTRISxWork_SPK_OPEN(void)
[v _SetDataTRISxWork_SPK_OPEN `(v ~T0 @X0 1 ef ]
"2888
[; ;MotorDrive.c: 2888: {
{
[e :U _SetDataTRISxWork_SPK_OPEN ]
[f ]
"2889
[; ;MotorDrive.c: 2889:     if (detectSpkTurnBit == 0) {
[e $ ! == -> _detectSpkTurnBit `i -> 0 `i 752  ]
{
"2890
[; ;MotorDrive.c: 2890:         dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"2891
[; ;MotorDrive.c: 2891:         dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"2892
[; ;MotorDrive.c: 2892:         dataTRISCWork_M0 = 0x02;
[e = _dataTRISCWork_M0 -> -> 2 `i `uc ]
"2894
[; ;MotorDrive.c: 2894:         dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"2895
[; ;MotorDrive.c: 2895:         dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"2896
[; ;MotorDrive.c: 2896:         dataTRISCWork_M1 = 0x08;
[e = _dataTRISCWork_M1 -> -> 8 `i `uc ]
"2898
[; ;MotorDrive.c: 2898:         CM1CON1 = (0x90 | 0x01);
[e = _CM1CON1 -> | -> 144 `i -> 1 `i `uc ]
"2899
[; ;MotorDrive.c: 2899:         CM2CON1 = (0x90 | 0x03);
[e = _CM2CON1 -> | -> 144 `i -> 3 `i `uc ]
"2901
[; ;MotorDrive.c: 2901:     } else {
}
[e $U 753  ]
[e :U 752 ]
{
"2902
[; ;MotorDrive.c: 2902:         dataTRISAWork_M0 = 0x02;
[e = _dataTRISAWork_M0 -> -> 2 `i `uc ]
"2903
[; ;MotorDrive.c: 2903:         dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"2904
[; ;MotorDrive.c: 2904:         dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"2906
[; ;MotorDrive.c: 2906:         dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"2907
[; ;MotorDrive.c: 2907:         dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"2908
[; ;MotorDrive.c: 2908:         dataTRISCWork_M1 = 0x04;
[e = _dataTRISCWork_M1 -> -> 4 `i `uc ]
"2910
[; ;MotorDrive.c: 2910:         CM1CON1 = (0x90 | 0x00);
[e = _CM1CON1 -> | -> 144 `i -> 0 `i `uc ]
"2911
[; ;MotorDrive.c: 2911:         CM2CON1 = (0x90 | 0x02);
[e = _CM2CON1 -> | -> 144 `i -> 2 `i `uc ]
"2912
[; ;MotorDrive.c: 2912:     }
}
[e :U 753 ]
"2914
[; ;MotorDrive.c: 2914:     spkOutChangeFunc = SetDataTRISxWork_SPK_SHORT;
[e = _spkOutChangeFunc &U _SetDataTRISxWork_SPK_SHORT ]
"2915
[; ;MotorDrive.c: 2915:     spkChangePosition = 1;
[e = _spkChangePosition -> -> 1 `i `uc ]
"2916
[; ;MotorDrive.c: 2916:     detectSpkTurnBit ^= 0x01;
[e =^ _detectSpkTurnBit -> -> 1 `i `uc ]
"2918
[; ;MotorDrive.c: 2918:     if (0 == spkStopStatus) {
[e $ ! == -> 0 `i -> _spkStopStatus `i 754  ]
{
"2919
[; ;MotorDrive.c: 2919:         spkOutTrisRequestFlug = 1;
[e = _spkOutTrisRequestFlug -> -> 1 `i `uc ]
"2920
[; ;MotorDrive.c: 2920:     }
}
[e :U 754 ]
"2922
[; ;MotorDrive.c: 2922: }
[e :UE 751 ]
}
"2933
[; ;MotorDrive.c: 2933: void SetDataTRISxWork_SPK_SHORT(void)
[v _SetDataTRISxWork_SPK_SHORT `(v ~T0 @X0 1 ef ]
"2934
[; ;MotorDrive.c: 2934: {
{
[e :U _SetDataTRISxWork_SPK_SHORT ]
[f ]
"2935
[; ;MotorDrive.c: 2935:     dataTRISAWork_M0 = (0x00 | 0x00);
[e = _dataTRISAWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"2936
[; ;MotorDrive.c: 2936:     dataTRISBWork_M0 = (0x00 | 0x00);
[e = _dataTRISBWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"2937
[; ;MotorDrive.c: 2937:     dataTRISCWork_M0 = (0x00 | 0x00);
[e = _dataTRISCWork_M0 -> | -> 0 `i -> 0 `i `uc ]
"2939
[; ;MotorDrive.c: 2939:     dataTRISAWork_M1 = (0x00 | 0x00);
[e = _dataTRISAWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"2940
[; ;MotorDrive.c: 2940:     dataTRISBWork_M1 = (0x00 | 0x00);
[e = _dataTRISBWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"2941
[; ;MotorDrive.c: 2941:     dataTRISCWork_M1 = (0x00 | 0x00);
[e = _dataTRISCWork_M1 -> | -> 0 `i -> 0 `i `uc ]
"2943
[; ;MotorDrive.c: 2943:     spkOutChangeFunc = SetDataTRISxWork_SPK_OPEN;
[e = _spkOutChangeFunc &U _SetDataTRISxWork_SPK_OPEN ]
"2944
[; ;MotorDrive.c: 2944:     spkChangePosition = 0;
[e = _spkChangePosition -> -> 0 `i `uc ]
"2946
[; ;MotorDrive.c: 2946:     spkOutTrisRequestFlug = 1;
[e = _spkOutTrisRequestFlug -> -> 1 `i `uc ]
"2948
[; ;MotorDrive.c: 2948:     if (0 == spkStopStatus) {
[e $ ! == -> 0 `i -> _spkStopStatus `i 756  ]
{
"2949
[; ;MotorDrive.c: 2949:         if (0 == spkReqVrsCheckWait) {
[e $ ! == -> 0 `i -> _spkReqVrsCheckWait `i 757  ]
{
"2950
[; ;MotorDrive.c: 2950:             spkReqVrsCheckBit |= (0x01 | 0x02);
[e =| _spkReqVrsCheckBit -> | -> 1 `i -> 2 `i `uc ]
"2951
[; ;MotorDrive.c: 2951:         } else {
}
[e $U 758  ]
[e :U 757 ]
{
"2952
[; ;MotorDrive.c: 2952:             spkReqVrsCheckWait = 0;
[e = _spkReqVrsCheckWait -> -> 0 `i `uc ]
"2953
[; ;MotorDrive.c: 2953:         }
}
[e :U 758 ]
"2954
[; ;MotorDrive.c: 2954:     }
}
[e :U 756 ]
"2955
[; ;MotorDrive.c: 2955: }
[e :UE 755 ]
}
"2958
[; ;MotorDrive.c: 2958: void SetOutPutLATX(void)
[v _SetOutPutLATX `(v ~T0 @X0 1 ef ]
"2959
[; ;MotorDrive.c: 2959: {
{
[e :U _SetOutPutLATX ]
[f ]
"2962
[; ;MotorDrive.c: 2962:     dataTRISA = TRISA;
[e = _dataTRISA _TRISA ]
"2963
[; ;MotorDrive.c: 2963:     dataTRISB = TRISB;
[e = _dataTRISB _TRISB ]
"2964
[; ;MotorDrive.c: 2964:     dataTRISC = TRISC;
[e = _dataTRISC _TRISC ]
"2968
[; ;MotorDrive.c: 2968:     dataTRISA &= (UB) (~(0x02 | 0x00));
[e =& _dataTRISA -> -> ~ | -> 2 `i -> 0 `i `uc `uc ]
"2969
[; ;MotorDrive.c: 2969:     dataTRISB &= (UB) (~(0x00 | 0x00));
[e =& _dataTRISB -> -> ~ | -> 0 `i -> 0 `i `uc `uc ]
"2970
[; ;MotorDrive.c: 2970:     dataTRISC &= (UB) (~(0x22 | 0x1C));
[e =& _dataTRISC -> -> ~ | -> 34 `i -> 28 `i `uc `uc ]
"2973
[; ;MotorDrive.c: 2973:     dataTRISA |= (UB) (dataTRISAWork_M0 | dataTRISAWork_M1);
[e =| _dataTRISA -> -> | -> _dataTRISAWork_M0 `i -> _dataTRISAWork_M1 `i `uc `uc ]
"2974
[; ;MotorDrive.c: 2974:     dataTRISB |= (UB) (dataTRISBWork_M0 | dataTRISBWork_M1);
[e =| _dataTRISB -> -> | -> _dataTRISBWork_M0 `i -> _dataTRISBWork_M1 `i `uc `uc ]
"2975
[; ;MotorDrive.c: 2975:     dataTRISC |= (UB) (dataTRISCWork_M0 | dataTRISCWork_M1);
[e =| _dataTRISC -> -> | -> _dataTRISCWork_M0 `i -> _dataTRISCWork_M1 `i `uc `uc ]
"2978
[; ;MotorDrive.c: 2978:     TRISA = dataTRISA;
[e = _TRISA _dataTRISA ]
"2979
[; ;MotorDrive.c: 2979:     TRISB = dataTRISB;
[e = _TRISB _dataTRISB ]
"2980
[; ;MotorDrive.c: 2980:     TRISC = dataTRISC;
[e = _TRISC _dataTRISC ]
"2983
[; ;MotorDrive.c: 2983:     pulseOutLATA = LATA;
[e = _pulseOutLATA _LATA ]
"2984
[; ;MotorDrive.c: 2984:     pulseOutLATB = LATB;
[e = _pulseOutLATB _LATB ]
"2985
[; ;MotorDrive.c: 2985:     pulseOutLATC = LATC;
[e = _pulseOutLATC _LATC ]
"2989
[; ;MotorDrive.c: 2989:     pulseOutLATA &= (UB) (~(0x32 | 0x00));
[e =& _pulseOutLATA -> -> ~ | -> 50 `i -> 0 `i `uc `uc ]
"2990
[; ;MotorDrive.c: 2990:     pulseOutLATB &= (UB) (~(0x00 | 0xA0));
[e =& _pulseOutLATB -> -> ~ | -> 0 `i -> 160 `i `uc `uc ]
"2991
[; ;MotorDrive.c: 2991:     pulseOutLATC &= (UB) (~(0x02 | 0x0C));
[e =& _pulseOutLATC -> -> ~ | -> 2 `i -> 12 `i `uc `uc ]
"2994
[; ;MotorDrive.c: 2994:     pulseOutLATA |= (UB) (pulseOutLATAWork_M0 | pulseOutLATAWork_M1);
[e =| _pulseOutLATA -> -> | -> _pulseOutLATAWork_M0 `i -> _pulseOutLATAWork_M1 `i `uc `uc ]
"2995
[; ;MotorDrive.c: 2995:     pulseOutLATB |= (UB) (pulseOutLATBWork_M0 | pulseOutLATBWork_M1);
[e =| _pulseOutLATB -> -> | -> _pulseOutLATBWork_M0 `i -> _pulseOutLATBWork_M1 `i `uc `uc ]
"2996
[; ;MotorDrive.c: 2996:     pulseOutLATC |= (UB) (pulseOutLATCWork_M0 | pulseOutLATCWork_M1);
[e =| _pulseOutLATC -> -> | -> _pulseOutLATCWork_M0 `i -> _pulseOutLATCWork_M1 `i `uc `uc ]
"2999
[; ;MotorDrive.c: 2999:     LATA = pulseOutLATA;
[e = _LATA _pulseOutLATA ]
"3000
[; ;MotorDrive.c: 3000:     LATB = pulseOutLATB;
[e = _LATB _pulseOutLATB ]
"3001
[; ;MotorDrive.c: 3001:     LATC = pulseOutLATC;
[e = _LATC _pulseOutLATC ]
"3003
[; ;MotorDrive.c: 3003: }
[e :UE 759 ]
}
"3014
[; ;MotorDrive.c: 3014: void SetPulseOutLATxWork_M0_FWD_POL0_P1(void)
[v _SetPulseOutLATxWork_M0_FWD_POL0_P1 `(v ~T0 @X0 1 ef ]
"3015
[; ;MotorDrive.c: 3015: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL0_P1 ]
[f ]
"3016
[; ;MotorDrive.c: 3016:     pulseOutLATAWork_M0 = 0x10;
[e = _pulseOutLATAWork_M0 -> -> 16 `i `uc ]
"3017
[; ;MotorDrive.c: 3017:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3018
[; ;MotorDrive.c: 3018:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3020
[; ;MotorDrive.c: 3020:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL0_P2;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL0_P2 ]
"3021
[; ;MotorDrive.c: 3021:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3022
[; ;MotorDrive.c: 3022: }
[e :UE 760 ]
}
"3026
[; ;MotorDrive.c: 3026: void SetPulseOutLATxWork_M0_FWD_POL0_P2(void)
[v _SetPulseOutLATxWork_M0_FWD_POL0_P2 `(v ~T0 @X0 1 ef ]
"3027
[; ;MotorDrive.c: 3027: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL0_P2 ]
[f ]
"3028
[; ;MotorDrive.c: 3028:     pulseOutLATAWork_M0 = 0x02;
[e = _pulseOutLATAWork_M0 -> -> 2 `i `uc ]
"3029
[; ;MotorDrive.c: 3029:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3030
[; ;MotorDrive.c: 3030:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3032
[; ;MotorDrive.c: 3032:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL0_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL0_OFF ]
"3033
[; ;MotorDrive.c: 3033:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3034
[; ;MotorDrive.c: 3034: }
[e :UE 761 ]
}
"3038
[; ;MotorDrive.c: 3038: void SetPulseOutLATxWork_M0_FWD_POL0_OFF(void)
[v _SetPulseOutLATxWork_M0_FWD_POL0_OFF `(v ~T0 @X0 1 ef ]
"3039
[; ;MotorDrive.c: 3039: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL0_OFF ]
[f ]
"3040
[; ;MotorDrive.c: 3040:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3041
[; ;MotorDrive.c: 3041:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3042
[; ;MotorDrive.c: 3042:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3044
[; ;MotorDrive.c: 3044:     polarityBit ^= 0x01;
[e =^ _polarityBit -> -> 1 `i `uc ]
"3046
[; ;MotorDrive.c: 3046:     if (addShakePulseBit & 0x01) {
[e $ ! != & -> _addShakePulseBit `i -> 1 `i -> 0 `i 763  ]
{
"3047
[; ;MotorDrive.c: 3047:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL1_P0;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL1_P0 ]
"3048
[; ;MotorDrive.c: 3048:     } else {
}
[e $U 764  ]
[e :U 763 ]
{
"3049
[; ;MotorDrive.c: 3049:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL1_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL1_P1 ]
"3050
[; ;MotorDrive.c: 3050:     }
}
[e :U 764 ]
"3052
[; ;MotorDrive.c: 3052:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3054
[; ;MotorDrive.c: 3054: }
[e :UE 762 ]
}
"3059
[; ;MotorDrive.c: 3059: void SetPulseOutLATxWork_M0_FWD_POL1_P1(void)
[v _SetPulseOutLATxWork_M0_FWD_POL1_P1 `(v ~T0 @X0 1 ef ]
"3060
[; ;MotorDrive.c: 3060: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL1_P1 ]
[f ]
"3061
[; ;MotorDrive.c: 3061:     pulseOutLATAWork_M0 = 0x20;
[e = _pulseOutLATAWork_M0 -> -> 32 `i `uc ]
"3062
[; ;MotorDrive.c: 3062:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3063
[; ;MotorDrive.c: 3063:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3065
[; ;MotorDrive.c: 3065:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL1_P2;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL1_P2 ]
"3066
[; ;MotorDrive.c: 3066:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3067
[; ;MotorDrive.c: 3067: }
[e :UE 765 ]
}
"3071
[; ;MotorDrive.c: 3071: void SetPulseOutLATxWork_M0_FWD_POL1_P2(void)
[v _SetPulseOutLATxWork_M0_FWD_POL1_P2 `(v ~T0 @X0 1 ef ]
"3072
[; ;MotorDrive.c: 3072: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL1_P2 ]
[f ]
"3073
[; ;MotorDrive.c: 3073:     pulseOutLATAWork_M0 = 0x00;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3074
[; ;MotorDrive.c: 3074:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3075
[; ;MotorDrive.c: 3075:     pulseOutLATCWork_M0 = 0x02;
[e = _pulseOutLATCWork_M0 -> -> 2 `i `uc ]
"3077
[; ;MotorDrive.c: 3077:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL1_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL1_OFF ]
"3078
[; ;MotorDrive.c: 3078:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3079
[; ;MotorDrive.c: 3079: }
[e :UE 766 ]
}
"3083
[; ;MotorDrive.c: 3083: void SetPulseOutLATxWork_M0_FWD_POL1_OFF(void)
[v _SetPulseOutLATxWork_M0_FWD_POL1_OFF `(v ~T0 @X0 1 ef ]
"3084
[; ;MotorDrive.c: 3084: {
{
[e :U _SetPulseOutLATxWork_M0_FWD_POL1_OFF ]
[f ]
"3085
[; ;MotorDrive.c: 3085:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3086
[; ;MotorDrive.c: 3086:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3087
[; ;MotorDrive.c: 3087:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3089
[; ;MotorDrive.c: 3089:     polarityBit ^= 0x01;
[e =^ _polarityBit -> -> 1 `i `uc ]
"3091
[; ;MotorDrive.c: 3091:     if (addShakePulseBit & 0x01) {
[e $ ! != & -> _addShakePulseBit `i -> 1 `i -> 0 `i 768  ]
{
"3092
[; ;MotorDrive.c: 3092:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL0_P0;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL0_P0 ]
"3093
[; ;MotorDrive.c: 3093:     } else {
}
[e $U 769  ]
[e :U 768 ]
{
"3094
[; ;MotorDrive.c: 3094:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL0_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL0_P1 ]
"3095
[; ;MotorDrive.c: 3095:     }
}
[e :U 769 ]
"3097
[; ;MotorDrive.c: 3097:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3099
[; ;MotorDrive.c: 3099: }
[e :UE 767 ]
}
"3104
[; ;MotorDrive.c: 3104: void SetPulseOutLATxWork_M0_REV_POL0_P1(void)
[v _SetPulseOutLATxWork_M0_REV_POL0_P1 `(v ~T0 @X0 1 ef ]
"3105
[; ;MotorDrive.c: 3105: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL0_P1 ]
[f ]
"3106
[; ;MotorDrive.c: 3106:     pulseOutLATAWork_M0 = 0x00;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3107
[; ;MotorDrive.c: 3107:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3108
[; ;MotorDrive.c: 3108:     pulseOutLATCWork_M0 = 0x02;
[e = _pulseOutLATCWork_M0 -> -> 2 `i `uc ]
"3110
[; ;MotorDrive.c: 3110:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL0_P2;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL0_P2 ]
"3111
[; ;MotorDrive.c: 3111:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3112
[; ;MotorDrive.c: 3112: }
[e :UE 770 ]
}
"3116
[; ;MotorDrive.c: 3116: void SetPulseOutLATxWork_M0_REV_POL0_P2(void)
[v _SetPulseOutLATxWork_M0_REV_POL0_P2 `(v ~T0 @X0 1 ef ]
"3117
[; ;MotorDrive.c: 3117: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL0_P2 ]
[f ]
"3118
[; ;MotorDrive.c: 3118:     pulseOutLATAWork_M0 = 0x20;
[e = _pulseOutLATAWork_M0 -> -> 32 `i `uc ]
"3119
[; ;MotorDrive.c: 3119:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3120
[; ;MotorDrive.c: 3120:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3122
[; ;MotorDrive.c: 3122:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL0_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL0_OFF ]
"3123
[; ;MotorDrive.c: 3123:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3124
[; ;MotorDrive.c: 3124: }
[e :UE 771 ]
}
"3128
[; ;MotorDrive.c: 3128: void SetPulseOutLATxWork_M0_REV_POL0_OFF(void)
[v _SetPulseOutLATxWork_M0_REV_POL0_OFF `(v ~T0 @X0 1 ef ]
"3129
[; ;MotorDrive.c: 3129: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL0_OFF ]
[f ]
"3130
[; ;MotorDrive.c: 3130:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3131
[; ;MotorDrive.c: 3131:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3132
[; ;MotorDrive.c: 3132:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3134
[; ;MotorDrive.c: 3134:     polarityBit ^= 0x01;
[e =^ _polarityBit -> -> 1 `i `uc ]
"3136
[; ;MotorDrive.c: 3136:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL1_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL1_P1 ]
"3137
[; ;MotorDrive.c: 3137:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3138
[; ;MotorDrive.c: 3138: }
[e :UE 772 ]
}
"3143
[; ;MotorDrive.c: 3143: void SetPulseOutLATxWork_M0_REV_POL1_P1(void)
[v _SetPulseOutLATxWork_M0_REV_POL1_P1 `(v ~T0 @X0 1 ef ]
"3144
[; ;MotorDrive.c: 3144: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL1_P1 ]
[f ]
"3145
[; ;MotorDrive.c: 3145:     pulseOutLATAWork_M0 = 0x02;
[e = _pulseOutLATAWork_M0 -> -> 2 `i `uc ]
"3146
[; ;MotorDrive.c: 3146:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3147
[; ;MotorDrive.c: 3147:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3149
[; ;MotorDrive.c: 3149:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL1_P2;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL1_P2 ]
"3150
[; ;MotorDrive.c: 3150:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3151
[; ;MotorDrive.c: 3151: }
[e :UE 773 ]
}
"3155
[; ;MotorDrive.c: 3155: void SetPulseOutLATxWork_M0_REV_POL1_P2(void)
[v _SetPulseOutLATxWork_M0_REV_POL1_P2 `(v ~T0 @X0 1 ef ]
"3156
[; ;MotorDrive.c: 3156: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL1_P2 ]
[f ]
"3157
[; ;MotorDrive.c: 3157:     pulseOutLATAWork_M0 = 0x10;
[e = _pulseOutLATAWork_M0 -> -> 16 `i `uc ]
"3158
[; ;MotorDrive.c: 3158:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3159
[; ;MotorDrive.c: 3159:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3161
[; ;MotorDrive.c: 3161:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL1_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL1_OFF ]
"3162
[; ;MotorDrive.c: 3162:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3163
[; ;MotorDrive.c: 3163: }
[e :UE 774 ]
}
"3167
[; ;MotorDrive.c: 3167: void SetPulseOutLATxWork_M0_REV_POL1_OFF(void)
[v _SetPulseOutLATxWork_M0_REV_POL1_OFF `(v ~T0 @X0 1 ef ]
"3168
[; ;MotorDrive.c: 3168: {
{
[e :U _SetPulseOutLATxWork_M0_REV_POL1_OFF ]
[f ]
"3169
[; ;MotorDrive.c: 3169:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3170
[; ;MotorDrive.c: 3170:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3171
[; ;MotorDrive.c: 3171:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3173
[; ;MotorDrive.c: 3173:     polarityBit ^= 0x01;
[e =^ _polarityBit -> -> 1 `i `uc ]
"3175
[; ;MotorDrive.c: 3175:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_REV_POL0_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_REV_POL0_P1 ]
"3176
[; ;MotorDrive.c: 3176:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3177
[; ;MotorDrive.c: 3177: }
[e :UE 775 ]
}
"3183
[; ;MotorDrive.c: 3183: void SetPulseOutLATxWork_M1_FWD_POL0_P1(void)
[v _SetPulseOutLATxWork_M1_FWD_POL0_P1 `(v ~T0 @X0 1 ef ]
"3184
[; ;MotorDrive.c: 3184: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL0_P1 ]
[f ]
"3185
[; ;MotorDrive.c: 3185:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3186
[; ;MotorDrive.c: 3186:     pulseOutLATBWork_M1 = 0x80;
[e = _pulseOutLATBWork_M1 -> -> 128 `i `uc ]
"3187
[; ;MotorDrive.c: 3187:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3189
[; ;MotorDrive.c: 3189:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL0_P2;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL0_P2 ]
"3190
[; ;MotorDrive.c: 3190:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3191
[; ;MotorDrive.c: 3191: }
[e :UE 776 ]
}
"3195
[; ;MotorDrive.c: 3195: void SetPulseOutLATxWork_M1_FWD_POL0_P2(void)
[v _SetPulseOutLATxWork_M1_FWD_POL0_P2 `(v ~T0 @X0 1 ef ]
"3196
[; ;MotorDrive.c: 3196: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL0_P2 ]
[f ]
"3197
[; ;MotorDrive.c: 3197:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3198
[; ;MotorDrive.c: 3198:     pulseOutLATBWork_M1 = 0x00;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3199
[; ;MotorDrive.c: 3199:     pulseOutLATCWork_M1 = 0x04;
[e = _pulseOutLATCWork_M1 -> -> 4 `i `uc ]
"3201
[; ;MotorDrive.c: 3201:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL0_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL0_OFF ]
"3202
[; ;MotorDrive.c: 3202:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3203
[; ;MotorDrive.c: 3203: }
[e :UE 777 ]
}
"3207
[; ;MotorDrive.c: 3207: void SetPulseOutLATxWork_M1_FWD_POL0_OFF(void)
[v _SetPulseOutLATxWork_M1_FWD_POL0_OFF `(v ~T0 @X0 1 ef ]
"3208
[; ;MotorDrive.c: 3208: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL0_OFF ]
[f ]
"3209
[; ;MotorDrive.c: 3209:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3210
[; ;MotorDrive.c: 3210:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3211
[; ;MotorDrive.c: 3211:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3213
[; ;MotorDrive.c: 3213:     polarityBit ^= 0x02;
[e =^ _polarityBit -> -> 2 `i `uc ]
"3215
[; ;MotorDrive.c: 3215:     if (addShakePulseBit & 0x02) {
[e $ ! != & -> _addShakePulseBit `i -> 2 `i -> 0 `i 779  ]
{
"3216
[; ;MotorDrive.c: 3216:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL1_P0;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL1_P0 ]
"3217
[; ;MotorDrive.c: 3217:     } else {
}
[e $U 780  ]
[e :U 779 ]
{
"3218
[; ;MotorDrive.c: 3218:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL1_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL1_P1 ]
"3219
[; ;MotorDrive.c: 3219:     }
}
[e :U 780 ]
"3221
[; ;MotorDrive.c: 3221:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3223
[; ;MotorDrive.c: 3223: }
[e :UE 778 ]
}
"3228
[; ;MotorDrive.c: 3228: void SetPulseOutLATxWork_M1_FWD_POL1_P1(void)
[v _SetPulseOutLATxWork_M1_FWD_POL1_P1 `(v ~T0 @X0 1 ef ]
"3229
[; ;MotorDrive.c: 3229: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL1_P1 ]
[f ]
"3230
[; ;MotorDrive.c: 3230:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3231
[; ;MotorDrive.c: 3231:     pulseOutLATBWork_M1 = 0x20;
[e = _pulseOutLATBWork_M1 -> -> 32 `i `uc ]
"3232
[; ;MotorDrive.c: 3232:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3234
[; ;MotorDrive.c: 3234:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL1_P2;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL1_P2 ]
"3235
[; ;MotorDrive.c: 3235:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3236
[; ;MotorDrive.c: 3236: }
[e :UE 781 ]
}
"3240
[; ;MotorDrive.c: 3240: void SetPulseOutLATxWork_M1_FWD_POL1_P2(void)
[v _SetPulseOutLATxWork_M1_FWD_POL1_P2 `(v ~T0 @X0 1 ef ]
"3241
[; ;MotorDrive.c: 3241: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL1_P2 ]
[f ]
"3242
[; ;MotorDrive.c: 3242:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3243
[; ;MotorDrive.c: 3243:     pulseOutLATBWork_M1 = 0x00;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3244
[; ;MotorDrive.c: 3244:     pulseOutLATCWork_M1 = 0x08;
[e = _pulseOutLATCWork_M1 -> -> 8 `i `uc ]
"3246
[; ;MotorDrive.c: 3246:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL1_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL1_OFF ]
"3247
[; ;MotorDrive.c: 3247:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3248
[; ;MotorDrive.c: 3248: }
[e :UE 782 ]
}
"3252
[; ;MotorDrive.c: 3252: void SetPulseOutLATxWork_M1_FWD_POL1_OFF(void)
[v _SetPulseOutLATxWork_M1_FWD_POL1_OFF `(v ~T0 @X0 1 ef ]
"3253
[; ;MotorDrive.c: 3253: {
{
[e :U _SetPulseOutLATxWork_M1_FWD_POL1_OFF ]
[f ]
"3254
[; ;MotorDrive.c: 3254:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3255
[; ;MotorDrive.c: 3255:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3256
[; ;MotorDrive.c: 3256:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3258
[; ;MotorDrive.c: 3258:     polarityBit ^= 0x02;
[e =^ _polarityBit -> -> 2 `i `uc ]
"3260
[; ;MotorDrive.c: 3260:     if (addShakePulseBit & 0x02) {
[e $ ! != & -> _addShakePulseBit `i -> 2 `i -> 0 `i 784  ]
{
"3261
[; ;MotorDrive.c: 3261:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL0_P0;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL0_P0 ]
"3262
[; ;MotorDrive.c: 3262:     } else {
}
[e $U 785  ]
[e :U 784 ]
{
"3263
[; ;MotorDrive.c: 3263:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL0_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL0_P1 ]
"3264
[; ;MotorDrive.c: 3264:     }
}
[e :U 785 ]
"3266
[; ;MotorDrive.c: 3266:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3268
[; ;MotorDrive.c: 3268: }
[e :UE 783 ]
}
"3273
[; ;MotorDrive.c: 3273: void SetPulseOutLATxWork_M1_REV_POL0_P1(void)
[v _SetPulseOutLATxWork_M1_REV_POL0_P1 `(v ~T0 @X0 1 ef ]
"3274
[; ;MotorDrive.c: 3274: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL0_P1 ]
[f ]
"3275
[; ;MotorDrive.c: 3275:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3276
[; ;MotorDrive.c: 3276:     pulseOutLATBWork_M1 = 0x00;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3277
[; ;MotorDrive.c: 3277:     pulseOutLATCWork_M1 = 0x08;
[e = _pulseOutLATCWork_M1 -> -> 8 `i `uc ]
"3279
[; ;MotorDrive.c: 3279:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL0_P2;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL0_P2 ]
"3280
[; ;MotorDrive.c: 3280:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3281
[; ;MotorDrive.c: 3281: }
[e :UE 786 ]
}
"3285
[; ;MotorDrive.c: 3285: void SetPulseOutLATxWork_M1_REV_POL0_P2(void)
[v _SetPulseOutLATxWork_M1_REV_POL0_P2 `(v ~T0 @X0 1 ef ]
"3286
[; ;MotorDrive.c: 3286: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL0_P2 ]
[f ]
"3287
[; ;MotorDrive.c: 3287:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3288
[; ;MotorDrive.c: 3288:     pulseOutLATBWork_M1 = 0x20;
[e = _pulseOutLATBWork_M1 -> -> 32 `i `uc ]
"3289
[; ;MotorDrive.c: 3289:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3291
[; ;MotorDrive.c: 3291:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL0_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL0_OFF ]
"3292
[; ;MotorDrive.c: 3292:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3293
[; ;MotorDrive.c: 3293: }
[e :UE 787 ]
}
"3297
[; ;MotorDrive.c: 3297: void SetPulseOutLATxWork_M1_REV_POL0_OFF(void)
[v _SetPulseOutLATxWork_M1_REV_POL0_OFF `(v ~T0 @X0 1 ef ]
"3298
[; ;MotorDrive.c: 3298: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL0_OFF ]
[f ]
"3299
[; ;MotorDrive.c: 3299:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3300
[; ;MotorDrive.c: 3300:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3301
[; ;MotorDrive.c: 3301:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3303
[; ;MotorDrive.c: 3303:     polarityBit ^= 0x02;
[e =^ _polarityBit -> -> 2 `i `uc ]
"3305
[; ;MotorDrive.c: 3305:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL1_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL1_P1 ]
"3306
[; ;MotorDrive.c: 3306:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3307
[; ;MotorDrive.c: 3307: }
[e :UE 788 ]
}
"3312
[; ;MotorDrive.c: 3312: void SetPulseOutLATxWork_M1_REV_POL1_P1(void)
[v _SetPulseOutLATxWork_M1_REV_POL1_P1 `(v ~T0 @X0 1 ef ]
"3313
[; ;MotorDrive.c: 3313: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL1_P1 ]
[f ]
"3314
[; ;MotorDrive.c: 3314:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3315
[; ;MotorDrive.c: 3315:     pulseOutLATBWork_M1 = 0x00;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3316
[; ;MotorDrive.c: 3316:     pulseOutLATCWork_M1 = 0x04;
[e = _pulseOutLATCWork_M1 -> -> 4 `i `uc ]
"3318
[; ;MotorDrive.c: 3318:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL1_P2;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL1_P2 ]
"3319
[; ;MotorDrive.c: 3319:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3320
[; ;MotorDrive.c: 3320: }
[e :UE 789 ]
}
"3324
[; ;MotorDrive.c: 3324: void SetPulseOutLATxWork_M1_REV_POL1_P2(void)
[v _SetPulseOutLATxWork_M1_REV_POL1_P2 `(v ~T0 @X0 1 ef ]
"3325
[; ;MotorDrive.c: 3325: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL1_P2 ]
[f ]
"3326
[; ;MotorDrive.c: 3326:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3327
[; ;MotorDrive.c: 3327:     pulseOutLATBWork_M1 = 0x80;
[e = _pulseOutLATBWork_M1 -> -> 128 `i `uc ]
"3328
[; ;MotorDrive.c: 3328:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3330
[; ;MotorDrive.c: 3330:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL1_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL1_OFF ]
"3331
[; ;MotorDrive.c: 3331:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3332
[; ;MotorDrive.c: 3332: }
[e :UE 790 ]
}
"3336
[; ;MotorDrive.c: 3336: void SetPulseOutLATxWork_M1_REV_POL1_OFF(void)
[v _SetPulseOutLATxWork_M1_REV_POL1_OFF `(v ~T0 @X0 1 ef ]
"3337
[; ;MotorDrive.c: 3337: {
{
[e :U _SetPulseOutLATxWork_M1_REV_POL1_OFF ]
[f ]
"3338
[; ;MotorDrive.c: 3338:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3339
[; ;MotorDrive.c: 3339:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3340
[; ;MotorDrive.c: 3340:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3342
[; ;MotorDrive.c: 3342:     polarityBit ^= 0x02;
[e =^ _polarityBit -> -> 2 `i `uc ]
"3344
[; ;MotorDrive.c: 3344:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_REV_POL0_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_REV_POL0_P1 ]
"3345
[; ;MotorDrive.c: 3345:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3346
[; ;MotorDrive.c: 3346: }
[e :UE 791 ]
}
"3353
[; ;MotorDrive.c: 3353: void SetPulseOutLATxWork_M0_SHAKE_POL0_P0(void)
[v _SetPulseOutLATxWork_M0_SHAKE_POL0_P0 `(v ~T0 @X0 1 ef ]
"3354
[; ;MotorDrive.c: 3354: {
{
[e :U _SetPulseOutLATxWork_M0_SHAKE_POL0_P0 ]
[f ]
"3355
[; ;MotorDrive.c: 3355:     pulseOutLATAWork_M0 = 0x10;
[e = _pulseOutLATAWork_M0 -> -> 16 `i `uc ]
"3356
[; ;MotorDrive.c: 3356:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3357
[; ;MotorDrive.c: 3357:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3359
[; ;MotorDrive.c: 3359:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL0_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL0_OFF ]
"3360
[; ;MotorDrive.c: 3360:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3361
[; ;MotorDrive.c: 3361: }
[e :UE 792 ]
}
"3365
[; ;MotorDrive.c: 3365: void SetPulseOutLATxWork_M0_SHAKE_POL0_OFF(void)
[v _SetPulseOutLATxWork_M0_SHAKE_POL0_OFF `(v ~T0 @X0 1 ef ]
"3366
[; ;MotorDrive.c: 3366: {
{
[e :U _SetPulseOutLATxWork_M0_SHAKE_POL0_OFF ]
[f ]
"3367
[; ;MotorDrive.c: 3367:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3368
[; ;MotorDrive.c: 3368:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3369
[; ;MotorDrive.c: 3369:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3372
[; ;MotorDrive.c: 3372:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"3373
[; ;MotorDrive.c: 3373:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3374
[; ;MotorDrive.c: 3374:     dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"3376
[; ;MotorDrive.c: 3376:     m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL0_OPEN;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL0_OPEN ]
"3377
[; ;MotorDrive.c: 3377:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3378
[; ;MotorDrive.c: 3378:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3379
[; ;MotorDrive.c: 3379:     reqComparatorOnBit |= 0x01;
[e =| _reqComparatorOnBit -> -> 1 `i `uc ]
"3380
[; ;MotorDrive.c: 3380: }
[e :UE 793 ]
}
"3384
[; ;MotorDrive.c: 3384: void SetDataTRISxWork_M0_SPK_POL0_OPEN(void)
[v _SetDataTRISxWork_M0_SPK_POL0_OPEN `(v ~T0 @X0 1 ef ]
"3385
[; ;MotorDrive.c: 3385: {
{
[e :U _SetDataTRISxWork_M0_SPK_POL0_OPEN ]
[f ]
"3386
[; ;MotorDrive.c: 3386:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"3387
[; ;MotorDrive.c: 3387:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3388
[; ;MotorDrive.c: 3388:     dataTRISCWork_M0 = 0x02;
[e = _dataTRISCWork_M0 -> -> 2 `i `uc ]
"3390
[; ;MotorDrive.c: 3390:     m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL0_SHORT;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL0_SHORT ]
"3391
[; ;MotorDrive.c: 3391:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3392
[; ;MotorDrive.c: 3392: }
[e :UE 794 ]
}
"3396
[; ;MotorDrive.c: 3396: void SetDataTRISxWork_M0_SPK_POL0_SHORT(void)
[v _SetDataTRISxWork_M0_SPK_POL0_SHORT `(v ~T0 @X0 1 ef ]
"3397
[; ;MotorDrive.c: 3397: {
{
[e :U _SetDataTRISxWork_M0_SPK_POL0_SHORT ]
[f ]
"3398
[; ;MotorDrive.c: 3398:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"3399
[; ;MotorDrive.c: 3399:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3400
[; ;MotorDrive.c: 3400:     dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"3402
[; ;MotorDrive.c: 3402:     if (m0PulseOutStep == ID_PULSE_OUT_STEP_P1) {
[e $ ! == -> _m0PulseOutStep `i -> . `E4007 3 `i 796  ]
{
"3403
[; ;MotorDrive.c: 3403:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL0_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL0_P1 ]
"3404
[; ;MotorDrive.c: 3404:         reqComparatorOffBit |= 0x01;
[e =| _reqComparatorOffBit -> -> 1 `i `uc ]
"3405
[; ;MotorDrive.c: 3405:     } else {
}
[e $U 797  ]
[e :U 796 ]
{
"3406
[; ;MotorDrive.c: 3406:         m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL0_OPEN;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL0_OPEN ]
"3407
[; ;MotorDrive.c: 3407:     }
}
[e :U 797 ]
"3409
[; ;MotorDrive.c: 3409:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3410
[; ;MotorDrive.c: 3410:     reqVrsCheckBit |= 0x01;
[e =| _reqVrsCheckBit -> -> 1 `i `uc ]
"3411
[; ;MotorDrive.c: 3411: }
[e :UE 795 ]
}
"3416
[; ;MotorDrive.c: 3416: void SetPulseOutLATxWork_M0_SHAKE_POL1_P0(void)
[v _SetPulseOutLATxWork_M0_SHAKE_POL1_P0 `(v ~T0 @X0 1 ef ]
"3417
[; ;MotorDrive.c: 3417: {
{
[e :U _SetPulseOutLATxWork_M0_SHAKE_POL1_P0 ]
[f ]
"3418
[; ;MotorDrive.c: 3418:     pulseOutLATAWork_M0 = 0x20;
[e = _pulseOutLATAWork_M0 -> -> 32 `i `uc ]
"3419
[; ;MotorDrive.c: 3419:     pulseOutLATBWork_M0 = 0x00;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3420
[; ;MotorDrive.c: 3420:     pulseOutLATCWork_M0 = 0x00;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3422
[; ;MotorDrive.c: 3422:     m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_SHAKE_POL1_OFF;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_SHAKE_POL1_OFF ]
"3423
[; ;MotorDrive.c: 3423:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3424
[; ;MotorDrive.c: 3424: }
[e :UE 798 ]
}
"3428
[; ;MotorDrive.c: 3428: void SetPulseOutLATxWork_M0_SHAKE_POL1_OFF(void)
[v _SetPulseOutLATxWork_M0_SHAKE_POL1_OFF `(v ~T0 @X0 1 ef ]
"3429
[; ;MotorDrive.c: 3429: {
{
[e :U _SetPulseOutLATxWork_M0_SHAKE_POL1_OFF ]
[f ]
"3430
[; ;MotorDrive.c: 3430:     pulseOutLATAWork_M0 = 0;
[e = _pulseOutLATAWork_M0 -> -> 0 `i `uc ]
"3431
[; ;MotorDrive.c: 3431:     pulseOutLATBWork_M0 = 0;
[e = _pulseOutLATBWork_M0 -> -> 0 `i `uc ]
"3432
[; ;MotorDrive.c: 3432:     pulseOutLATCWork_M0 = 0;
[e = _pulseOutLATCWork_M0 -> -> 0 `i `uc ]
"3435
[; ;MotorDrive.c: 3435:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"3436
[; ;MotorDrive.c: 3436:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3437
[; ;MotorDrive.c: 3437:     dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"3439
[; ;MotorDrive.c: 3439:     m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL1_OPEN;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL1_OPEN ]
"3440
[; ;MotorDrive.c: 3440:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3441
[; ;MotorDrive.c: 3441:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3442
[; ;MotorDrive.c: 3442:     reqComparatorOnBit |= 0x01;
[e =| _reqComparatorOnBit -> -> 1 `i `uc ]
"3443
[; ;MotorDrive.c: 3443: }
[e :UE 799 ]
}
"3447
[; ;MotorDrive.c: 3447: void SetDataTRISxWork_M0_SPK_POL1_OPEN(void)
[v _SetDataTRISxWork_M0_SPK_POL1_OPEN `(v ~T0 @X0 1 ef ]
"3448
[; ;MotorDrive.c: 3448: {
{
[e :U _SetDataTRISxWork_M0_SPK_POL1_OPEN ]
[f ]
"3449
[; ;MotorDrive.c: 3449:     dataTRISAWork_M0 = 0x02;
[e = _dataTRISAWork_M0 -> -> 2 `i `uc ]
"3450
[; ;MotorDrive.c: 3450:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3451
[; ;MotorDrive.c: 3451:     dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"3453
[; ;MotorDrive.c: 3453:     m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL1_SHORT;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL1_SHORT ]
"3454
[; ;MotorDrive.c: 3454:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3455
[; ;MotorDrive.c: 3455: }
[e :UE 800 ]
}
"3459
[; ;MotorDrive.c: 3459: void SetDataTRISxWork_M0_SPK_POL1_SHORT(void)
[v _SetDataTRISxWork_M0_SPK_POL1_SHORT `(v ~T0 @X0 1 ef ]
"3460
[; ;MotorDrive.c: 3460: {
{
[e :U _SetDataTRISxWork_M0_SPK_POL1_SHORT ]
[f ]
"3461
[; ;MotorDrive.c: 3461:     dataTRISAWork_M0 = 0x00;
[e = _dataTRISAWork_M0 -> -> 0 `i `uc ]
"3462
[; ;MotorDrive.c: 3462:     dataTRISBWork_M0 = 0x00;
[e = _dataTRISBWork_M0 -> -> 0 `i `uc ]
"3463
[; ;MotorDrive.c: 3463:     dataTRISCWork_M0 = 0x00;
[e = _dataTRISCWork_M0 -> -> 0 `i `uc ]
"3465
[; ;MotorDrive.c: 3465:     if (m0PulseOutStep == ID_PULSE_OUT_STEP_P1) {
[e $ ! == -> _m0PulseOutStep `i -> . `E4007 3 `i 802  ]
{
"3466
[; ;MotorDrive.c: 3466:         m0PulseOutChangeFunc = SetPulseOutLATxWork_M0_FWD_POL1_P1;
[e = _m0PulseOutChangeFunc &U _SetPulseOutLATxWork_M0_FWD_POL1_P1 ]
"3467
[; ;MotorDrive.c: 3467:         reqComparatorOffBit |= 0x01;
[e =| _reqComparatorOffBit -> -> 1 `i `uc ]
"3468
[; ;MotorDrive.c: 3468:     } else {
}
[e $U 803  ]
[e :U 802 ]
{
"3469
[; ;MotorDrive.c: 3469:         m0PulseOutChangeFunc = SetDataTRISxWork_M0_SPK_POL1_OPEN;
[e = _m0PulseOutChangeFunc &U _SetDataTRISxWork_M0_SPK_POL1_OPEN ]
"3470
[; ;MotorDrive.c: 3470:     }
}
[e :U 803 ]
"3472
[; ;MotorDrive.c: 3472:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3473
[; ;MotorDrive.c: 3473:     reqVrsCheckBit |= 0x01;
[e =| _reqVrsCheckBit -> -> 1 `i `uc ]
"3474
[; ;MotorDrive.c: 3474: }
[e :UE 801 ]
}
"3480
[; ;MotorDrive.c: 3480: void SetPulseOutLATxWork_M1_SHAKE_POL0_P0(void)
[v _SetPulseOutLATxWork_M1_SHAKE_POL0_P0 `(v ~T0 @X0 1 ef ]
"3481
[; ;MotorDrive.c: 3481: {
{
[e :U _SetPulseOutLATxWork_M1_SHAKE_POL0_P0 ]
[f ]
"3482
[; ;MotorDrive.c: 3482:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3483
[; ;MotorDrive.c: 3483:     pulseOutLATBWork_M1 = 0x80;
[e = _pulseOutLATBWork_M1 -> -> 128 `i `uc ]
"3484
[; ;MotorDrive.c: 3484:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3486
[; ;MotorDrive.c: 3486:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL0_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL0_OFF ]
"3487
[; ;MotorDrive.c: 3487:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3488
[; ;MotorDrive.c: 3488: }
[e :UE 804 ]
}
"3492
[; ;MotorDrive.c: 3492: void SetPulseOutLATxWork_M1_SHAKE_POL0_OFF(void)
[v _SetPulseOutLATxWork_M1_SHAKE_POL0_OFF `(v ~T0 @X0 1 ef ]
"3493
[; ;MotorDrive.c: 3493: {
{
[e :U _SetPulseOutLATxWork_M1_SHAKE_POL0_OFF ]
[f ]
"3494
[; ;MotorDrive.c: 3494:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3495
[; ;MotorDrive.c: 3495:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3496
[; ;MotorDrive.c: 3496:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3499
[; ;MotorDrive.c: 3499:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3500
[; ;MotorDrive.c: 3500:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3501
[; ;MotorDrive.c: 3501:     dataTRISCWork_M1 = 0x00;
[e = _dataTRISCWork_M1 -> -> 0 `i `uc ]
"3503
[; ;MotorDrive.c: 3503:     m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL0_OPEN;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL0_OPEN ]
"3504
[; ;MotorDrive.c: 3504:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3505
[; ;MotorDrive.c: 3505:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3506
[; ;MotorDrive.c: 3506:     reqComparatorOnBit |= 0x02;
[e =| _reqComparatorOnBit -> -> 2 `i `uc ]
"3507
[; ;MotorDrive.c: 3507: }
[e :UE 805 ]
}
"3511
[; ;MotorDrive.c: 3511: void SetDataTRISxWork_M1_SPK_POL0_OPEN(void)
[v _SetDataTRISxWork_M1_SPK_POL0_OPEN `(v ~T0 @X0 1 ef ]
"3512
[; ;MotorDrive.c: 3512: {
{
[e :U _SetDataTRISxWork_M1_SPK_POL0_OPEN ]
[f ]
"3513
[; ;MotorDrive.c: 3513:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3514
[; ;MotorDrive.c: 3514:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3515
[; ;MotorDrive.c: 3515:     dataTRISCWork_M1 = 0x08;
[e = _dataTRISCWork_M1 -> -> 8 `i `uc ]
"3517
[; ;MotorDrive.c: 3517:     m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL0_SHORT;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL0_SHORT ]
"3518
[; ;MotorDrive.c: 3518:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3519
[; ;MotorDrive.c: 3519: }
[e :UE 806 ]
}
"3523
[; ;MotorDrive.c: 3523: void SetDataTRISxWork_M1_SPK_POL0_SHORT(void)
[v _SetDataTRISxWork_M1_SPK_POL0_SHORT `(v ~T0 @X0 1 ef ]
"3524
[; ;MotorDrive.c: 3524: {
{
[e :U _SetDataTRISxWork_M1_SPK_POL0_SHORT ]
[f ]
"3525
[; ;MotorDrive.c: 3525:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3526
[; ;MotorDrive.c: 3526:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3527
[; ;MotorDrive.c: 3527:     dataTRISCWork_M1 = 0x00;
[e = _dataTRISCWork_M1 -> -> 0 `i `uc ]
"3529
[; ;MotorDrive.c: 3529:     if (m1PulseOutStep == ID_PULSE_OUT_STEP_P1) {
[e $ ! == -> _m1PulseOutStep `i -> . `E4007 3 `i 808  ]
{
"3530
[; ;MotorDrive.c: 3530:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL0_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL0_P1 ]
"3531
[; ;MotorDrive.c: 3531:         reqComparatorOffBit |= 0x02;
[e =| _reqComparatorOffBit -> -> 2 `i `uc ]
"3532
[; ;MotorDrive.c: 3532:     } else {
}
[e $U 809  ]
[e :U 808 ]
{
"3533
[; ;MotorDrive.c: 3533:         m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL0_OPEN;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL0_OPEN ]
"3534
[; ;MotorDrive.c: 3534:     }
}
[e :U 809 ]
"3536
[; ;MotorDrive.c: 3536:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3537
[; ;MotorDrive.c: 3537:     reqVrsCheckBit |= 0x02;
[e =| _reqVrsCheckBit -> -> 2 `i `uc ]
"3538
[; ;MotorDrive.c: 3538: }
[e :UE 807 ]
}
"3543
[; ;MotorDrive.c: 3543: void SetPulseOutLATxWork_M1_SHAKE_POL1_P0(void)
[v _SetPulseOutLATxWork_M1_SHAKE_POL1_P0 `(v ~T0 @X0 1 ef ]
"3544
[; ;MotorDrive.c: 3544: {
{
[e :U _SetPulseOutLATxWork_M1_SHAKE_POL1_P0 ]
[f ]
"3545
[; ;MotorDrive.c: 3545:     pulseOutLATAWork_M1 = 0x00;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3546
[; ;MotorDrive.c: 3546:     pulseOutLATBWork_M1 = 0x20;
[e = _pulseOutLATBWork_M1 -> -> 32 `i `uc ]
"3547
[; ;MotorDrive.c: 3547:     pulseOutLATCWork_M1 = 0x00;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3549
[; ;MotorDrive.c: 3549:     m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_SHAKE_POL1_OFF;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_SHAKE_POL1_OFF ]
"3550
[; ;MotorDrive.c: 3550:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3551
[; ;MotorDrive.c: 3551: }
[e :UE 810 ]
}
"3555
[; ;MotorDrive.c: 3555: void SetPulseOutLATxWork_M1_SHAKE_POL1_OFF(void)
[v _SetPulseOutLATxWork_M1_SHAKE_POL1_OFF `(v ~T0 @X0 1 ef ]
"3556
[; ;MotorDrive.c: 3556: {
{
[e :U _SetPulseOutLATxWork_M1_SHAKE_POL1_OFF ]
[f ]
"3557
[; ;MotorDrive.c: 3557:     pulseOutLATAWork_M1 = 0;
[e = _pulseOutLATAWork_M1 -> -> 0 `i `uc ]
"3558
[; ;MotorDrive.c: 3558:     pulseOutLATBWork_M1 = 0;
[e = _pulseOutLATBWork_M1 -> -> 0 `i `uc ]
"3559
[; ;MotorDrive.c: 3559:     pulseOutLATCWork_M1 = 0;
[e = _pulseOutLATCWork_M1 -> -> 0 `i `uc ]
"3562
[; ;MotorDrive.c: 3562:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3563
[; ;MotorDrive.c: 3563:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3564
[; ;MotorDrive.c: 3564:     dataTRISCWork_M1 = 0x00;
[e = _dataTRISCWork_M1 -> -> 0 `i `uc ]
"3566
[; ;MotorDrive.c: 3566:     m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL1_OPEN;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL1_OPEN ]
"3567
[; ;MotorDrive.c: 3567:     OutRequestFlug = 1;
[e = _OutRequestFlug -> -> 1 `i `uc ]
"3568
[; ;MotorDrive.c: 3568:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3569
[; ;MotorDrive.c: 3569:     reqComparatorOnBit |= 0x02;
[e =| _reqComparatorOnBit -> -> 2 `i `uc ]
"3570
[; ;MotorDrive.c: 3570: }
[e :UE 811 ]
}
"3574
[; ;MotorDrive.c: 3574: void SetDataTRISxWork_M1_SPK_POL1_OPEN(void)
[v _SetDataTRISxWork_M1_SPK_POL1_OPEN `(v ~T0 @X0 1 ef ]
"3575
[; ;MotorDrive.c: 3575: {
{
[e :U _SetDataTRISxWork_M1_SPK_POL1_OPEN ]
[f ]
"3576
[; ;MotorDrive.c: 3576:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3577
[; ;MotorDrive.c: 3577:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3578
[; ;MotorDrive.c: 3578:     dataTRISCWork_M1 = 0x04;
[e = _dataTRISCWork_M1 -> -> 4 `i `uc ]
"3580
[; ;MotorDrive.c: 3580:     m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL1_SHORT;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL1_SHORT ]
"3581
[; ;MotorDrive.c: 3581:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3582
[; ;MotorDrive.c: 3582: }
[e :UE 812 ]
}
"3586
[; ;MotorDrive.c: 3586: void SetDataTRISxWork_M1_SPK_POL1_SHORT(void)
[v _SetDataTRISxWork_M1_SPK_POL1_SHORT `(v ~T0 @X0 1 ef ]
"3587
[; ;MotorDrive.c: 3587: {
{
[e :U _SetDataTRISxWork_M1_SPK_POL1_SHORT ]
[f ]
"3588
[; ;MotorDrive.c: 3588:     dataTRISAWork_M1 = 0x00;
[e = _dataTRISAWork_M1 -> -> 0 `i `uc ]
"3589
[; ;MotorDrive.c: 3589:     dataTRISBWork_M1 = 0x00;
[e = _dataTRISBWork_M1 -> -> 0 `i `uc ]
"3590
[; ;MotorDrive.c: 3590:     dataTRISCWork_M1 = 0x00;
[e = _dataTRISCWork_M1 -> -> 0 `i `uc ]
"3592
[; ;MotorDrive.c: 3592:     if (m1PulseOutStep == ID_PULSE_OUT_STEP_P1) {
[e $ ! == -> _m1PulseOutStep `i -> . `E4007 3 `i 814  ]
{
"3593
[; ;MotorDrive.c: 3593:         m1PulseOutChangeFunc = SetPulseOutLATxWork_M1_FWD_POL1_P1;
[e = _m1PulseOutChangeFunc &U _SetPulseOutLATxWork_M1_FWD_POL1_P1 ]
"3594
[; ;MotorDrive.c: 3594:         reqComparatorOffBit |= 0x02;
[e =| _reqComparatorOffBit -> -> 2 `i `uc ]
"3595
[; ;MotorDrive.c: 3595:     } else {
}
[e $U 815  ]
[e :U 814 ]
{
"3596
[; ;MotorDrive.c: 3596:         m1PulseOutChangeFunc = SetDataTRISxWork_M1_SPK_POL1_OPEN;
[e = _m1PulseOutChangeFunc &U _SetDataTRISxWork_M1_SPK_POL1_OPEN ]
"3597
[; ;MotorDrive.c: 3597:     }
}
[e :U 815 ]
"3599
[; ;MotorDrive.c: 3599:     OutTrisRequestFlug = 1;
[e = _OutTrisRequestFlug -> -> 1 `i `uc ]
"3600
[; ;MotorDrive.c: 3600:     reqVrsCheckBit |= 0x02;
[e =| _reqVrsCheckBit -> -> 2 `i `uc ]
"3601
[; ;MotorDrive.c: 3601: }
[e :UE 813 ]
}
